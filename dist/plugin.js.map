{"version":3,"file":"plugin.js","mappings":"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","sources":["webpack://zyllio-plugin-ionic-slider/./node_modules/@ionic/core/components/gesture-controller.js","webpack://zyllio-plugin-ionic-slider/./node_modules/@ionic/core/components/index2.js","webpack://zyllio-plugin-ionic-slider/./node_modules/@stencil/core/internal/client/shadow-css.js","webpack://zyllio-plugin-ionic-slider/./node_modules/@stencil/core/internal/client/ lazy ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack://zyllio-plugin-ionic-slider/webpack/bootstrap","webpack://zyllio-plugin-ionic-slider/webpack/runtime/define property getters","webpack://zyllio-plugin-ionic-slider/webpack/runtime/hasOwnProperty shorthand","webpack://zyllio-plugin-ionic-slider/webpack/runtime/make namespace object","webpack://zyllio-plugin-ionic-slider/./node_modules/@stencil/core/internal/client/index.js","webpack://zyllio-plugin-ionic-slider/./node_modules/@stencil/core/internal/app-data/index.js","webpack://zyllio-plugin-ionic-slider/./node_modules/@ionic/core/components/ionic-global.js","webpack://zyllio-plugin-ionic-slider/./node_modules/@ionic/core/components/index8.js","webpack://zyllio-plugin-ionic-slider/./node_modules/@ionic/core/components/helpers.js","webpack://zyllio-plugin-ionic-slider/./node_modules/@ionic/core/components/index7.js","webpack://zyllio-plugin-ionic-slider/./node_modules/@ionic/core/components/dir.js","webpack://zyllio-plugin-ionic-slider/./node_modules/@ionic/core/components/theme.js","webpack://zyllio-plugin-ionic-slider/./node_modules/@ionic/core/components/ion-range.js","webpack://zyllio-plugin-ionic-slider/./src/slider.component.ts","webpack://zyllio-plugin-ionic-slider/./src/slider.metadata.ts","webpack://zyllio-plugin-ionic-slider/./src/index.ts"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nclass GestureController {\n  constructor() {\n    this.gestureId = 0;\n    this.requestedStart = new Map();\n    this.disabledGestures = new Map();\n    this.disabledScroll = new Set();\n  }\n  /**\n   * Creates a gesture delegate based on the GestureConfig passed\n   */\n  createGesture(config) {\n    var _a;\n    return new GestureDelegate(this, this.newID(), config.name, (_a = config.priority) !== null && _a !== void 0 ? _a : 0, !!config.disableScroll);\n  }\n  /**\n   * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n   */\n  createBlocker(opts = {}) {\n    return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n  }\n  start(gestureName, id, priority) {\n    if (!this.canStart(gestureName)) {\n      this.requestedStart.delete(id);\n      return false;\n    }\n    this.requestedStart.set(id, priority);\n    return true;\n  }\n  capture(gestureName, id, priority) {\n    if (!this.start(gestureName, id, priority)) {\n      return false;\n    }\n    const requestedStart = this.requestedStart;\n    let maxPriority = -10000;\n    requestedStart.forEach((value) => {\n      maxPriority = Math.max(maxPriority, value);\n    });\n    if (maxPriority === priority) {\n      this.capturedId = id;\n      requestedStart.clear();\n      const event = new CustomEvent('ionGestureCaptured', { detail: { gestureName } });\n      document.dispatchEvent(event);\n      return true;\n    }\n    requestedStart.delete(id);\n    return false;\n  }\n  release(id) {\n    this.requestedStart.delete(id);\n    if (this.capturedId === id) {\n      this.capturedId = undefined;\n    }\n  }\n  disableGesture(gestureName, id) {\n    let set = this.disabledGestures.get(gestureName);\n    if (set === undefined) {\n      set = new Set();\n      this.disabledGestures.set(gestureName, set);\n    }\n    set.add(id);\n  }\n  enableGesture(gestureName, id) {\n    const set = this.disabledGestures.get(gestureName);\n    if (set !== undefined) {\n      set.delete(id);\n    }\n  }\n  disableScroll(id) {\n    this.disabledScroll.add(id);\n    if (this.disabledScroll.size === 1) {\n      document.body.classList.add(BACKDROP_NO_SCROLL);\n    }\n  }\n  enableScroll(id) {\n    this.disabledScroll.delete(id);\n    if (this.disabledScroll.size === 0) {\n      document.body.classList.remove(BACKDROP_NO_SCROLL);\n    }\n  }\n  canStart(gestureName) {\n    if (this.capturedId !== undefined) {\n      // a gesture already captured\n      return false;\n    }\n    if (this.isDisabled(gestureName)) {\n      return false;\n    }\n    return true;\n  }\n  isCaptured() {\n    return this.capturedId !== undefined;\n  }\n  isScrollDisabled() {\n    return this.disabledScroll.size > 0;\n  }\n  isDisabled(gestureName) {\n    const disabled = this.disabledGestures.get(gestureName);\n    if (disabled && disabled.size > 0) {\n      return true;\n    }\n    return false;\n  }\n  newID() {\n    this.gestureId++;\n    return this.gestureId;\n  }\n}\nclass GestureDelegate {\n  constructor(ctrl, id, name, priority, disableScroll) {\n    this.id = id;\n    this.name = name;\n    this.disableScroll = disableScroll;\n    this.priority = priority * 1000000 + id;\n    this.ctrl = ctrl;\n  }\n  canStart() {\n    if (!this.ctrl) {\n      return false;\n    }\n    return this.ctrl.canStart(this.name);\n  }\n  start() {\n    if (!this.ctrl) {\n      return false;\n    }\n    return this.ctrl.start(this.name, this.id, this.priority);\n  }\n  capture() {\n    if (!this.ctrl) {\n      return false;\n    }\n    const captured = this.ctrl.capture(this.name, this.id, this.priority);\n    if (captured && this.disableScroll) {\n      this.ctrl.disableScroll(this.id);\n    }\n    return captured;\n  }\n  release() {\n    if (this.ctrl) {\n      this.ctrl.release(this.id);\n      if (this.disableScroll) {\n        this.ctrl.enableScroll(this.id);\n      }\n    }\n  }\n  destroy() {\n    this.release();\n    this.ctrl = undefined;\n  }\n}\nclass BlockerDelegate {\n  constructor(ctrl, id, disable, disableScroll) {\n    this.id = id;\n    this.disable = disable;\n    this.disableScroll = disableScroll;\n    this.ctrl = ctrl;\n  }\n  block() {\n    if (!this.ctrl) {\n      return;\n    }\n    if (this.disable) {\n      for (const gesture of this.disable) {\n        this.ctrl.disableGesture(gesture, this.id);\n      }\n    }\n    if (this.disableScroll) {\n      this.ctrl.disableScroll(this.id);\n    }\n  }\n  unblock() {\n    if (!this.ctrl) {\n      return;\n    }\n    if (this.disable) {\n      for (const gesture of this.disable) {\n        this.ctrl.enableGesture(gesture, this.id);\n      }\n    }\n    if (this.disableScroll) {\n      this.ctrl.enableScroll(this.id);\n    }\n  }\n  destroy() {\n    this.unblock();\n    this.ctrl = undefined;\n  }\n}\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nconst GESTURE_CONTROLLER = new GestureController();\n\nexport { GESTURE_CONTROLLER as G };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\nexport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\n\nconst addEventListener = (el, // TODO(FW-2832): type\neventName, callback, opts) => {\n  // use event listener options when supported\n  // otherwise it's just a boolean for the \"capture\" arg\n  const listenerOpts = supportsPassive(el)\n    ? {\n      capture: !!opts.capture,\n      passive: !!opts.passive,\n    }\n    : !!opts.capture;\n  let add;\n  let remove;\n  if (el['__zone_symbol__addEventListener']) {\n    add = '__zone_symbol__addEventListener';\n    remove = '__zone_symbol__removeEventListener';\n  }\n  else {\n    add = 'addEventListener';\n    remove = 'removeEventListener';\n  }\n  el[add](eventName, callback, listenerOpts);\n  return () => {\n    el[remove](eventName, callback, listenerOpts);\n  };\n};\nconst supportsPassive = (node) => {\n  if (_sPassive === undefined) {\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get: () => {\n          _sPassive = true;\n        },\n      });\n      node.addEventListener('optsTest', () => {\n        return;\n      }, opts);\n    }\n    catch (e) {\n      _sPassive = false;\n    }\n  }\n  return !!_sPassive;\n};\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\n// TODO(FW-2832): types\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n  let rmTouchStart;\n  let rmTouchMove;\n  let rmTouchEnd;\n  let rmTouchCancel;\n  let rmMouseStart;\n  let rmMouseMove;\n  let rmMouseUp;\n  let lastTouchEvent = 0;\n  const handleTouchStart = (ev) => {\n    lastTouchEvent = Date.now() + MOUSE_WAIT;\n    if (!pointerDown(ev)) {\n      return;\n    }\n    if (!rmTouchMove && pointerMove) {\n      rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n    }\n    /**\n     * Events are dispatched on the element that is tapped and bubble up to\n     * the reference element in the gesture. In the event that the element this\n     * event was first dispatched on is removed from the DOM, the event will no\n     * longer bubble up to our reference element. This leaves the gesture in an\n     * unusable state. To account for this, the touchend and touchcancel listeners\n     * should be added to the event target so that they still fire even if the target\n     * is removed from the DOM.\n     */\n    if (!rmTouchEnd) {\n      rmTouchEnd = addEventListener(ev.target, 'touchend', handleTouchEnd, options);\n    }\n    if (!rmTouchCancel) {\n      rmTouchCancel = addEventListener(ev.target, 'touchcancel', handleTouchEnd, options);\n    }\n  };\n  const handleMouseDown = (ev) => {\n    if (lastTouchEvent > Date.now()) {\n      return;\n    }\n    if (!pointerDown(ev)) {\n      return;\n    }\n    if (!rmMouseMove && pointerMove) {\n      rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n    }\n    if (!rmMouseUp) {\n      rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n    }\n  };\n  const handleTouchEnd = (ev) => {\n    stopTouch();\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n  const handleMouseUp = (ev) => {\n    stopMouse();\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n  const stopTouch = () => {\n    if (rmTouchMove) {\n      rmTouchMove();\n    }\n    if (rmTouchEnd) {\n      rmTouchEnd();\n    }\n    if (rmTouchCancel) {\n      rmTouchCancel();\n    }\n    rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n  };\n  const stopMouse = () => {\n    if (rmMouseMove) {\n      rmMouseMove();\n    }\n    if (rmMouseUp) {\n      rmMouseUp();\n    }\n    rmMouseMove = rmMouseUp = undefined;\n  };\n  const stop = () => {\n    stopTouch();\n    stopMouse();\n  };\n  const enable = (isEnabled = true) => {\n    if (!isEnabled) {\n      if (rmTouchStart) {\n        rmTouchStart();\n      }\n      if (rmMouseStart) {\n        rmMouseStart();\n      }\n      rmTouchStart = rmMouseStart = undefined;\n      stop();\n    }\n    else {\n      if (!rmTouchStart) {\n        rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n      }\n      if (!rmMouseStart) {\n        rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n      }\n    }\n  };\n  const destroy = () => {\n    enable(false);\n    pointerUp = pointerMove = pointerDown = undefined;\n  };\n  return {\n    enable,\n    stop,\n    destroy,\n  };\n};\nconst getDocument = (node) => {\n  return node instanceof Document ? node : node.ownerDocument;\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n  const radians = maxAngle * (Math.PI / 180);\n  const isDirX = direction === 'x';\n  const maxCosine = Math.cos(radians);\n  const threshold = thresh * thresh;\n  let startX = 0;\n  let startY = 0;\n  let dirty = false;\n  let isPan = 0;\n  return {\n    start(x, y) {\n      startX = x;\n      startY = y;\n      isPan = 0;\n      dirty = true;\n    },\n    detect(x, y) {\n      if (!dirty) {\n        return false;\n      }\n      const deltaX = x - startX;\n      const deltaY = y - startY;\n      const distance = deltaX * deltaX + deltaY * deltaY;\n      if (distance < threshold) {\n        return false;\n      }\n      const hypotenuse = Math.sqrt(distance);\n      const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n      if (cosine > maxCosine) {\n        isPan = 1;\n      }\n      else if (cosine < -maxCosine) {\n        isPan = -1;\n      }\n      else {\n        isPan = 0;\n      }\n      dirty = false;\n      return true;\n    },\n    isGesture() {\n      return isPan !== 0;\n    },\n    getDirection() {\n      return isPan;\n    },\n  };\n};\n\n// TODO(FW-2832): types\nconst createGesture = (config) => {\n  let hasCapturedPan = false;\n  let hasStartedPan = false;\n  let hasFiredStart = true;\n  let isMoveQueued = false;\n  const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\n  const canStart = finalConfig.canStart;\n  const onWillStart = finalConfig.onWillStart;\n  const onStart = finalConfig.onStart;\n  const onEnd = finalConfig.onEnd;\n  const notCaptured = finalConfig.notCaptured;\n  const onMove = finalConfig.onMove;\n  const threshold = finalConfig.threshold;\n  const passive = finalConfig.passive;\n  const blurOnStart = finalConfig.blurOnStart;\n  const detail = {\n    type: 'pan',\n    startX: 0,\n    startY: 0,\n    startTime: 0,\n    currentX: 0,\n    currentY: 0,\n    velocityX: 0,\n    velocityY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    currentTime: 0,\n    event: undefined,\n    data: undefined,\n  };\n  const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n  const gesture = GESTURE_CONTROLLER.createGesture({\n    name: config.gestureName,\n    priority: config.gesturePriority,\n    disableScroll: config.disableScroll,\n  });\n  const pointerDown = (ev) => {\n    const timeStamp = now(ev);\n    if (hasStartedPan || !hasFiredStart) {\n      return false;\n    }\n    updateDetail(ev, detail);\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime = timeStamp;\n    detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n    detail.event = ev;\n    // Check if gesture can start\n    if (canStart && canStart(detail) === false) {\n      return false;\n    }\n    // Release fallback\n    gesture.release();\n    // Start gesture\n    if (!gesture.start()) {\n      return false;\n    }\n    hasStartedPan = true;\n    if (threshold === 0) {\n      return tryToCapturePan();\n    }\n    pan.start(detail.startX, detail.startY);\n    return true;\n  };\n  const pointerMove = (ev) => {\n    // fast path, if gesture is currently captured\n    // do minimum job to get user-land even dispatched\n    if (hasCapturedPan) {\n      if (!isMoveQueued && hasFiredStart) {\n        isMoveQueued = true;\n        calcGestureData(detail, ev);\n        requestAnimationFrame(fireOnMove);\n      }\n      return;\n    }\n    // gesture is currently being detected\n    calcGestureData(detail, ev);\n    if (pan.detect(detail.currentX, detail.currentY)) {\n      if (!pan.isGesture() || !tryToCapturePan()) {\n        abortGesture();\n      }\n    }\n  };\n  const fireOnMove = () => {\n    // Since fireOnMove is called inside a RAF, onEnd() might be called,\n    // we must double check hasCapturedPan\n    if (!hasCapturedPan) {\n      return;\n    }\n    isMoveQueued = false;\n    if (onMove) {\n      onMove(detail);\n    }\n  };\n  const tryToCapturePan = () => {\n    if (!gesture.capture()) {\n      return false;\n    }\n    hasCapturedPan = true;\n    hasFiredStart = false;\n    // reset start position since the real user-land event starts here\n    // If the pan detector threshold is big, not resetting the start position\n    // will cause a jump in the animation equal to the detector threshold.\n    // the array of positions used to calculate the gesture velocity does not\n    // need to be cleaned, more points in the positions array always results in a\n    // more accurate value of the velocity.\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime;\n    if (onWillStart) {\n      onWillStart(detail).then(fireOnStart);\n    }\n    else {\n      fireOnStart();\n    }\n    return true;\n  };\n  const blurActiveElement = () => {\n    if (typeof document !== 'undefined') {\n      const activeElement = document.activeElement;\n      if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.blur) {\n        activeElement.blur();\n      }\n    }\n  };\n  const fireOnStart = () => {\n    if (blurOnStart) {\n      blurActiveElement();\n    }\n    if (onStart) {\n      onStart(detail);\n    }\n    hasFiredStart = true;\n  };\n  const reset = () => {\n    hasCapturedPan = false;\n    hasStartedPan = false;\n    isMoveQueued = false;\n    hasFiredStart = true;\n    gesture.release();\n  };\n  // END *************************\n  const pointerUp = (ev) => {\n    const tmpHasCaptured = hasCapturedPan;\n    const tmpHasFiredStart = hasFiredStart;\n    reset();\n    if (!tmpHasFiredStart) {\n      return;\n    }\n    calcGestureData(detail, ev);\n    // Try to capture press\n    if (tmpHasCaptured) {\n      if (onEnd) {\n        onEnd(detail);\n      }\n      return;\n    }\n    // Not captured any event\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n  const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n    capture: false,\n    passive,\n  });\n  const abortGesture = () => {\n    reset();\n    pointerEvents.stop();\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n  return {\n    enable(enable = true) {\n      if (!enable) {\n        if (hasCapturedPan) {\n          pointerUp(undefined);\n        }\n        reset();\n      }\n      pointerEvents.enable(enable);\n    },\n    destroy() {\n      gesture.destroy();\n      pointerEvents.destroy();\n    },\n  };\n};\nconst calcGestureData = (detail, ev) => {\n  if (!ev) {\n    return;\n  }\n  const prevX = detail.currentX;\n  const prevY = detail.currentY;\n  const prevT = detail.currentTime;\n  updateDetail(ev, detail);\n  const currentX = detail.currentX;\n  const currentY = detail.currentY;\n  const timestamp = (detail.currentTime = now(ev));\n  const timeDelta = timestamp - prevT;\n  if (timeDelta > 0 && timeDelta < 100) {\n    const velocityX = (currentX - prevX) / timeDelta;\n    const velocityY = (currentY - prevY) / timeDelta;\n    detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n    detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n  }\n  detail.deltaX = currentX - detail.startX;\n  detail.deltaY = currentY - detail.startY;\n  detail.event = ev;\n};\nconst updateDetail = (ev, detail) => {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  let x = 0;\n  let y = 0;\n  if (ev) {\n    const changedTouches = ev.changedTouches;\n    if (changedTouches && changedTouches.length > 0) {\n      const touch = changedTouches[0];\n      x = touch.clientX;\n      y = touch.clientY;\n    }\n    else if (ev.pageX !== undefined) {\n      x = ev.pageX;\n      y = ev.pageY;\n    }\n  }\n  detail.currentX = x;\n  detail.currentY = y;\n};\nconst now = (ev) => {\n  return ev.timeStamp || Date.now();\n};\n\nexport { createGesture };\n","/*\n Stencil Client Platform v2.22.3 | MIT Licensed | https://stenciljs.com\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nconst safeSelector = (selector) => {\n    const placeholders = [];\n    let index = 0;\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, (_, keep) => {\n        const replaceBy = `__ph-${index}__`;\n        placeholders.push(keep);\n        index++;\n        return replaceBy;\n    });\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    const content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, (_, pseudo, exp) => {\n        const replaceBy = `__ph-${index}__`;\n        placeholders.push(exp);\n        index++;\n        return pseudo + replaceBy;\n    });\n    const ss = {\n        content,\n        placeholders,\n    };\n    return ss;\n};\nconst restoreSafeSelector = (placeholders, content) => {\n    return content.replace(/__ph-(\\d+)__/g, (_, index) => placeholders[+index]);\n};\nconst _polyfillHost = '-shadowcsshost';\nconst _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nconst _polyfillHostContext = '-shadowcsscontext';\nconst _parenSuffix = ')(?:\\\\((' + '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' + ')\\\\))?([^,{]*)';\nconst _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nconst _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nconst _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nconst _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nconst _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nconst _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nconst _selectorReSuffix = '([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$';\nconst _polyfillHostRe = /-shadowcsshost/gim;\nconst _colonHostRe = /:host/gim;\nconst _colonSlottedRe = /::slotted/gim;\nconst _colonHostContextRe = /:host-context/gim;\nconst _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nconst stripComments = (input) => {\n    return input.replace(_commentRe, '');\n};\nconst _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nconst extractCommentsWithHash = (input) => {\n    return input.match(_commentWithHashRe) || [];\n};\nconst _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nconst _curlyRe = /([{}])/g;\nconst _selectorPartsRe = /(^.*?[^\\\\])??((:+)(.*)|$)/;\nconst OPEN_CURLY = '{';\nconst CLOSE_CURLY = '}';\nconst BLOCK_PLACEHOLDER = '%BLOCK%';\nconst processRules = (input, ruleCallback) => {\n    const inputWithEscapedBlocks = escapeBlocks(input);\n    let nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, (...m) => {\n        const selector = m[2];\n        let content = '';\n        let suffix = m[4];\n        let contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        const cssRule = {\n            selector,\n            content,\n        };\n        const rule = ruleCallback(cssRule);\n        return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n    });\n};\nconst escapeBlocks = (input) => {\n    const inputParts = input.split(_curlyRe);\n    const resultParts = [];\n    const escapedBlocks = [];\n    let bracketCount = 0;\n    let currentBlockParts = [];\n    for (let partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        const part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    const strEscapedBlocks = {\n        escapedString: resultParts.join(''),\n        blocks: escapedBlocks,\n    };\n    return strEscapedBlocks;\n};\nconst insertPolyfillHostInCssText = (selector) => {\n    selector = selector\n        .replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost)\n        .replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n};\nconst convertColonRule = (cssText, regExp, partReplacer) => {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, (...m) => {\n        if (m[2]) {\n            const parts = m[2].split(',');\n            const r = [];\n            for (let i = 0; i < parts.length; i++) {\n                const p = parts[i].trim();\n                if (!p)\n                    break;\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n            }\n            return r.join(',');\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nconst colonHostPartReplacer = (host, part, suffix) => {\n    return host + part.replace(_polyfillHost, '') + suffix;\n};\nconst convertColonHost = (cssText) => {\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nconst colonHostContextPartReplacer = (host, part, suffix) => {\n    if (part.indexOf(_polyfillHost) > -1) {\n        return colonHostPartReplacer(host, part, suffix);\n    }\n    else {\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n};\nconst convertColonSlotted = (cssText, slotScopeId) => {\n    const slotClass = '.' + slotScopeId + ' > ';\n    const selectors = [];\n    cssText = cssText.replace(_cssColonSlottedRe, (...m) => {\n        if (m[2]) {\n            const compound = m[2].trim();\n            const suffix = m[3];\n            const slottedSelector = slotClass + compound + suffix;\n            let prefixSelector = '';\n            for (let i = m[4] - 1; i >= 0; i--) {\n                const char = m[5][i];\n                if (char === '}' || char === ',') {\n                    break;\n                }\n                prefixSelector = char + prefixSelector;\n            }\n            const orgSelector = prefixSelector + slottedSelector;\n            const addedSelector = `${prefixSelector.trimRight()}${slottedSelector.trim()}`;\n            if (orgSelector.trim() !== addedSelector.trim()) {\n                const updatedSelector = `${addedSelector}, ${orgSelector}`;\n                selectors.push({\n                    orgSelector,\n                    updatedSelector,\n                });\n            }\n            return slottedSelector;\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n    return {\n        selectors,\n        cssText,\n    };\n};\nconst convertColonHostContext = (cssText) => {\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nconst convertShadowDOMSelectors = (cssText) => {\n    return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, ' '), cssText);\n};\nconst makeScopeMatcher = (scopeSelector) => {\n    const lre = /\\[/g;\n    const rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nconst selectorNeedsScoping = (selector, scopeSelector) => {\n    const re = makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n};\nconst injectScopingSelector = (selector, scopingSelector) => {\n    return selector.replace(_selectorPartsRe, (_, before = '', _colonGroup, colon = '', after = '') => {\n        return before + scopingSelector + colon + after;\n    });\n};\nconst applySimpleSelectorScope = (selector, scopeSelector, hostSelector) => {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n        const replaceBy = `.${hostSelector}`;\n        return selector\n            .replace(_polyfillHostNoCombinatorRe, (_, selector) => injectScopingSelector(selector, replaceBy))\n            .replace(_polyfillHostRe, replaceBy + ' ');\n    }\n    return scopeSelector + ' ' + selector;\n};\nconst applyStrictSelectorScope = (selector, scopeSelector, hostSelector) => {\n    const isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, (_, ...parts) => parts[0]);\n    const className = '.' + scopeSelector;\n    const _scopeSelectorPart = (p) => {\n        let scopedP = p.trim();\n        if (!scopedP) {\n            return '';\n        }\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n        }\n        else {\n            // remove :host since it should be unnecessary\n            const t = p.replace(_polyfillHostRe, '');\n            if (t.length > 0) {\n                scopedP = injectScopingSelector(t, className);\n            }\n        }\n        return scopedP;\n    };\n    const safeContent = safeSelector(selector);\n    selector = safeContent.content;\n    let scopedSelector = '';\n    let startIndex = 0;\n    let res;\n    const sep = /( |>|\\+|~(?!=))\\s*/g;\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    const hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    let shouldScope = !hasHost;\n    while ((res = sep.exec(selector)) !== null) {\n        const separator = res[1];\n        const part = selector.slice(startIndex, res.index).trim();\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        const scopedPart = shouldScope ? _scopeSelectorPart(part) : part;\n        scopedSelector += `${scopedPart} ${separator} `;\n        startIndex = sep.lastIndex;\n    }\n    const part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n    // replace the placeholders with their original values\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nconst scopeSelector = (selector, scopeSelectorText, hostSelector, slotSelector) => {\n    return selector\n        .split(',')\n        .map((shallowPart) => {\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n            return shallowPart.trim();\n        }\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n        }\n        else {\n            return shallowPart.trim();\n        }\n    })\n        .join(', ');\n};\nconst scopeSelectors = (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) => {\n    return processRules(cssText, (rule) => {\n        let selector = rule.selector;\n        let content = rule.content;\n        if (rule.selector[0] !== '@') {\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n        }\n        else if (rule.selector.startsWith('@media') ||\n            rule.selector.startsWith('@supports') ||\n            rule.selector.startsWith('@page') ||\n            rule.selector.startsWith('@document')) {\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n        }\n        const cssRule = {\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n            content,\n        };\n        return cssRule;\n    });\n};\nconst scopeCssText = (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) => {\n    cssText = insertPolyfillHostInCssText(cssText);\n    cssText = convertColonHost(cssText);\n    cssText = convertColonHostContext(cssText);\n    const slotted = convertColonSlotted(cssText, slotScopeId);\n    cssText = slotted.cssText;\n    cssText = convertShadowDOMSelectors(cssText);\n    if (scopeId) {\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n    }\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, `.${hostScopeId}`);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return {\n        cssText: cssText.trim(),\n        slottedSelectors: slotted.selectors,\n    };\n};\nconst scopeCss = (cssText, scopeId, commentOriginalSelector) => {\n    const hostScopeId = scopeId + '-h';\n    const slotScopeId = scopeId + '-s';\n    const commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    const orgSelectors = [];\n    if (commentOriginalSelector) {\n        const processCommentedSelector = (rule) => {\n            const placeholder = `/*!@___${orgSelectors.length}___*/`;\n            const comment = `/*!@${rule.selector}*/`;\n            orgSelectors.push({ placeholder, comment });\n            rule.selector = placeholder + rule.selector;\n            return rule;\n        };\n        cssText = processRules(cssText, (rule) => {\n            if (rule.selector[0] !== '@') {\n                return processCommentedSelector(rule);\n            }\n            else if (rule.selector.startsWith('@media') ||\n                rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') ||\n                rule.selector.startsWith('@document')) {\n                rule.content = processRules(rule.content, processCommentedSelector);\n                return rule;\n            }\n            return rule;\n        });\n    }\n    const scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n    cssText = [scoped.cssText, ...commentsWithHash].join('\\n');\n    if (commentOriginalSelector) {\n        orgSelectors.forEach(({ placeholder, comment }) => {\n            cssText = cssText.replace(placeholder, comment);\n        });\n    }\n    scoped.slottedSelectors.forEach((slottedSelector) => {\n        cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n    });\n    return cssText;\n};\n\nexport { scopeCss };\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 52;\nmodule.exports = webpackEmptyAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/snabbdom/snabbdom/blob/master/LICENSE\n *\n * Modified for Stencil's renderer and slot projection\n */\nlet scopeId;\nlet contentRef;\nlet hostTagName;\nlet customError;\nlet i = 0;\nlet useNativeShadowDom = false;\nlet checkSlotFallbackVisibility = false;\nlet checkSlotRelocate = false;\nlet isSvgMode = false;\nlet renderingRef = null;\nlet queueCongestion = 0;\nlet queuePending = false;\n/*\n Stencil Client Platform v2.22.3 | MIT Licensed | https://stenciljs.com\n */\nimport { BUILD, NAMESPACE } from '@stencil/core/internal/app-data';\nconst Build = {\n    isDev: BUILD.isDev ? true : false,\n    isBrowser: true,\n    isServer: false,\n    isTesting: BUILD.isTesting ? true : false,\n};\nconst Context = {};\nconst getAssetPath = (path) => {\n    const assetUrl = new URL(path, plt.$resourcesUrl$);\n    return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\nconst setAssetPath = (path) => (plt.$resourcesUrl$ = path);\nconst createTime = (fnName, tagName = '') => {\n    if (BUILD.profile && performance.mark) {\n        const key = `st:${fnName}:${tagName}:${i++}`;\n        // Start\n        performance.mark(key);\n        // End\n        return () => performance.measure(`[Stencil] ${fnName}() <${tagName}>`, key);\n    }\n    else {\n        return () => {\n            return;\n        };\n    }\n};\nconst uniqueTime = (key, measureText) => {\n    if (BUILD.profile && performance.mark) {\n        if (performance.getEntriesByName(key, 'mark').length === 0) {\n            performance.mark(key);\n        }\n        return () => {\n            if (performance.getEntriesByName(measureText, 'measure').length === 0) {\n                performance.measure(measureText, key);\n            }\n        };\n    }\n    else {\n        return () => {\n            return;\n        };\n    }\n};\nconst inspect = (ref) => {\n    const hostRef = getHostRef(ref);\n    if (!hostRef) {\n        return undefined;\n    }\n    const flags = hostRef.$flags$;\n    const hostElement = hostRef.$hostElement$;\n    return {\n        renderCount: hostRef.$renderCount$,\n        flags: {\n            hasRendered: !!(flags & 2 /* HOST_FLAGS.hasRendered */),\n            hasConnected: !!(flags & 1 /* HOST_FLAGS.hasConnected */),\n            isWaitingForChildren: !!(flags & 4 /* HOST_FLAGS.isWaitingForChildren */),\n            isConstructingInstance: !!(flags & 8 /* HOST_FLAGS.isConstructingInstance */),\n            isQueuedForUpdate: !!(flags & 16 /* HOST_FLAGS.isQueuedForUpdate */),\n            hasInitializedComponent: !!(flags & 32 /* HOST_FLAGS.hasInitializedComponent */),\n            hasLoadedComponent: !!(flags & 64 /* HOST_FLAGS.hasLoadedComponent */),\n            isWatchReady: !!(flags & 128 /* HOST_FLAGS.isWatchReady */),\n            isListenReady: !!(flags & 256 /* HOST_FLAGS.isListenReady */),\n            needsRerender: !!(flags & 512 /* HOST_FLAGS.needsRerender */),\n        },\n        instanceValues: hostRef.$instanceValues$,\n        ancestorComponent: hostRef.$ancestorComponent$,\n        hostElement,\n        lazyInstance: hostRef.$lazyInstance$,\n        vnode: hostRef.$vnode$,\n        modeName: hostRef.$modeName$,\n        onReadyPromise: hostRef.$onReadyPromise$,\n        onReadyResolve: hostRef.$onReadyResolve$,\n        onInstancePromise: hostRef.$onInstancePromise$,\n        onInstanceResolve: hostRef.$onInstanceResolve$,\n        onRenderResolve: hostRef.$onRenderResolve$,\n        queuedListeners: hostRef.$queuedListeners$,\n        rmListeners: hostRef.$rmListeners$,\n        ['s-id']: hostElement['s-id'],\n        ['s-cr']: hostElement['s-cr'],\n        ['s-lr']: hostElement['s-lr'],\n        ['s-p']: hostElement['s-p'],\n        ['s-rc']: hostElement['s-rc'],\n        ['s-sc']: hostElement['s-sc'],\n    };\n};\nconst installDevTools = () => {\n    if (BUILD.devTools) {\n        const stencil = (win.stencil = win.stencil || {});\n        const originalInspect = stencil.inspect;\n        stencil.inspect = (ref) => {\n            let result = inspect(ref);\n            if (!result && typeof originalInspect === 'function') {\n                result = originalInspect(ref);\n            }\n            return result;\n        };\n    }\n};\nconst CONTENT_REF_ID = 'r';\nconst ORG_LOCATION_ID = 'o';\nconst SLOT_NODE_ID = 's';\nconst TEXT_NODE_ID = 't';\nconst HYDRATE_ID = 's-id';\nconst HYDRATED_STYLE_ID = 'sty-id';\nconst HYDRATE_CHILD_ID = 'c-id';\nconst HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\nconst XLINK_NS = 'http://www.w3.org/1999/xlink';\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nconst EMPTY_OBJ = {};\n/**\n * Namespaces\n */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst HTML_NS = 'http://www.w3.org/1999/xhtml';\nconst isDef = (v) => v != null;\nconst isComplexType = (o) => {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\n/**\n * Helper method for querying a `meta` tag that contains a nonce value\n * out of a DOM's head.\n *\n * @param doc The DOM containing the `head` to query against\n * @returns The content of the meta tag representing the nonce value, or `undefined` if no tag\n * exists or the tag has no content.\n */\nfunction queryNonceMetaTagContent(doc) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = doc.head) === null || _a === void 0 ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) === null || _b === void 0 ? void 0 : _b.getAttribute('content')) !== null && _c !== void 0 ? _c : undefined;\n}\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nconst h = (nodeName, vnodeData, ...children) => {\n    let child = null;\n    let key = null;\n    let slotName = null;\n    let simple = false;\n    let lastSimple = false;\n    const vNodeChildren = [];\n    const walk = (c) => {\n        for (let i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {\n                    child = String(child);\n                }\n                else if (BUILD.isDev && typeof nodeName !== 'function' && child.$flags$ === undefined) {\n                    consoleDevError(`vNode passed as children has unexpected type.\nMake sure it's using the correct h() function.\nEmpty objects can also be the cause, look for JSX comments that became objects.`);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        if (BUILD.isDev && nodeName === 'input') {\n            validateInputProperties(vnodeData);\n        }\n        // normalize class / classname attributes\n        if (BUILD.vdomKey && vnodeData.key) {\n            key = vnodeData.key;\n        }\n        if (BUILD.slotRelocation && vnodeData.name) {\n            slotName = vnodeData.name;\n        }\n        if (BUILD.vdomClass) {\n            const classData = vnodeData.className || vnodeData.class;\n            if (classData) {\n                vnodeData.class =\n                    typeof classData !== 'object'\n                        ? classData\n                        : Object.keys(classData)\n                            .filter((k) => classData[k])\n                            .join(' ');\n            }\n        }\n    }\n    if (BUILD.isDev && vNodeChildren.some(isHost)) {\n        consoleDevError(`The <Host> must be the single root component. Make sure:\n- You are NOT using hostData() and <Host> in the same component.\n- <Host> is used once, and it's the single root component of the render() function.`);\n    }\n    if (BUILD.vdomFunctional && typeof nodeName === 'function') {\n        // nodeName is a functional component\n        return nodeName(vnodeData === null ? {} : vnodeData, vNodeChildren, vdomFnUtils);\n    }\n    const vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    if (BUILD.vdomKey) {\n        vnode.$key$ = key;\n    }\n    if (BUILD.slotRelocation) {\n        vnode.$name$ = slotName;\n    }\n    return vnode;\n};\n/**\n * A utility function for creating a virtual DOM node from a tag and some\n * possible text content.\n *\n * @param tag the tag for this element\n * @param text possible text content for the node\n * @returns a newly-minted virtual DOM node\n */\nconst newVNode = (tag, text) => {\n    const vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null,\n    };\n    if (BUILD.vdomAttribute) {\n        vnode.$attrs$ = null;\n    }\n    if (BUILD.vdomKey) {\n        vnode.$key$ = null;\n    }\n    if (BUILD.slotRelocation) {\n        vnode.$name$ = null;\n    }\n    return vnode;\n};\nconst Host = {};\n/**\n * Check whether a given node is a Host node or not\n *\n * @param node the virtual DOM node to check\n * @returns whether it's a Host node or not\n */\nconst isHost = (node) => node && node.$tag$ === Host;\n/**\n * Implementation of {@link d.FunctionalUtilities} for Stencil's VDom.\n *\n * Note that these functions convert from {@link d.VNode} to\n * {@link d.ChildNode} to give functional component developers a friendly\n * interface.\n */\nconst vdomFnUtils = {\n    forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n    map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate),\n};\n/**\n * Convert a {@link d.VNode} to a {@link d.ChildNode} in order to present a\n * friendlier public interface (hence, 'convertToPublic').\n *\n * @param node the virtual DOM node to convert\n * @returns a converted child node\n */\nconst convertToPublic = (node) => ({\n    vattrs: node.$attrs$,\n    vchildren: node.$children$,\n    vkey: node.$key$,\n    vname: node.$name$,\n    vtag: node.$tag$,\n    vtext: node.$text$,\n});\n/**\n * Convert a {@link d.ChildNode} back to an equivalent {@link d.VNode} in\n * order to use the resulting object in the virtual DOM. The initial object was\n * likely created as part of presenting a public API, so converting it back\n * involved making it 'private' again (hence, `convertToPrivate`).\n *\n * @param node the child node to convert\n * @returns a converted virtual DOM node\n */\nconst convertToPrivate = (node) => {\n    if (typeof node.vtag === 'function') {\n        const vnodeData = Object.assign({}, node.vattrs);\n        if (node.vkey) {\n            vnodeData.key = node.vkey;\n        }\n        if (node.vname) {\n            vnodeData.name = node.vname;\n        }\n        return h(node.vtag, vnodeData, ...(node.vchildren || []));\n    }\n    const vnode = newVNode(node.vtag, node.vtext);\n    vnode.$attrs$ = node.vattrs;\n    vnode.$children$ = node.vchildren;\n    vnode.$key$ = node.vkey;\n    vnode.$name$ = node.vname;\n    return vnode;\n};\n/**\n * Validates the ordering of attributes on an input element\n *\n * @param inputElm the element to validate\n */\nconst validateInputProperties = (inputElm) => {\n    const props = Object.keys(inputElm);\n    const value = props.indexOf('value');\n    if (value === -1) {\n        return;\n    }\n    const typeIndex = props.indexOf('type');\n    const minIndex = props.indexOf('min');\n    const maxIndex = props.indexOf('max');\n    const stepIndex = props.indexOf('step');\n    if (value < typeIndex || value < minIndex || value < maxIndex || value < stepIndex) {\n        consoleDevWarn(`The \"value\" prop of <input> should be set after \"min\", \"max\", \"type\" and \"step\"`);\n    }\n};\nconst initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {\n    const endHydrate = createTime('hydrateClient', tagName);\n    const shadowRoot = hostElm.shadowRoot;\n    const childRenderNodes = [];\n    const slotNodes = [];\n    const shadowRootNodes = BUILD.shadowDom && shadowRoot ? [] : null;\n    const vnode = (hostRef.$vnode$ = newVNode(tagName, null));\n    if (!plt.$orgLocNodes$) {\n        initializeDocumentHydrate(doc.body, (plt.$orgLocNodes$ = new Map()));\n    }\n    hostElm[HYDRATE_ID] = hostId;\n    hostElm.removeAttribute(HYDRATE_ID);\n    clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);\n    childRenderNodes.map((c) => {\n        const orgLocationId = c.$hostId$ + '.' + c.$nodeId$;\n        const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n        const node = c.$elm$;\n        if (orgLocationNode && supportsShadow && orgLocationNode['s-en'] === '') {\n            orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n        }\n        if (!shadowRoot) {\n            node['s-hn'] = tagName;\n            if (orgLocationNode) {\n                node['s-ol'] = orgLocationNode;\n                node['s-ol']['s-nr'] = node;\n            }\n        }\n        plt.$orgLocNodes$.delete(orgLocationId);\n    });\n    if (BUILD.shadowDom && shadowRoot) {\n        shadowRootNodes.map((shadowRootNode) => {\n            if (shadowRootNode) {\n                shadowRoot.appendChild(shadowRootNode);\n            }\n        });\n    }\n    endHydrate();\n};\nconst clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) => {\n    let childNodeType;\n    let childIdSplt;\n    let childVNode;\n    let i;\n    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n        if (childNodeType) {\n            // got the node data from the element's attribute\n            // `${hostId}.${nodeId}.${depth}.${index}`\n            childIdSplt = childNodeType.split('.');\n            if (childIdSplt[0] === hostId || childIdSplt[0] === '0') {\n                childVNode = {\n                    $flags$: 0,\n                    $hostId$: childIdSplt[0],\n                    $nodeId$: childIdSplt[1],\n                    $depth$: childIdSplt[2],\n                    $index$: childIdSplt[3],\n                    $tag$: node.tagName.toLowerCase(),\n                    $elm$: node,\n                    $attrs$: null,\n                    $children$: null,\n                    $key$: null,\n                    $name$: null,\n                    $text$: null,\n                };\n                childRenderNodes.push(childVNode);\n                node.removeAttribute(HYDRATE_CHILD_ID);\n                // this is a new child vnode\n                // so ensure its parent vnode has the vchildren array\n                if (!parentVNode.$children$) {\n                    parentVNode.$children$ = [];\n                }\n                // add our child vnode to a specific index of the vnode's children\n                parentVNode.$children$[childVNode.$index$] = childVNode;\n                // this is now the new parent vnode for all the next child checks\n                parentVNode = childVNode;\n                if (shadowRootNodes && childVNode.$depth$ === '0') {\n                    shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                }\n            }\n        }\n        // recursively drill down, end to start so we can remove nodes\n        for (i = node.childNodes.length - 1; i >= 0; i--) {\n            clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.childNodes[i], hostId);\n        }\n        if (node.shadowRoot) {\n            // keep drilling down through the shadow root nodes\n            for (i = node.shadowRoot.childNodes.length - 1; i >= 0; i--) {\n                clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.shadowRoot.childNodes[i], hostId);\n            }\n        }\n    }\n    else if (node.nodeType === 8 /* NODE_TYPE.CommentNode */) {\n        // `${COMMENT_TYPE}.${hostId}.${nodeId}.${depth}.${index}`\n        childIdSplt = node.nodeValue.split('.');\n        if (childIdSplt[1] === hostId || childIdSplt[1] === '0') {\n            // comment node for either the host id or a 0 host id\n            childNodeType = childIdSplt[0];\n            childVNode = {\n                $flags$: 0,\n                $hostId$: childIdSplt[1],\n                $nodeId$: childIdSplt[2],\n                $depth$: childIdSplt[3],\n                $index$: childIdSplt[4],\n                $elm$: node,\n                $attrs$: null,\n                $children$: null,\n                $key$: null,\n                $name$: null,\n                $tag$: null,\n                $text$: null,\n            };\n            if (childNodeType === TEXT_NODE_ID) {\n                childVNode.$elm$ = node.nextSibling;\n                if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* NODE_TYPE.TextNode */) {\n                    childVNode.$text$ = childVNode.$elm$.textContent;\n                    childRenderNodes.push(childVNode);\n                    // remove the text comment since it's no longer needed\n                    node.remove();\n                    if (!parentVNode.$children$) {\n                        parentVNode.$children$ = [];\n                    }\n                    parentVNode.$children$[childVNode.$index$] = childVNode;\n                    if (shadowRootNodes && childVNode.$depth$ === '0') {\n                        shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                    }\n                }\n            }\n            else if (childVNode.$hostId$ === hostId) {\n                // this comment node is specifcally for this host id\n                if (childNodeType === SLOT_NODE_ID) {\n                    // `${SLOT_NODE_ID}.${hostId}.${nodeId}.${depth}.${index}.${slotName}`;\n                    childVNode.$tag$ = 'slot';\n                    if (childIdSplt[5]) {\n                        node['s-sn'] = childVNode.$name$ = childIdSplt[5];\n                    }\n                    else {\n                        node['s-sn'] = '';\n                    }\n                    node['s-sr'] = true;\n                    if (BUILD.shadowDom && shadowRootNodes) {\n                        // browser support shadowRoot and this is a shadow dom component\n                        // create an actual slot element\n                        childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n                        if (childVNode.$name$) {\n                            // add the slot name attribute\n                            childVNode.$elm$.setAttribute('name', childVNode.$name$);\n                        }\n                        // insert the new slot element before the slot comment\n                        node.parentNode.insertBefore(childVNode.$elm$, node);\n                        // remove the slot comment since it's not needed for shadow\n                        node.remove();\n                        if (childVNode.$depth$ === '0') {\n                            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                        }\n                    }\n                    slotNodes.push(childVNode);\n                    if (!parentVNode.$children$) {\n                        parentVNode.$children$ = [];\n                    }\n                    parentVNode.$children$[childVNode.$index$] = childVNode;\n                }\n                else if (childNodeType === CONTENT_REF_ID) {\n                    // `${CONTENT_REF_ID}.${hostId}`;\n                    if (BUILD.shadowDom && shadowRootNodes) {\n                        // remove the content ref comment since it's not needed for shadow\n                        node.remove();\n                    }\n                    else if (BUILD.slotRelocation) {\n                        hostElm['s-cr'] = node;\n                        node['s-cn'] = true;\n                    }\n                }\n            }\n        }\n    }\n    else if (parentVNode && parentVNode.$tag$ === 'style') {\n        const vnode = newVNode(null, node.textContent);\n        vnode.$elm$ = node;\n        vnode.$index$ = '0';\n        parentVNode.$children$ = [vnode];\n    }\n};\nconst initializeDocumentHydrate = (node, orgLocNodes) => {\n    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        let i = 0;\n        for (; i < node.childNodes.length; i++) {\n            initializeDocumentHydrate(node.childNodes[i], orgLocNodes);\n        }\n        if (node.shadowRoot) {\n            for (i = 0; i < node.shadowRoot.childNodes.length; i++) {\n                initializeDocumentHydrate(node.shadowRoot.childNodes[i], orgLocNodes);\n            }\n        }\n    }\n    else if (node.nodeType === 8 /* NODE_TYPE.CommentNode */) {\n        const childIdSplt = node.nodeValue.split('.');\n        if (childIdSplt[0] === ORG_LOCATION_ID) {\n            orgLocNodes.set(childIdSplt[1] + '.' + childIdSplt[2], node);\n            node.nodeValue = '';\n            // useful to know if the original location is\n            // the root light-dom of a shadow dom component\n            node['s-en'] = childIdSplt[3];\n        }\n    }\n};\n// Private\nconst computeMode = (elm) => modeResolutionChain.map((h) => h(elm)).find((m) => !!m);\n// Public\nconst setMode = (handler) => modeResolutionChain.push(handler);\nconst getMode = (ref) => getHostRef(ref).$modeName$;\n/**\n * Parse a new property value for a given property type.\n *\n * While the prop value can reasonably be expected to be of `any` type as far as TypeScript's type checker is concerned,\n * it is not safe to assume that the string returned by evaluating `typeof propValue` matches:\n *   1. `any`, the type given to `propValue` in the function signature\n *   2. the type stored from `propType`.\n *\n * This function provides the capability to parse/coerce a property's value to potentially any other JavaScript type.\n *\n * Property values represented in TSX preserve their type information. In the example below, the number 0 is passed to\n * a component. This `propValue` will preserve its type information (`typeof propValue === 'number'`). Note that is\n * based on the type of the value being passed in, not the type declared of the class member decorated with `@Prop`.\n * ```tsx\n * <my-cmp prop-val={0}></my-cmp>\n * ```\n *\n * HTML prop values on the other hand, will always a string\n *\n * @param propValue the new value to coerce to some type\n * @param propType the type of the prop, expressed as a binary number\n * @returns the parsed/coerced value\n */\nconst parsePropertyValue = (propValue, propType) => {\n    // ensure this value is of the correct prop type\n    if (propValue != null && !isComplexType(propValue)) {\n        if (BUILD.propBoolean && propType & 4 /* MEMBER_FLAGS.Boolean */) {\n            // per the HTML spec, any string value means it is a boolean true value\n            // but we'll cheat here and say that the string \"false\" is the boolean false\n            return propValue === 'false' ? false : propValue === '' || !!propValue;\n        }\n        if (BUILD.propNumber && propType & 2 /* MEMBER_FLAGS.Number */) {\n            // force it to be a number\n            return parseFloat(propValue);\n        }\n        if (BUILD.propString && propType & 1 /* MEMBER_FLAGS.String */) {\n            // could have been passed as a number or boolean\n            // but we still want it as a string\n            return String(propValue);\n        }\n        // redundant return here for better minification\n        return propValue;\n    }\n    // not sure exactly what type we want\n    // so no need to change to a different type\n    return propValue;\n};\nconst getElement = (ref) => (BUILD.lazyLoad ? getHostRef(ref).$hostElement$ : ref);\nconst createEvent = (ref, name, flags) => {\n    const elm = getElement(ref);\n    return {\n        emit: (detail) => {\n            if (BUILD.isDev && !elm.isConnected) {\n                consoleDevWarn(`The \"${name}\" event was emitted, but the dispatcher node is no longer connected to the dom.`);\n            }\n            return emitEvent(elm, name, {\n                bubbles: !!(flags & 4 /* EVENT_FLAGS.Bubbles */),\n                composed: !!(flags & 2 /* EVENT_FLAGS.Composed */),\n                cancelable: !!(flags & 1 /* EVENT_FLAGS.Cancellable */),\n                detail,\n            });\n        },\n    };\n};\n/**\n * Helper function to create & dispatch a custom Event on a provided target\n * @param elm the target of the Event\n * @param name the name to give the custom Event\n * @param opts options for configuring a custom Event\n * @returns the custom Event\n */\nconst emitEvent = (elm, name, opts) => {\n    const ev = plt.ce(name, opts);\n    elm.dispatchEvent(ev);\n    return ev;\n};\nconst rootAppliedStyles = /*@__PURE__*/ new WeakMap();\nconst registerStyle = (scopeId, cssText, allowCS) => {\n    let style = styles.get(scopeId);\n    if (supportsConstructableStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        if (typeof style === 'string') {\n            style = cssText;\n        }\n        else {\n            style.replaceSync(cssText);\n        }\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nconst addStyle = (styleContainerNode, cmpMeta, mode, hostElm) => {\n    var _a;\n    let scopeId = getScopeId(cmpMeta, mode);\n    const style = styles.get(scopeId);\n    if (!BUILD.attachStyles) {\n        return scopeId;\n    }\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = styleContainerNode.nodeType === 11 /* NODE_TYPE.DocumentFragment */ ? styleContainerNode : doc;\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            let styleElm;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));\n            }\n            if (!appliedStyles.has(scopeId)) {\n                if (BUILD.hydrateClientSide &&\n                    styleContainerNode.host &&\n                    (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}=\"${scopeId}\"]`))) {\n                    // This is only happening on native shadow-dom, do not needs CSS var shim\n                    styleElm.innerHTML = style;\n                }\n                else {\n                    if (BUILD.cssVarShim && plt.$cssShim$) {\n                        styleElm = plt.$cssShim$.createHostStyle(hostElm, scopeId, style, !!(cmpMeta.$flags$ & 10 /* CMP_FLAGS.needsScopedEncapsulation */));\n                        const newScopeId = styleElm['s-sc'];\n                        if (newScopeId) {\n                            scopeId = newScopeId;\n                            // we don't want to add this styleID to the appliedStyles Set\n                            // since the cssVarShim might need to apply several different\n                            // stylesheets for the same component\n                            appliedStyles = null;\n                        }\n                    }\n                    else {\n                        styleElm = doc.createElement('style');\n                        styleElm.innerHTML = style;\n                    }\n                    // Apply CSP nonce to the style tag if it exists\n                    const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n                    if (nonce != null) {\n                        styleElm.setAttribute('nonce', nonce);\n                    }\n                    if (BUILD.hydrateServerSide || BUILD.hotModuleReplacement) {\n                        styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId);\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if (BUILD.constructableCSS && !styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n        }\n    }\n    return scopeId;\n};\nconst attachStyles = (hostRef) => {\n    const cmpMeta = hostRef.$cmpMeta$;\n    const elm = hostRef.$hostElement$;\n    const flags = cmpMeta.$flags$;\n    const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    const scopeId = addStyle(BUILD.shadowDom && supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta, hostRef.$modeName$, elm);\n    if ((BUILD.shadowDom || BUILD.scoped) && BUILD.cssAnnotations && flags & 10 /* CMP_FLAGS.needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n        if (BUILD.scoped && flags & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n            elm.classList.add(scopeId + '-s');\n        }\n    }\n    endAttachStyles();\n};\nconst getScopeId = (cmp, mode) => 'sc-' + (BUILD.mode && mode && cmp.$flags$ & 32 /* CMP_FLAGS.hasMode */ ? cmp.$tagName$ + '-' + mode : cmp.$tagName$);\nconst convertScopedToShadow = (css) => css.replace(/\\/\\*!@([^\\/]+)\\*\\/[^\\{]+\\{/g, '$1{');\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\nconst setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n    if (oldValue !== newValue) {\n        let isProp = isMemberInElement(elm, memberName);\n        let ln = memberName.toLowerCase();\n        if (BUILD.vdomClass && memberName === 'class') {\n            const classList = elm.classList;\n            const oldClasses = parseClassList(oldValue);\n            const newClasses = parseClassList(newValue);\n            classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n            classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n        }\n        else if (BUILD.vdomStyle && memberName === 'style') {\n            // update style attribute, css properties and values\n            if (BUILD.updatable) {\n                for (const prop in oldValue) {\n                    if (!newValue || newValue[prop] == null) {\n                        if (!BUILD.hydrateServerSide && prop.includes('-')) {\n                            elm.style.removeProperty(prop);\n                        }\n                        else {\n                            elm.style[prop] = '';\n                        }\n                    }\n                }\n            }\n            for (const prop in newValue) {\n                if (!oldValue || newValue[prop] !== oldValue[prop]) {\n                    if (!BUILD.hydrateServerSide && prop.includes('-')) {\n                        elm.style.setProperty(prop, newValue[prop]);\n                    }\n                    else {\n                        elm.style[prop] = newValue[prop];\n                    }\n                }\n            }\n        }\n        else if (BUILD.vdomKey && memberName === 'key')\n            ;\n        else if (BUILD.vdomRef && memberName === 'ref') {\n            // minifier will clean this up\n            if (newValue) {\n                newValue(elm);\n            }\n        }\n        else if (BUILD.vdomListener &&\n            (BUILD.lazyLoad ? !isProp : !elm.__lookupSetter__(memberName)) &&\n            memberName[0] === 'o' &&\n            memberName[1] === 'n') {\n            // Event Handlers\n            // so if the member name starts with \"on\" and the 3rd characters is\n            // a capital letter, and it's not already a member on the element,\n            // then we're assuming it's an event listener\n            if (memberName[2] === '-') {\n                // on- prefixed events\n                // allows to be explicit about the dom event to listen without any magic\n                // under the hood:\n                // <my-cmp on-click> // listens for \"click\"\n                // <my-cmp on-Click> // listens for \"Click\"\n                // <my-cmp on-ionChange> // listens for \"ionChange\"\n                // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n                memberName = memberName.slice(3);\n            }\n            else if (isMemberInElement(win, ln)) {\n                // standard event\n                // the JSX attribute could have been \"onMouseOver\" and the\n                // member name \"onmouseover\" is on the window's prototype\n                // so let's add the listener \"mouseover\", which is all lowercased\n                memberName = ln.slice(2);\n            }\n            else {\n                // custom event\n                // the JSX attribute could have been \"onMyCustomEvent\"\n                // so let's trim off the \"on\" prefix and lowercase the first character\n                // and add the listener \"myCustomEvent\"\n                // except for the first character, we keep the event name case\n                memberName = ln[2] + memberName.slice(3);\n            }\n            if (oldValue) {\n                plt.rel(elm, memberName, oldValue, false);\n            }\n            if (newValue) {\n                plt.ael(elm, memberName, newValue, false);\n            }\n        }\n        else if (BUILD.vdomPropOrAttr) {\n            // Set property if it exists and it's not a SVG\n            const isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        const n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) { }\n            }\n            /**\n             * Need to manually update attribute if:\n             * - memberName is not an attribute\n             * - if we are rendering the host element in order to reflect attribute\n             * - if it's a SVG, since properties might not work in <svg>\n             * - if the newValue is null/undefined or 'false'.\n             */\n            let xlink = false;\n            if (BUILD.vdomXlink) {\n                if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n                    memberName = ln;\n                    xlink = true;\n                }\n            }\n            if (newValue == null || newValue === false) {\n                if (newValue !== false || elm.getAttribute(memberName) === '') {\n                    if (BUILD.vdomXlink && xlink) {\n                        elm.removeAttributeNS(XLINK_NS, memberName);\n                    }\n                    else {\n                        elm.removeAttribute(memberName);\n                    }\n                }\n            }\n            else if ((!isProp || flags & 4 /* VNODE_FLAGS.isHost */ || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                if (BUILD.vdomXlink && xlink) {\n                    elm.setAttributeNS(XLINK_NS, memberName, newValue);\n                }\n                else {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nconst parseClassListRegex = /\\s/;\nconst parseClassList = (value) => (!value ? [] : value.split(parseClassListRegex));\nconst updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    const elm = newVnode.$elm$.nodeType === 11 /* NODE_TYPE.DocumentFragment */ && newVnode.$elm$.host\n        ? newVnode.$elm$.host\n        : newVnode.$elm$;\n    const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    if (BUILD.updatable) {\n        // remove attributes no longer present on the vnode by setting them to undefined\n        for (memberName in oldVnodeAttrs) {\n            if (!(memberName in newVnodeAttrs)) {\n                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n            }\n        }\n    }\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\n/**\n * Create a DOM Node corresponding to one of the children of a given VNode.\n *\n * @param oldParentVNode the parent VNode from the previous render\n * @param newParentVNode the parent VNode from the current render\n * @param childIndex the index of the VNode, in the _new_ parent node's\n * children, for which we will create a new DOM node\n * @param parentElm the parent DOM node which our new node will be a child of\n * @returns the newly created node\n */\nconst createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n    // tslint:disable-next-line: prefer-const\n    const newVNode = newParentVNode.$children$[childIndex];\n    let i = 0;\n    let elm;\n    let childNode;\n    let oldVNode;\n    if (BUILD.slotRelocation && !useNativeShadowDom) {\n        // remember for later we need to check to relocate nodes\n        checkSlotRelocate = true;\n        if (newVNode.$tag$ === 'slot') {\n            if (scopeId) {\n                // scoped css needs to add its scoped id to the parent element\n                parentElm.classList.add(scopeId + '-s');\n            }\n            newVNode.$flags$ |= newVNode.$children$\n                ? // slot element has fallback content\n                    2 /* VNODE_FLAGS.isSlotFallback */\n                : // slot element does not have fallback content\n                    1 /* VNODE_FLAGS.isSlotReference */;\n        }\n    }\n    if (BUILD.isDev && newVNode.$elm$) {\n        consoleDevError(`The JSX ${newVNode.$text$ !== null ? `\"${newVNode.$text$}\" text` : `\"${newVNode.$tag$}\" element`} node should not be shared within the same renderer. The renderer caches element lookups in order to improve performance. However, a side effect from this is that the exact same JSX node should not be reused. For more information please see https://stenciljs.com/docs/templating-jsx#avoid-shared-jsx-nodes`);\n    }\n    if (BUILD.vdomText && newVNode.$text$ !== null) {\n        // create text node\n        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n    }\n    else if (BUILD.slotRelocation && newVNode.$flags$ & 1 /* VNODE_FLAGS.isSlotReference */) {\n        // create a slot reference node\n        elm = newVNode.$elm$ =\n            BUILD.isDebug || BUILD.hydrateServerSide ? slotReferenceDebugNode(newVNode) : doc.createTextNode('');\n    }\n    else {\n        if (BUILD.svg && !isSvgMode) {\n            isSvgMode = newVNode.$tag$ === 'svg';\n        }\n        // create element\n        elm = newVNode.$elm$ = (BUILD.svg\n            ? doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, BUILD.slotRelocation && newVNode.$flags$ & 2 /* VNODE_FLAGS.isSlotFallback */\n                ? 'slot-fb'\n                : newVNode.$tag$)\n            : doc.createElement(BUILD.slotRelocation && newVNode.$flags$ & 2 /* VNODE_FLAGS.isSlotFallback */\n                ? 'slot-fb'\n                : newVNode.$tag$));\n        if (BUILD.svg && isSvgMode && newVNode.$tag$ === 'foreignObject') {\n            isSvgMode = false;\n        }\n        // add css classes, attrs, props, listeners, etc.\n        if (BUILD.vdomAttribute) {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if ((BUILD.shadowDom || BUILD.scoped) && isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i, elm);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n        if (BUILD.svg) {\n            if (newVNode.$tag$ === 'svg') {\n                // Only reset the SVG context when we're exiting <svg> element\n                isSvgMode = false;\n            }\n            else if (elm.tagName === 'foreignObject') {\n                // Reenter SVG context when we're exiting <foreignObject> element\n                isSvgMode = true;\n            }\n        }\n    }\n    if (BUILD.slotRelocation) {\n        elm['s-hn'] = hostTagName;\n        if (newVNode.$flags$ & (2 /* VNODE_FLAGS.isSlotFallback */ | 1 /* VNODE_FLAGS.isSlotReference */)) {\n            // remember the content reference comment\n            elm['s-sr'] = true;\n            // remember the content reference comment\n            elm['s-cr'] = contentRef;\n            // remember the slot name, or empty string for default slot\n            elm['s-sn'] = newVNode.$name$ || '';\n            // check if we've got an old vnode for this slot\n            oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n            if (oldVNode && oldVNode.$tag$ === newVNode.$tag$ && oldParentVNode.$elm$) {\n                // we've got an old slot vnode and the wrapper is being replaced\n                // so let's move the old slot content back to it's original location\n                putBackInOriginalLocation(oldParentVNode.$elm$, false);\n            }\n        }\n    }\n    return elm;\n};\nconst putBackInOriginalLocation = (parentElm, recursive) => {\n    plt.$flags$ |= 1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n    const oldSlotChildNodes = parentElm.childNodes;\n    for (let i = oldSlotChildNodes.length - 1; i >= 0; i--) {\n        const childNode = oldSlotChildNodes[i];\n        if (childNode['s-hn'] !== hostTagName && childNode['s-ol']) {\n            // // this child node in the old element is from another component\n            // // remove this node from the old slot's parent\n            // childNode.remove();\n            // and relocate it back to it's original location\n            parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode));\n            // remove the old original location comment entirely\n            // later on the patch function will know what to do\n            // and move this to the correct spot in need be\n            childNode['s-ol'].remove();\n            childNode['s-ol'] = undefined;\n            checkSlotRelocate = true;\n        }\n        if (recursive) {\n            putBackInOriginalLocation(childNode, recursive);\n        }\n    }\n    plt.$flags$ &= ~1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n};\n/**\n * Create DOM nodes corresponding to a list of {@link d.Vnode} objects and\n * add them to the DOM in the appropriate place.\n *\n * @param parentElm the DOM node which should be used as a parent for the new\n * DOM nodes\n * @param before a child of the `parentElm` which the new children should be\n * inserted before (optional)\n * @param parentVNode the parent virtual DOM node\n * @param vnodes the new child virtual DOM nodes to produce DOM nodes for\n * @param startIdx the index in the child virtual DOM nodes at which to start\n * creating DOM nodes (inclusive)\n * @param endIdx the index in the child virtual DOM nodes at which to stop\n * creating DOM nodes (inclusive)\n */\nconst addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n    let containerElm = ((BUILD.slotRelocation && parentElm['s-cr'] && parentElm['s-cr'].parentNode) || parentElm);\n    let childNode;\n    if (BUILD.shadowDom && containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx, parentElm);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode, BUILD.slotRelocation ? referenceNode(before) : before);\n            }\n        }\n    }\n};\n/**\n * Remove the DOM elements corresponding to a list of {@link d.VNode} objects.\n * This can be used to, for instance, clean up after a list of children which\n * should no longer be shown.\n *\n * This function also handles some of Stencil's slot relocation logic.\n *\n * @param vnodes a list of virtual DOM nodes to remove\n * @param startIdx the index at which to start removing nodes (inclusive)\n * @param endIdx the index at which to stop removing nodes (inclusive)\n * @param vnode a VNode\n * @param elm an element\n */\nconst removeVnodes = (vnodes, startIdx, endIdx, vnode, elm) => {\n    for (; startIdx <= endIdx; ++startIdx) {\n        if ((vnode = vnodes[startIdx])) {\n            elm = vnode.$elm$;\n            callNodeRefs(vnode);\n            if (BUILD.slotRelocation) {\n                // we're removing this element\n                // so it's possible we need to show slot fallback content now\n                checkSlotFallbackVisibility = true;\n                if (elm['s-ol']) {\n                    // remove the original location comment\n                    elm['s-ol'].remove();\n                }\n                else {\n                    // it's possible that child nodes of the node\n                    // that's being removed are slot nodes\n                    putBackInOriginalLocation(elm, true);\n                }\n            }\n            // remove the vnode's element from the dom\n            elm.remove();\n        }\n    }\n};\n/**\n * Reconcile the children of a new VNode with the children of an old VNode by\n * traversing the two collections of children, identifying nodes that are\n * conserved or changed, calling out to `patch` to make any necessary\n * updates to the DOM, and rearranging DOM nodes as needed.\n *\n * The algorithm for reconciling children works by analyzing two 'windows' onto\n * the two arrays of children (`oldCh` and `newCh`). We keep track of the\n * 'windows' by storing start and end indices and references to the\n * corresponding array entries. Initially the two 'windows' are basically equal\n * to the entire array, but we progressively narrow the windows until there are\n * no children left to update by doing the following:\n *\n * 1. Skip any `null` entries at the beginning or end of the two arrays, so\n *    that if we have an initial array like the following we'll end up dealing\n *    only with a window bounded by the highlighted elements:\n *\n *    [null, null, VNode1 , ... , VNode2, null, null]\n *                 ^^^^^^         ^^^^^^\n *\n * 2. Check to see if the elements at the head and tail positions are equal\n *    across the windows. This will basically detect elements which haven't\n *    been added, removed, or changed position, i.e. if you had the following\n *    VNode elements (represented as HTML):\n *\n *    oldVNode: `<div><p><span>HEY</span></p></div>`\n *    newVNode: `<div><p><span>THERE</span></p></div>`\n *\n *    Then when comparing the children of the `<div>` tag we check the equality\n *    of the VNodes corresponding to the `<p>` tags and, since they are the\n *    same tag in the same position, we'd be able to avoid completely\n *    re-rendering the subtree under them with a new DOM element and would just\n *    call out to `patch` to handle reconciling their children and so on.\n *\n * 3. Check, for both windows, to see if the element at the beginning of the\n *    window corresponds to the element at the end of the other window. This is\n *    a heuristic which will let us identify _some_ situations in which\n *    elements have changed position, for instance it _should_ detect that the\n *    children nodes themselves have not changed but merely moved in the\n *    following example:\n *\n *    oldVNode: `<div><element-one /><element-two /></div>`\n *    newVNode: `<div><element-two /><element-one /></div>`\n *\n *    If we find cases like this then we also need to move the concrete DOM\n *    elements corresponding to the moved children to write the re-order to the\n *    DOM.\n *\n * 4. Finally, if VNodes have the `key` attribute set on them we check for any\n *    nodes in the old children which have the same key as the first element in\n *    our window on the new children. If we find such a node we handle calling\n *    out to `patch`, moving relevant DOM nodes, and so on, in accordance with\n *    what we find.\n *\n * Finally, once we've narrowed our 'windows' to the point that either of them\n * collapse (i.e. they have length 0) we then handle any remaining VNode\n * insertion or deletion that needs to happen to get a DOM state that correctly\n * reflects the new child VNodes. If, for instance, after our window on the old\n * children has collapsed we still have more nodes on the new children that\n * we haven't dealt with yet then we need to add them, or if the new children\n * collapse but we still have unhandled _old_ children then we need to make\n * sure the corresponding DOM nodes are removed.\n *\n * @param parentElm the node into which the parent VNode is rendered\n * @param oldCh the old children of the parent node\n * @param newVNode the new VNode which will replace the parent\n * @param newCh the new children of the parent node\n */\nconst updateChildren = (parentElm, oldCh, newVNode, newCh) => {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let idxInOld = 0;\n    let i = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let node;\n    let elmToMove;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            // VNode might have been moved left\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            // if the start nodes are the same then we should patch the new VNode\n            // onto the old one, and increment our `newStartIdx` and `oldStartIdx`\n            // indices to reflect that. We don't need to move any DOM Nodes around\n            // since things are matched up in order.\n            patch(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            // likewise, if the end nodes are the same we patch new onto old and\n            // decrement our end indices, and also likewise in this case we don't\n            // need to move any DOM Nodes.\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            // case: \"Vnode moved right\"\n            //\n            // We've found that the last node in our window on the new children is\n            // the same VNode as the _first_ node in our window on the old children\n            // we're dealing with now. Visually, this is the layout of these two\n            // nodes:\n            //\n            // newCh: [..., newStartVnode , ... , newEndVnode , ...]\n            //                                    ^^^^^^^^^^^\n            // oldCh: [..., oldStartVnode , ... , oldEndVnode , ...]\n            //              ^^^^^^^^^^^^^\n            //\n            // In this situation we need to patch `newEndVnode` onto `oldStartVnode`\n            // and move the DOM element for `oldStartVnode`.\n            if (BUILD.slotRelocation && (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n            }\n            patch(oldStartVnode, newEndVnode);\n            // We need to move the element for `oldStartVnode` into a position which\n            // will be appropriate for `newEndVnode`. For this we can use\n            // `.insertBefore` and `oldEndVnode.$elm$.nextSibling`. If there is a\n            // sibling for `oldEndVnode.$elm$` then we want to move the DOM node for\n            // `oldStartVnode` between `oldEndVnode` and it's sibling, like so:\n            //\n            // <old-start-node />\n            // <some-intervening-node />\n            // <old-end-node />\n            // <!-- ->              <-- `oldStartVnode.$elm$` should be inserted here\n            // <next-sibling />\n            //\n            // If instead `oldEndVnode.$elm$` has no sibling then we just want to put\n            // the node for `oldStartVnode` at the end of the children of\n            // `parentElm`. Luckily, `Node.nextSibling` will return `null` if there\n            // aren't any siblings, and passing `null` to `Node.insertBefore` will\n            // append it to the children of the parent element.\n            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            // case: \"Vnode moved left\"\n            //\n            // We've found that the first node in our window on the new children is\n            // the same VNode as the _last_ node in our window on the old children.\n            // Visually, this is the layout of these two nodes:\n            //\n            // newCh: [..., newStartVnode , ... , newEndVnode , ...]\n            //              ^^^^^^^^^^^^^\n            // oldCh: [..., oldStartVnode , ... , oldEndVnode , ...]\n            //                                    ^^^^^^^^^^^\n            //\n            // In this situation we need to patch `newStartVnode` onto `oldEndVnode`\n            // (which will handle updating any changed attributes, reconciling their\n            // children etc) but we also need to move the DOM node to which\n            // `oldEndVnode` corresponds.\n            if (BUILD.slotRelocation && (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n            }\n            patch(oldEndVnode, newStartVnode);\n            // We've already checked above if `oldStartVnode` and `newStartVnode` are\n            // the same node, so since we're here we know that they are not. Thus we\n            // can move the element for `oldEndVnode` _before_ the element for\n            // `oldStartVnode`, leaving `oldStartVnode` to be reconciled in the\n            // future.\n            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            // Here we do some checks to match up old and new nodes based on the\n            // `$key$` attribute, which is set by putting a `key=\"my-key\"` attribute\n            // in the JSX for a DOM element in the implementation of a Stencil\n            // component.\n            //\n            // First we check to see if there are any nodes in the array of old\n            // children which have the same key as the first node in the new\n            // children.\n            idxInOld = -1;\n            if (BUILD.vdomKey) {\n                for (i = oldStartIdx; i <= oldEndIdx; ++i) {\n                    if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {\n                        idxInOld = i;\n                        break;\n                    }\n                }\n            }\n            if (BUILD.vdomKey && idxInOld >= 0) {\n                // We found a node in the old children which matches up with the first\n                // node in the new children! So let's deal with that\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n                    // the tag doesn't match so we'll need a new DOM element\n                    node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld, parentElm);\n                }\n                else {\n                    patch(elmToMove, newStartVnode);\n                    // invalidate the matching old node so that we won't try to update it\n                    // again later on\n                    oldCh[idxInOld] = undefined;\n                    node = elmToMove.$elm$;\n                }\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                // We either didn't find an element in the old children that matches\n                // the key of the first new child OR the build is not using `key`\n                // attributes at all. In either case we need to create a new element\n                // for the new node.\n                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx, parentElm);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            if (node) {\n                // if we created a new node then handle inserting it to the DOM\n                if (BUILD.slotRelocation) {\n                    parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));\n                }\n                else {\n                    oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        // we have some more new nodes to add which don't match up with old nodes\n        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n    }\n    else if (BUILD.updatable && newStartIdx > newEndIdx) {\n        // there are nodes in the `oldCh` array which no longer correspond to nodes\n        // in the new array, so lets remove them (which entails cleaning up the\n        // relevant DOM nodes)\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n};\n/**\n * Compare two VNodes to determine if they are the same\n *\n * **NB**: This function is an equality _heuristic_ based on the available\n * information set on the two VNodes and can be misleading under certain\n * circumstances. In particular, if the two nodes do not have `key` attrs\n * (available under `$key$` on VNodes) then the function falls back on merely\n * checking that they have the same tag.\n *\n * So, in other words, if `key` attrs are not set on VNodes which may be\n * changing order within a `children` array or something along those lines then\n * we could obtain a false negative and then have to do needless re-rendering\n * (i.e. we'd say two VNodes aren't equal when in fact they should be).\n *\n * @param leftVNode the first VNode to check\n * @param rightVNode the second VNode to check\n * @returns whether they're equal or not\n */\nconst isSameVnode = (leftVNode, rightVNode) => {\n    // compare if two vnode to see if they're \"technically\" the same\n    // need to have the same element tag, and same key to be the same\n    if (leftVNode.$tag$ === rightVNode.$tag$) {\n        if (BUILD.slotRelocation && leftVNode.$tag$ === 'slot') {\n            return leftVNode.$name$ === rightVNode.$name$;\n        }\n        // this will be set if components in the build have `key` attrs set on them\n        if (BUILD.vdomKey) {\n            return leftVNode.$key$ === rightVNode.$key$;\n        }\n        return true;\n    }\n    return false;\n};\nconst referenceNode = (node) => {\n    // this node was relocated to a new location in the dom\n    // because of some other component's slot\n    // but we still have an html comment in place of where\n    // it's original location was according to it's original vdom\n    return (node && node['s-ol']) || node;\n};\nconst parentReferenceNode = (node) => (node['s-ol'] ? node['s-ol'] : node).parentNode;\n/**\n * Handle reconciling an outdated VNode with a new one which corresponds to\n * it. This function handles flushing updates to the DOM and reconciling the\n * children of the two nodes (if any).\n *\n * @param oldVNode an old VNode whose DOM element and children we want to update\n * @param newVNode a new VNode representing an updated version of the old one\n */\nconst patch = (oldVNode, newVNode) => {\n    const elm = (newVNode.$elm$ = oldVNode.$elm$);\n    const oldChildren = oldVNode.$children$;\n    const newChildren = newVNode.$children$;\n    const tag = newVNode.$tag$;\n    const text = newVNode.$text$;\n    let defaultHolder;\n    if (!BUILD.vdomText || text === null) {\n        if (BUILD.svg) {\n            // test if we're rendering an svg element, or still rendering nodes inside of one\n            // only add this to the when the compiler sees we're using an svg somewhere\n            isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;\n        }\n        if (BUILD.vdomAttribute || BUILD.reflect) {\n            if (BUILD.slot && tag === 'slot')\n                ;\n            else {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if (BUILD.updatable && oldChildren !== null && newChildren !== null) {\n            // looks like there's child vnodes for both the old and new vnodes\n            // so we need to call `updateChildren` to reconcile them\n            updateChildren(elm, oldChildren, newVNode, newChildren);\n        }\n        else if (newChildren !== null) {\n            // no old child vnodes, but there are new child vnodes to add\n            if (BUILD.updatable && BUILD.vdomText && oldVNode.$text$ !== null) {\n                // the old vnode was text, so be sure to clear it out\n                elm.textContent = '';\n            }\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else if (BUILD.updatable && oldChildren !== null) {\n            // no new child vnodes, but there are old child vnodes to remove\n            removeVnodes(oldChildren, 0, oldChildren.length - 1);\n        }\n        if (BUILD.svg && isSvgMode && tag === 'svg') {\n            isSvgMode = false;\n        }\n    }\n    else if (BUILD.vdomText && BUILD.slotRelocation && (defaultHolder = elm['s-cr'])) {\n        // this element has slotted content\n        defaultHolder.parentNode.textContent = text;\n    }\n    else if (BUILD.vdomText && oldVNode.$text$ !== text) {\n        // update the text content for the text only vnode\n        // and also only if the text is different than before\n        elm.data = text;\n    }\n};\nconst updateFallbackSlotVisibility = (elm) => {\n    // tslint:disable-next-line: prefer-const\n    const childNodes = elm.childNodes;\n    let childNode;\n    let i;\n    let ilen;\n    let j;\n    let slotNameAttr;\n    let nodeType;\n    for (i = 0, ilen = childNodes.length; i < ilen; i++) {\n        childNode = childNodes[i];\n        if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n            if (childNode['s-sr']) {\n                // this is a slot fallback node\n                // get the slot name for this slot reference node\n                slotNameAttr = childNode['s-sn'];\n                // by default always show a fallback slot node\n                // then hide it if there are other slots in the light dom\n                childNode.hidden = false;\n                for (j = 0; j < ilen; j++) {\n                    nodeType = childNodes[j].nodeType;\n                    if (childNodes[j]['s-hn'] !== childNode['s-hn'] || slotNameAttr !== '') {\n                        // this sibling node is from a different component OR is a named fallback slot node\n                        if (nodeType === 1 /* NODE_TYPE.ElementNode */ && slotNameAttr === childNodes[j].getAttribute('slot')) {\n                            childNode.hidden = true;\n                            break;\n                        }\n                    }\n                    else {\n                        // this is a default fallback slot node\n                        // any element or text node (with content)\n                        // should hide the default fallback slot node\n                        if (nodeType === 1 /* NODE_TYPE.ElementNode */ ||\n                            (nodeType === 3 /* NODE_TYPE.TextNode */ && childNodes[j].textContent.trim() !== '')) {\n                            childNode.hidden = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            // keep drilling down\n            updateFallbackSlotVisibility(childNode);\n        }\n    }\n};\nconst relocateNodes = [];\nconst relocateSlotContent = (elm) => {\n    // tslint:disable-next-line: prefer-const\n    let childNode;\n    let node;\n    let hostContentNodes;\n    let slotNameAttr;\n    let relocateNodeData;\n    let j;\n    let i = 0;\n    const childNodes = elm.childNodes;\n    const ilen = childNodes.length;\n    for (; i < ilen; i++) {\n        childNode = childNodes[i];\n        if (childNode['s-sr'] && (node = childNode['s-cr']) && node.parentNode) {\n            // first got the content reference comment node\n            // then we got it's parent, which is where all the host content is in now\n            hostContentNodes = node.parentNode.childNodes;\n            slotNameAttr = childNode['s-sn'];\n            for (j = hostContentNodes.length - 1; j >= 0; j--) {\n                node = hostContentNodes[j];\n                if (!node['s-cn'] && !node['s-nr'] && node['s-hn'] !== childNode['s-hn']) {\n                    // let's do some relocating to its new home\n                    // but never relocate a content reference node\n                    // that is suppose to always represent the original content location\n                    if (isNodeLocatedInSlot(node, slotNameAttr)) {\n                        // it's possible we've already decided to relocate this node\n                        relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                        // made some changes to slots\n                        // let's make sure we also double check\n                        // fallbacks are correctly hidden or shown\n                        checkSlotFallbackVisibility = true;\n                        node['s-sn'] = node['s-sn'] || slotNameAttr;\n                        if (relocateNodeData) {\n                            // previously we never found a slot home for this node\n                            // but turns out we did, so let's remember it now\n                            relocateNodeData.$slotRefNode$ = childNode;\n                        }\n                        else {\n                            // add to our list of nodes to relocate\n                            relocateNodes.push({\n                                $slotRefNode$: childNode,\n                                $nodeToRelocate$: node,\n                            });\n                        }\n                        if (node['s-sr']) {\n                            relocateNodes.map((relocateNode) => {\n                                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node['s-sn'])) {\n                                    relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                                    if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                                        relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {\n                        // so far this element does not have a slot home, not setting slotRefNode on purpose\n                        // if we never find a home for this element then we'll need to hide it\n                        relocateNodes.push({\n                            $nodeToRelocate$: node,\n                        });\n                    }\n                }\n            }\n        }\n        if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n            relocateSlotContent(childNode);\n        }\n    }\n};\nconst isNodeLocatedInSlot = (nodeToRelocate, slotNameAttr) => {\n    if (nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        if (nodeToRelocate.getAttribute('slot') === null && slotNameAttr === '') {\n            return true;\n        }\n        if (nodeToRelocate.getAttribute('slot') === slotNameAttr) {\n            return true;\n        }\n        return false;\n    }\n    if (nodeToRelocate['s-sn'] === slotNameAttr) {\n        return true;\n    }\n    return slotNameAttr === '';\n};\nconst callNodeRefs = (vNode) => {\n    if (BUILD.vdomRef) {\n        vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n        vNode.$children$ && vNode.$children$.map(callNodeRefs);\n    }\n};\n/**\n * The main entry point for Stencil's virtual DOM-based rendering engine\n *\n * Given a {@link d.HostRef} container and some virtual DOM nodes, this\n * function will handle creating a virtual DOM tree with a single root, patching\n * the current virtual DOM tree onto an old one (if any), dealing with slot\n * relocation, and reflecting attributes.\n *\n * @param hostRef data needed to root and render the virtual DOM tree, such as\n * the DOM node into which it should be rendered.\n * @param renderFnResults the virtual DOM nodes to be rendered\n */\nconst renderVdom = (hostRef, renderFnResults) => {\n    const hostElm = hostRef.$hostElement$;\n    const cmpMeta = hostRef.$cmpMeta$;\n    const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n    hostTagName = hostElm.tagName;\n    // <Host> runtime check\n    if (BUILD.isDev && Array.isArray(renderFnResults) && renderFnResults.some(isHost)) {\n        throw new Error(`The <Host> must be the single root component.\nLooks like the render() function of \"${hostTagName.toLowerCase()}\" is returning an array that contains the <Host>.\n\nThe render() function should look like this instead:\n\nrender() {\n  // Do not return an array\n  return (\n    <Host>{content}</Host>\n  );\n}\n  `);\n    }\n    if (BUILD.reflect && cmpMeta.$attrsToReflect$) {\n        rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n        cmpMeta.$attrsToReflect$.map(([propName, attribute]) => (rootVnode.$attrs$[attribute] = hostElm[propName]));\n    }\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* VNODE_FLAGS.isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = (BUILD.shadowDom ? hostElm.shadowRoot || hostElm : hostElm);\n    if (BUILD.scoped || BUILD.shadowDom) {\n        scopeId = hostElm['s-sc'];\n    }\n    if (BUILD.slotRelocation) {\n        contentRef = hostElm['s-cr'];\n        useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) !== 0;\n        // always reset\n        checkSlotFallbackVisibility = false;\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode);\n    if (BUILD.slotRelocation) {\n        // while we're moving nodes around existing nodes, temporarily disable\n        // the disconnectCallback from working\n        plt.$flags$ |= 1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n        if (checkSlotRelocate) {\n            relocateSlotContent(rootVnode.$elm$);\n            let relocateData;\n            let nodeToRelocate;\n            let orgLocationNode;\n            let parentNodeRef;\n            let insertBeforeNode;\n            let refNode;\n            let i = 0;\n            for (; i < relocateNodes.length; i++) {\n                relocateData = relocateNodes[i];\n                nodeToRelocate = relocateData.$nodeToRelocate$;\n                if (!nodeToRelocate['s-ol']) {\n                    // add a reference node marking this node's original location\n                    // keep a reference to this node for later lookups\n                    orgLocationNode =\n                        BUILD.isDebug || BUILD.hydrateServerSide\n                            ? originalLocationDebugNode(nodeToRelocate)\n                            : doc.createTextNode('');\n                    orgLocationNode['s-nr'] = nodeToRelocate;\n                    nodeToRelocate.parentNode.insertBefore((nodeToRelocate['s-ol'] = orgLocationNode), nodeToRelocate);\n                }\n            }\n            for (i = 0; i < relocateNodes.length; i++) {\n                relocateData = relocateNodes[i];\n                nodeToRelocate = relocateData.$nodeToRelocate$;\n                if (relocateData.$slotRefNode$) {\n                    // by default we're just going to insert it directly\n                    // after the slot reference node\n                    parentNodeRef = relocateData.$slotRefNode$.parentNode;\n                    insertBeforeNode = relocateData.$slotRefNode$.nextSibling;\n                    orgLocationNode = nodeToRelocate['s-ol'];\n                    while ((orgLocationNode = orgLocationNode.previousSibling)) {\n                        refNode = orgLocationNode['s-nr'];\n                        if (refNode && refNode['s-sn'] === nodeToRelocate['s-sn'] && parentNodeRef === refNode.parentNode) {\n                            refNode = refNode.nextSibling;\n                            if (!refNode || !refNode['s-nr']) {\n                                insertBeforeNode = refNode;\n                                break;\n                            }\n                        }\n                    }\n                    if ((!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode) ||\n                        nodeToRelocate.nextSibling !== insertBeforeNode) {\n                        // we've checked that it's worth while to relocate\n                        // since that the node to relocate\n                        // has a different next sibling or parent relocated\n                        if (nodeToRelocate !== insertBeforeNode) {\n                            if (!nodeToRelocate['s-hn'] && nodeToRelocate['s-ol']) {\n                                // probably a component in the index.html that doesn't have it's hostname set\n                                nodeToRelocate['s-hn'] = nodeToRelocate['s-ol'].parentNode.nodeName;\n                            }\n                            // add it back to the dom but in its new home\n                            parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);\n                        }\n                    }\n                }\n                else {\n                    // this node doesn't have a slot home to go to, so let's hide it\n                    if (nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n                        nodeToRelocate.hidden = true;\n                    }\n                }\n            }\n        }\n        if (checkSlotFallbackVisibility) {\n            updateFallbackSlotVisibility(rootVnode.$elm$);\n        }\n        // done moving nodes around\n        // allow the disconnect callback to work again\n        plt.$flags$ &= ~1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n        // always reset\n        relocateNodes.length = 0;\n    }\n};\n// slot comment debug nodes only created with the `--debug` flag\n// otherwise these nodes are text nodes w/out content\nconst slotReferenceDebugNode = (slotVNode) => doc.createComment(`<slot${slotVNode.$name$ ? ' name=\"' + slotVNode.$name$ + '\"' : ''}> (host=${hostTagName.toLowerCase()})`);\nconst originalLocationDebugNode = (nodeToRelocate) => doc.createComment(`org-location for ` +\n    (nodeToRelocate.localName\n        ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate['s-hn']})`\n        : `[${nodeToRelocate.textContent}]`));\nconst attachToAncestor = (hostRef, ancestorComponent) => {\n    if (BUILD.asyncLoading && ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n        ancestorComponent['s-p'].push(new Promise((r) => (hostRef.$onRenderResolve$ = r)));\n    }\n};\nconst scheduleUpdate = (hostRef, isInitialLoad) => {\n    if (BUILD.taskQueue && BUILD.updatable) {\n        hostRef.$flags$ |= 16 /* HOST_FLAGS.isQueuedForUpdate */;\n    }\n    if (BUILD.asyncLoading && hostRef.$flags$ & 4 /* HOST_FLAGS.isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* HOST_FLAGS.needsRerender */;\n        return;\n    }\n    attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n    // there is no ancestor component or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n    return BUILD.taskQueue ? writeTask(dispatch) : dispatch();\n};\nconst dispatchHooks = (hostRef, isInitialLoad) => {\n    const elm = hostRef.$hostElement$;\n    const endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n    const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n    let promise;\n    if (isInitialLoad) {\n        if (BUILD.lazyLoad && BUILD.hostListener) {\n            hostRef.$flags$ |= 256 /* HOST_FLAGS.isListenReady */;\n            if (hostRef.$queuedListeners$) {\n                hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));\n                hostRef.$queuedListeners$ = null;\n            }\n        }\n        emitLifecycleEvent(elm, 'componentWillLoad');\n        if (BUILD.cmpWillLoad) {\n            promise = safeCall(instance, 'componentWillLoad');\n        }\n    }\n    else {\n        emitLifecycleEvent(elm, 'componentWillUpdate');\n        if (BUILD.cmpWillUpdate) {\n            promise = safeCall(instance, 'componentWillUpdate');\n        }\n    }\n    emitLifecycleEvent(elm, 'componentWillRender');\n    if (BUILD.cmpWillRender) {\n        promise = then(promise, () => safeCall(instance, 'componentWillRender'));\n    }\n    endSchedule();\n    return then(promise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nconst updateComponent = async (hostRef, instance, isInitialLoad) => {\n    // updateComponent\n    const elm = hostRef.$hostElement$;\n    const endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n    const rc = elm['s-rc'];\n    if (BUILD.style && isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(hostRef);\n    }\n    const endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n    if (BUILD.isDev) {\n        hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;\n    }\n    if (BUILD.hydrateServerSide) {\n        await callRender(hostRef, instance, elm);\n    }\n    else {\n        callRender(hostRef, instance, elm);\n    }\n    if (BUILD.cssVarShim && plt.$cssShim$) {\n        plt.$cssShim$.updateHost(elm);\n    }\n    if (BUILD.isDev) {\n        hostRef.$renderCount$++;\n        hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;\n    }\n    if (BUILD.hydrateServerSide) {\n        try {\n            // manually connected child components during server-side hydrate\n            serverSideConnected(elm);\n            if (isInitialLoad) {\n                // using only during server-side hydrate\n                if (hostRef.$cmpMeta$.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                    elm['s-en'] = '';\n                }\n                else if (hostRef.$cmpMeta$.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n                    elm['s-en'] = 'c';\n                }\n            }\n        }\n        catch (e) {\n            consoleError(e, elm);\n        }\n    }\n    if (BUILD.asyncLoading && rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.map((cb) => cb());\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    if (BUILD.asyncLoading) {\n        const childrenPromises = elm['s-p'];\n        const postUpdate = () => postUpdateComponent(hostRef);\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* HOST_FLAGS.isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n    else {\n        postUpdateComponent(hostRef);\n    }\n};\nconst callRender = (hostRef, instance, elm) => {\n    // in order for bundlers to correctly treeshake the BUILD object\n    // we need to ensure BUILD is not deoptimized within a try/catch\n    // https://rollupjs.org/guide/en/#treeshake tryCatchDeoptimization\n    const allRenderFn = BUILD.allRenderFn ? true : false;\n    const lazyLoad = BUILD.lazyLoad ? true : false;\n    const taskQueue = BUILD.taskQueue ? true : false;\n    const updatable = BUILD.updatable ? true : false;\n    try {\n        renderingRef = instance;\n        instance = allRenderFn ? instance.render() : instance.render && instance.render();\n        if (updatable && taskQueue) {\n            hostRef.$flags$ &= ~16 /* HOST_FLAGS.isQueuedForUpdate */;\n        }\n        if (updatable || lazyLoad) {\n            hostRef.$flags$ |= 2 /* HOST_FLAGS.hasRendered */;\n        }\n        if (BUILD.hasRenderFn || BUILD.reflect) {\n            if (BUILD.vdomRender || BUILD.reflect) {\n                // looks like we've got child nodes to render into this host element\n                // or we need to update the css class/attrs on the host element\n                // DOM WRITE!\n                if (BUILD.hydrateServerSide) {\n                    return Promise.resolve(instance).then((value) => renderVdom(hostRef, value));\n                }\n                else {\n                    renderVdom(hostRef, instance);\n                }\n            }\n            else {\n                elm.textContent = instance;\n            }\n        }\n    }\n    catch (e) {\n        consoleError(e, hostRef.$hostElement$);\n    }\n    renderingRef = null;\n    return null;\n};\nconst getRenderingRef = () => renderingRef;\nconst postUpdateComponent = (hostRef) => {\n    const tagName = hostRef.$cmpMeta$.$tagName$;\n    const elm = hostRef.$hostElement$;\n    const endPostUpdate = createTime('postUpdate', tagName);\n    const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    if (BUILD.cmpDidRender) {\n        if (BUILD.isDev) {\n            hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;\n        }\n        safeCall(instance, 'componentDidRender');\n        if (BUILD.isDev) {\n            hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;\n        }\n    }\n    emitLifecycleEvent(elm, 'componentDidRender');\n    if (!(hostRef.$flags$ & 64 /* HOST_FLAGS.hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* HOST_FLAGS.hasLoadedComponent */;\n        if (BUILD.asyncLoading && BUILD.cssAnnotations) {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        if (BUILD.cmpDidLoad) {\n            if (BUILD.isDev) {\n                hostRef.$flags$ |= 2048 /* HOST_FLAGS.devOnDidLoad */;\n            }\n            safeCall(instance, 'componentDidLoad');\n            if (BUILD.isDev) {\n                hostRef.$flags$ &= ~2048 /* HOST_FLAGS.devOnDidLoad */;\n            }\n        }\n        emitLifecycleEvent(elm, 'componentDidLoad');\n        endPostUpdate();\n        if (BUILD.asyncLoading) {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad(tagName);\n            }\n        }\n    }\n    else {\n        if (BUILD.cmpDidUpdate) {\n            // we've already loaded this component\n            // fire off the user's componentDidUpdate method (if one was provided)\n            // componentDidUpdate runs AFTER render() has been called\n            // and all child components have finished updating\n            if (BUILD.isDev) {\n                hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;\n            }\n            safeCall(instance, 'componentDidUpdate');\n            if (BUILD.isDev) {\n                hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;\n            }\n        }\n        emitLifecycleEvent(elm, 'componentDidUpdate');\n        endPostUpdate();\n    }\n    if (BUILD.hotModuleReplacement) {\n        elm['s-hmr-load'] && elm['s-hmr-load']();\n    }\n    if (BUILD.method && BUILD.lazyLoad) {\n        hostRef.$onInstanceResolve$(elm);\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    if (BUILD.asyncLoading) {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* HOST_FLAGS.needsRerender */) {\n            nextTick(() => scheduleUpdate(hostRef, false));\n        }\n        hostRef.$flags$ &= ~(4 /* HOST_FLAGS.isWaitingForChildren */ | 512 /* HOST_FLAGS.needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nconst forceUpdate = (ref) => {\n    if (BUILD.updatable) {\n        const hostRef = getHostRef(ref);\n        const isConnected = hostRef.$hostElement$.isConnected;\n        if (isConnected &&\n            (hostRef.$flags$ & (2 /* HOST_FLAGS.hasRendered */ | 16 /* HOST_FLAGS.isQueuedForUpdate */)) === 2 /* HOST_FLAGS.hasRendered */) {\n            scheduleUpdate(hostRef, false);\n        }\n        // Returns \"true\" when the forced update was successfully scheduled\n        return isConnected;\n    }\n    return false;\n};\nconst appDidLoad = (who) => {\n    // on appload\n    // we have finish the first big initial render\n    if (BUILD.cssAnnotations) {\n        addHydratedFlag(doc.documentElement);\n    }\n    if (BUILD.asyncQueue) {\n        plt.$flags$ |= 2 /* PLATFORM_FLAGS.appLoaded */;\n    }\n    nextTick(() => emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }));\n    if (BUILD.profile && performance.measure) {\n        performance.measure(`[Stencil] ${NAMESPACE} initial load (by ${who})`, 'st:app:start');\n    }\n};\nconst safeCall = (instance, method, arg) => {\n    if (instance && instance[method]) {\n        try {\n            return instance[method](arg);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    return undefined;\n};\nconst then = (promise, thenFn) => {\n    return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\nconst emitLifecycleEvent = (elm, lifecycleName) => {\n    if (BUILD.lifecycleDOMEvents) {\n        emitEvent(elm, 'stencil_' + lifecycleName, {\n            bubbles: true,\n            composed: true,\n            detail: {\n                namespace: NAMESPACE,\n            },\n        });\n    }\n};\nconst addHydratedFlag = (elm) => BUILD.hydratedClass\n    ? elm.classList.add('hydrated')\n    : BUILD.hydratedAttribute\n        ? elm.setAttribute('hydrated', '')\n        : undefined;\nconst serverSideConnected = (elm) => {\n    const children = elm.children;\n    if (children != null) {\n        for (let i = 0, ii = children.length; i < ii; i++) {\n            const childElm = children[i];\n            if (typeof childElm.connectedCallback === 'function') {\n                childElm.connectedCallback();\n            }\n            serverSideConnected(childElm);\n        }\n    }\n};\nconst getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nconst setValue = (ref, propName, newVal, cmpMeta) => {\n    // check our new property value against our internal value\n    const hostRef = getHostRef(ref);\n    const elm = BUILD.lazyLoad ? hostRef.$hostElement$ : ref;\n    const oldVal = hostRef.$instanceValues$.get(propName);\n    const flags = hostRef.$flags$;\n    const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n    // explicitly check for NaN on both sides, as `NaN === NaN` is always false\n    const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);\n    const didValueChange = newVal !== oldVal && !areBothNaN;\n    if ((!BUILD.lazyLoad || !(flags & 8 /* HOST_FLAGS.isConstructingInstance */) || oldVal === undefined) && didValueChange) {\n        // gadzooks! the property's value has changed!!\n        // set our new value!\n        hostRef.$instanceValues$.set(propName, newVal);\n        if (BUILD.isDev) {\n            if (hostRef.$flags$ & 1024 /* HOST_FLAGS.devOnRender */) {\n                consoleDevWarn(`The state/prop \"${propName}\" changed during rendering. This can potentially lead to infinite-loops and other bugs.`, '\\nElement', elm, '\\nNew value', newVal, '\\nOld value', oldVal);\n            }\n            else if (hostRef.$flags$ & 2048 /* HOST_FLAGS.devOnDidLoad */) {\n                consoleDevWarn(`The state/prop \"${propName}\" changed during \"componentDidLoad()\", this triggers extra re-renders, try to setup on \"componentWillLoad()\"`, '\\nElement', elm, '\\nNew value', newVal, '\\nOld value', oldVal);\n            }\n        }\n        if (!BUILD.lazyLoad || instance) {\n            // get an array of method names of watch functions to call\n            if (BUILD.watchCallback && cmpMeta.$watchers$ && flags & 128 /* HOST_FLAGS.isWatchReady */) {\n                const watchMethods = cmpMeta.$watchers$[propName];\n                if (watchMethods) {\n                    // this instance is watching for when this property changed\n                    watchMethods.map((watchMethodName) => {\n                        try {\n                            // fire off each of the watch methods that are watching this property\n                            instance[watchMethodName](newVal, oldVal, propName);\n                        }\n                        catch (e) {\n                            consoleError(e, elm);\n                        }\n                    });\n                }\n            }\n            if (BUILD.updatable &&\n                (flags & (2 /* HOST_FLAGS.hasRendered */ | 16 /* HOST_FLAGS.isQueuedForUpdate */)) === 2 /* HOST_FLAGS.hasRendered */) {\n                if (BUILD.cmpShouldUpdate && instance.componentShouldUpdate) {\n                    if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {\n                        return;\n                    }\n                }\n                // looks like this value actually changed, so we've got work to do!\n                // but only if we've already rendered, otherwise just chill out\n                // queue that we need to do an update, but don't worry about queuing\n                // up millions cuz this function ensures it only runs once\n                scheduleUpdate(hostRef, false);\n            }\n        }\n    }\n};\n/**\n * Attach a series of runtime constructs to a compiled Stencil component\n * constructor, including getters and setters for the `@Prop` and `@State`\n * decorators, callbacks for when attributes change, and so on.\n *\n * @param Cstr the constructor for a component that we need to process\n * @param cmpMeta metadata collected previously about the component\n * @param flags a number used to store a series of bit flags\n * @returns a reference to the same constructor passed in (but now mutated)\n */\nconst proxyComponent = (Cstr, cmpMeta, flags) => {\n    if (BUILD.member && cmpMeta.$members$) {\n        if (BUILD.watchCallback && Cstr.watchers) {\n            cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        // It's better to have a const than two Object.entries()\n        const members = Object.entries(cmpMeta.$members$);\n        const prototype = Cstr.prototype;\n        members.map(([memberName, [memberFlags]]) => {\n            if ((BUILD.prop || BUILD.state) &&\n                (memberFlags & 31 /* MEMBER_FLAGS.Prop */ ||\n                    ((!BUILD.lazyLoad || flags & 2 /* PROXY_FLAGS.proxyState */) && memberFlags & 32 /* MEMBER_FLAGS.State */))) {\n                // proxyComponent - prop\n                Object.defineProperty(prototype, memberName, {\n                    get() {\n                        // proxyComponent, get value\n                        return getValue(this, memberName);\n                    },\n                    set(newValue) {\n                        // only during dev time\n                        if (BUILD.isDev) {\n                            const ref = getHostRef(this);\n                            if (\n                            // we are proxying the instance (not element)\n                            (flags & 1 /* PROXY_FLAGS.isElementConstructor */) === 0 &&\n                                // the element is not constructing\n                                (ref.$flags$ & 8 /* HOST_FLAGS.isConstructingInstance */) === 0 &&\n                                // the member is a prop\n                                (memberFlags & 31 /* MEMBER_FLAGS.Prop */) !== 0 &&\n                                // the member is not mutable\n                                (memberFlags & 1024 /* MEMBER_FLAGS.Mutable */) === 0) {\n                                consoleDevWarn(`@Prop() \"${memberName}\" on <${cmpMeta.$tagName$}> is immutable but was modified from within the component.\\nMore information: https://stenciljs.com/docs/properties#prop-mutability`);\n                            }\n                        }\n                        // proxyComponent, set value\n                        setValue(this, memberName, newValue, cmpMeta);\n                    },\n                    configurable: true,\n                    enumerable: true,\n                });\n            }\n            else if (BUILD.lazyLoad &&\n                BUILD.method &&\n                flags & 1 /* PROXY_FLAGS.isElementConstructor */ &&\n                memberFlags & 64 /* MEMBER_FLAGS.Method */) {\n                // proxyComponent - method\n                Object.defineProperty(prototype, memberName, {\n                    value(...args) {\n                        const ref = getHostRef(this);\n                        return ref.$onInstancePromise$.then(() => ref.$lazyInstance$[memberName](...args));\n                    },\n                });\n            }\n        });\n        if (BUILD.observeAttribute && (!BUILD.lazyLoad || flags & 1 /* PROXY_FLAGS.isElementConstructor */)) {\n            const attrNameToPropName = new Map();\n            prototype.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n                plt.jmp(() => {\n                    const propName = attrNameToPropName.get(attrName);\n                    //  In a web component lifecycle the attributeChangedCallback runs prior to connectedCallback\n                    //  in the case where an attribute was set inline.\n                    //  ```html\n                    //    <my-component some-attribute=\"some-value\"></my-component>\n                    //  ```\n                    //\n                    //  There is an edge case where a developer sets the attribute inline on a custom element and then\n                    //  programmatically changes it before it has been upgraded as shown below:\n                    //\n                    //  ```html\n                    //    <!-- this component has _not_ been upgraded yet -->\n                    //    <my-component id=\"test\" some-attribute=\"some-value\"></my-component>\n                    //    <script>\n                    //      // grab non-upgraded component\n                    //      el = document.querySelector(\"#test\");\n                    //      el.someAttribute = \"another-value\";\n                    //      // upgrade component\n                    //      customElements.define('my-component', MyComponent);\n                    //    </script>\n                    //  ```\n                    //  In this case if we do not unshadow here and use the value of the shadowing property, attributeChangedCallback\n                    //  will be called with `newValue = \"some-value\"` and will set the shadowed property (this.someAttribute = \"another-value\")\n                    //  to the value that was set inline i.e. \"some-value\" from above example. When\n                    //  the connectedCallback attempts to unshadow it will use \"some-value\" as the initial value rather than \"another-value\"\n                    //\n                    //  The case where the attribute was NOT set inline but was not set programmatically shall be handled/unshadowed\n                    //  by connectedCallback as this attributeChangedCallback will not fire.\n                    //\n                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n                    //\n                    //  TODO(STENCIL-16) we should think about whether or not we actually want to be reflecting the attributes to\n                    //  properties here given that this goes against best practices outlined here\n                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#avoid-reentrancy\n                    if (this.hasOwnProperty(propName)) {\n                        newValue = this[propName];\n                        delete this[propName];\n                    }\n                    else if (prototype.hasOwnProperty(propName) &&\n                        typeof this[propName] === 'number' &&\n                        this[propName] == newValue) {\n                        // if the propName exists on the prototype of `Cstr`, this update may be a result of Stencil using native\n                        // APIs to reflect props as attributes. Calls to `setAttribute(someElement, propName)` will result in\n                        // `propName` to be converted to a `DOMString`, which may not be what we want for other primitive props.\n                        return;\n                    }\n                    this[propName] = newValue === null && typeof this[propName] === 'boolean' ? false : newValue;\n                });\n            };\n            // create an array of attributes to observe\n            // and also create a map of html attribute name to js property name\n            Cstr.observedAttributes = members\n                .filter(([_, m]) => m[0] & 15 /* MEMBER_FLAGS.HasAttribute */) // filter to only keep props that should match attributes\n                .map(([propName, m]) => {\n                const attrName = m[1] || propName;\n                attrNameToPropName.set(attrName, propName);\n                if (BUILD.reflect && m[0] & 512 /* MEMBER_FLAGS.ReflectAttr */) {\n                    cmpMeta.$attrsToReflect$.push([propName, attrName]);\n                }\n                return attrName;\n            });\n        }\n    }\n    return Cstr;\n};\nconst initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId, Cstr) => {\n    // initializeComponent\n    if ((BUILD.lazyLoad || BUILD.hydrateServerSide || BUILD.style) &&\n        (hostRef.$flags$ & 32 /* HOST_FLAGS.hasInitializedComponent */) === 0) {\n        if (BUILD.lazyLoad || BUILD.hydrateClientSide) {\n            // we haven't initialized this element yet\n            hostRef.$flags$ |= 32 /* HOST_FLAGS.hasInitializedComponent */;\n            // lazy loaded components\n            // request the component's implementation to be\n            // wired up with the host element\n            Cstr = loadModule(cmpMeta, hostRef, hmrVersionId);\n            if (Cstr.then) {\n                // Await creates a micro-task avoid if possible\n                const endLoad = uniqueTime(`st:load:${cmpMeta.$tagName$}:${hostRef.$modeName$}`, `[Stencil] Load module for <${cmpMeta.$tagName$}>`);\n                Cstr = await Cstr;\n                endLoad();\n            }\n            if ((BUILD.isDev || BUILD.isDebug) && !Cstr) {\n                throw new Error(`Constructor for \"${cmpMeta.$tagName$}#${hostRef.$modeName$}\" was not found`);\n            }\n            if (BUILD.member && !Cstr.isProxied) {\n                // we've never proxied this Constructor before\n                // let's add the getters/setters to its prototype before\n                // the first time we create an instance of the implementation\n                if (BUILD.watchCallback) {\n                    cmpMeta.$watchers$ = Cstr.watchers;\n                }\n                proxyComponent(Cstr, cmpMeta, 2 /* PROXY_FLAGS.proxyState */);\n                Cstr.isProxied = true;\n            }\n            const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n            // ok, time to construct the instance\n            // but let's keep track of when we start and stop\n            // so that the getters/setters don't incorrectly step on data\n            if (BUILD.member) {\n                hostRef.$flags$ |= 8 /* HOST_FLAGS.isConstructingInstance */;\n            }\n            // construct the lazy-loaded component implementation\n            // passing the hostRef is very important during\n            // construction in order to directly wire together the\n            // host element and the lazy-loaded instance\n            try {\n                new Cstr(hostRef);\n            }\n            catch (e) {\n                consoleError(e);\n            }\n            if (BUILD.member) {\n                hostRef.$flags$ &= ~8 /* HOST_FLAGS.isConstructingInstance */;\n            }\n            if (BUILD.watchCallback) {\n                hostRef.$flags$ |= 128 /* HOST_FLAGS.isWatchReady */;\n            }\n            endNewInstance();\n            fireConnectedCallback(hostRef.$lazyInstance$);\n        }\n        else {\n            // sync constructor component\n            Cstr = elm.constructor;\n            hostRef.$flags$ |= 32 /* HOST_FLAGS.hasInitializedComponent */;\n            // wait for the CustomElementRegistry to mark the component as ready before setting `isWatchReady`. Otherwise,\n            // watchers may fire prematurely if `customElements.get()`/`customElements.whenDefined()` resolves _before_\n            // Stencil has completed instantiating the component.\n            customElements.whenDefined(cmpMeta.$tagName$).then(() => (hostRef.$flags$ |= 128 /* HOST_FLAGS.isWatchReady */));\n        }\n        if (BUILD.style && Cstr.style) {\n            // this component has styles but we haven't registered them yet\n            let style = Cstr.style;\n            if (BUILD.mode && typeof style !== 'string') {\n                style = style[(hostRef.$modeName$ = computeMode(elm))];\n                if (BUILD.hydrateServerSide && hostRef.$modeName$) {\n                    elm.setAttribute('s-mode', hostRef.$modeName$);\n                }\n            }\n            const scopeId = getScopeId(cmpMeta, hostRef.$modeName$);\n            if (!styles.has(scopeId)) {\n                const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n                if (!BUILD.hydrateServerSide &&\n                    BUILD.shadowDom &&\n                    BUILD.shadowDomShim &&\n                    cmpMeta.$flags$ & 8 /* CMP_FLAGS.needsShadowDomShim */) {\n                    style = await import('./shadow-css.js').then((m) => m.scopeCss(style, scopeId, false));\n                }\n                registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */));\n                endRegisterStyles();\n            }\n        }\n    }\n    // we've successfully created a lazy instance\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    const schedule = () => scheduleUpdate(hostRef, true);\n    if (BUILD.asyncLoading && ancestorComponent && ancestorComponent['s-rc']) {\n        // this is the initial load and this component it has an ancestor component\n        // but the ancestor component has NOT fired its will update lifecycle yet\n        // so let's just cool our jets and wait for the ancestor to continue first\n        // this will get fired off when the ancestor component\n        // finally gets around to rendering its lazy self\n        // fire off the initial update\n        ancestorComponent['s-rc'].push(schedule);\n    }\n    else {\n        schedule();\n    }\n};\nconst fireConnectedCallback = (instance) => {\n    if (BUILD.lazyLoad && BUILD.connectedCallback) {\n        safeCall(instance, 'connectedCallback');\n    }\n};\nconst connectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const cmpMeta = hostRef.$cmpMeta$;\n        const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n        if (BUILD.hostListenerTargetParent) {\n            // only run if we have listeners being attached to a parent\n            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, true);\n        }\n        if (!(hostRef.$flags$ & 1 /* HOST_FLAGS.hasConnected */)) {\n            // first time this component has connected\n            hostRef.$flags$ |= 1 /* HOST_FLAGS.hasConnected */;\n            let hostId;\n            if (BUILD.hydrateClientSide) {\n                hostId = elm.getAttribute(HYDRATE_ID);\n                if (hostId) {\n                    if (BUILD.shadowDom && supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                        const scopeId = BUILD.mode\n                            ? addStyle(elm.shadowRoot, cmpMeta, elm.getAttribute('s-mode'))\n                            : addStyle(elm.shadowRoot, cmpMeta);\n                        elm.classList.remove(scopeId + '-h', scopeId + '-s');\n                    }\n                    initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);\n                }\n            }\n            if (BUILD.slotRelocation && !hostId) {\n                // initUpdate\n                // if the slot polyfill is required we'll need to put some nodes\n                // in here to act as original content anchors as we move nodes around\n                // host element has been connected to the DOM\n                if (BUILD.hydrateServerSide ||\n                    ((BUILD.slot || BUILD.shadowDom) &&\n                        cmpMeta.$flags$ & (4 /* CMP_FLAGS.hasSlotRelocation */ | 8 /* CMP_FLAGS.needsShadowDomShim */))) {\n                    setContentReference(elm);\n                }\n            }\n            if (BUILD.asyncLoading) {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                let ancestorComponent = elm;\n                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if ((BUILD.hydrateClientSide &&\n                        ancestorComponent.nodeType === 1 /* NODE_TYPE.ElementNode */ &&\n                        ancestorComponent.hasAttribute('s-id') &&\n                        ancestorComponent['s-p']) ||\n                        ancestorComponent['s-p']) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            // Lazy properties\n            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n            if (BUILD.prop && !BUILD.hydrateServerSide && cmpMeta.$members$) {\n                Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n                    if (memberFlags & 31 /* MEMBER_FLAGS.Prop */ && elm.hasOwnProperty(memberName)) {\n                        const value = elm[memberName];\n                        delete elm[memberName];\n                        elm[memberName] = value;\n                    }\n                });\n            }\n            if (BUILD.initializeNextTick) {\n                // connectedCallback, taskQueue, initialLoad\n                // angular sets attribute AFTER connectCallback\n                // https://github.com/angular/angular/issues/18909\n                // https://github.com/angular/angular/issues/19940\n                nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n            }\n            else {\n                initializeComponent(elm, hostRef, cmpMeta);\n            }\n        }\n        else {\n            // not the first time this has connected\n            // reattach any event listeners to the host\n            // since they would have been removed when disconnected\n            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);\n            // fire off connectedCallback() on component instance\n            fireConnectedCallback(hostRef.$lazyInstance$);\n        }\n        endConnected();\n    }\n};\nconst setContentReference = (elm) => {\n    // only required when we're NOT using native shadow dom (slot)\n    // or this browser doesn't support native shadow dom\n    // and this host element was NOT created with SSR\n    // let's pick out the inner content for slot projection\n    // create a node to represent where the original\n    // content was first placed, which is useful later on\n    const contentRefElm = (elm['s-cr'] = doc.createComment(BUILD.isDebug ? `content-ref (host=${elm.localName})` : ''));\n    contentRefElm['s-cn'] = true;\n    elm.insertBefore(contentRefElm, elm.firstChild);\n};\nconst disconnectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n        if (BUILD.hostListener) {\n            if (hostRef.$rmListeners$) {\n                hostRef.$rmListeners$.map((rmListener) => rmListener());\n                hostRef.$rmListeners$ = undefined;\n            }\n        }\n        // clear CSS var-shim tracking\n        if (BUILD.cssVarShim && plt.$cssShim$) {\n            plt.$cssShim$.removeHost(elm);\n        }\n        if (BUILD.lazyLoad && BUILD.disconnectedCallback) {\n            safeCall(instance, 'disconnectedCallback');\n        }\n        if (BUILD.cmpDidUnload) {\n            safeCall(instance, 'componentDidUnload');\n        }\n    }\n};\nconst defineCustomElement = (Cstr, compactMeta) => {\n    customElements.define(compactMeta[1], proxyCustomElement(Cstr, compactMeta));\n};\nconst proxyCustomElement = (Cstr, compactMeta) => {\n    const cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n    };\n    if (BUILD.member) {\n        cmpMeta.$members$ = compactMeta[2];\n    }\n    if (BUILD.hostListener) {\n        cmpMeta.$listeners$ = compactMeta[3];\n    }\n    if (BUILD.watchCallback) {\n        cmpMeta.$watchers$ = Cstr.$watchers$;\n    }\n    if (BUILD.reflect) {\n        cmpMeta.$attrsToReflect$ = [];\n    }\n    if (BUILD.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n        cmpMeta.$flags$ |= 8 /* CMP_FLAGS.needsShadowDomShim */;\n    }\n    const originalConnectedCallback = Cstr.prototype.connectedCallback;\n    const originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;\n    Object.assign(Cstr.prototype, {\n        __registerHost() {\n            registerHost(this, cmpMeta);\n        },\n        connectedCallback() {\n            connectedCallback(this);\n            if (BUILD.connectedCallback && originalConnectedCallback) {\n                originalConnectedCallback.call(this);\n            }\n        },\n        disconnectedCallback() {\n            disconnectedCallback(this);\n            if (BUILD.disconnectedCallback && originalDisconnectedCallback) {\n                originalDisconnectedCallback.call(this);\n            }\n        },\n        __attachShadow() {\n            if (supportsShadow) {\n                if (BUILD.shadowDelegatesFocus) {\n                    this.attachShadow({\n                        mode: 'open',\n                        delegatesFocus: !!(cmpMeta.$flags$ & 16 /* CMP_FLAGS.shadowDelegatesFocus */),\n                    });\n                }\n                else {\n                    this.attachShadow({ mode: 'open' });\n                }\n            }\n            else {\n                this.shadowRoot = this;\n            }\n        },\n    });\n    Cstr.is = cmpMeta.$tagName$;\n    return proxyComponent(Cstr, cmpMeta, 1 /* PROXY_FLAGS.isElementConstructor */ | 2 /* PROXY_FLAGS.proxyState */);\n};\nconst forceModeUpdate = (elm) => {\n    if (BUILD.style && BUILD.mode && !BUILD.lazyLoad) {\n        const mode = computeMode(elm);\n        const hostRef = getHostRef(elm);\n        if (hostRef.$modeName$ !== mode) {\n            const cmpMeta = hostRef.$cmpMeta$;\n            const oldScopeId = elm['s-sc'];\n            const scopeId = getScopeId(cmpMeta, mode);\n            const style = elm.constructor.style[mode];\n            const flags = cmpMeta.$flags$;\n            if (style) {\n                if (!styles.has(scopeId)) {\n                    registerStyle(scopeId, style, !!(flags & 1 /* CMP_FLAGS.shadowDomEncapsulation */));\n                }\n                hostRef.$modeName$ = mode;\n                elm.classList.remove(oldScopeId + '-h', oldScopeId + '-s');\n                attachStyles(hostRef);\n                forceUpdate(elm);\n            }\n        }\n    }\n};\nconst patchCloneNode = (HostElementPrototype) => {\n    const orgCloneNode = HostElementPrototype.cloneNode;\n    HostElementPrototype.cloneNode = function (deep) {\n        const srcNode = this;\n        const isShadowDom = BUILD.shadowDom ? srcNode.shadowRoot && supportsShadow : false;\n        const clonedNode = orgCloneNode.call(srcNode, isShadowDom ? deep : false);\n        if (BUILD.slot && !isShadowDom && deep) {\n            let i = 0;\n            let slotted, nonStencilNode;\n            const stencilPrivates = [\n                's-id',\n                's-cr',\n                's-lr',\n                's-rc',\n                's-sc',\n                's-p',\n                's-cn',\n                's-sr',\n                's-sn',\n                's-hn',\n                's-ol',\n                's-nr',\n                's-si',\n            ];\n            for (; i < srcNode.childNodes.length; i++) {\n                slotted = srcNode.childNodes[i]['s-nr'];\n                nonStencilNode = stencilPrivates.every((privateField) => !srcNode.childNodes[i][privateField]);\n                if (slotted) {\n                    if (BUILD.appendChildSlotFix && clonedNode.__appendChild) {\n                        clonedNode.__appendChild(slotted.cloneNode(true));\n                    }\n                    else {\n                        clonedNode.appendChild(slotted.cloneNode(true));\n                    }\n                }\n                if (nonStencilNode) {\n                    clonedNode.appendChild(srcNode.childNodes[i].cloneNode(true));\n                }\n            }\n        }\n        return clonedNode;\n    };\n};\nconst patchSlotAppendChild = (HostElementPrototype) => {\n    HostElementPrototype.__appendChild = HostElementPrototype.appendChild;\n    HostElementPrototype.appendChild = function (newChild) {\n        const slotName = (newChild['s-sn'] = getSlotName(newChild));\n        const slotNode = getHostSlotNode(this.childNodes, slotName);\n        if (slotNode) {\n            const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n            const appendAfter = slotChildNodes[slotChildNodes.length - 1];\n            return appendAfter.parentNode.insertBefore(newChild, appendAfter.nextSibling);\n        }\n        return this.__appendChild(newChild);\n    };\n};\n/**\n * Patches the text content of an unnamed slotted node inside a scoped component\n * @param hostElementPrototype the `Element` to be patched\n * @param cmpMeta component runtime metadata used to determine if the component should be patched or not\n */\nconst patchTextContent = (hostElementPrototype, cmpMeta) => {\n    if (BUILD.scoped && cmpMeta.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n        const descriptor = Object.getOwnPropertyDescriptor(Node.prototype, 'textContent');\n        Object.defineProperty(hostElementPrototype, '__textContent', descriptor);\n        Object.defineProperty(hostElementPrototype, 'textContent', {\n            get() {\n                var _a;\n                // get the 'default slot', which would be the first slot in a shadow tree (if we were using one), whose name is\n                // the empty string\n                const slotNode = getHostSlotNode(this.childNodes, '');\n                // when a slot node is found, the textContent _may_ be found in the next sibling (text) node, depending on how\n                // nodes were reordered during the vdom render. first try to get the text content from the sibling.\n                if (((_a = slotNode === null || slotNode === void 0 ? void 0 : slotNode.nextSibling) === null || _a === void 0 ? void 0 : _a.nodeType) === 3 /* NODE_TYPES.TEXT_NODE */) {\n                    return slotNode.nextSibling.textContent;\n                }\n                else if (slotNode) {\n                    return slotNode.textContent;\n                }\n                else {\n                    // fallback to the original implementation\n                    return this.__textContent;\n                }\n            },\n            set(value) {\n                var _a;\n                // get the 'default slot', which would be the first slot in a shadow tree (if we were using one), whose name is\n                // the empty string\n                const slotNode = getHostSlotNode(this.childNodes, '');\n                // when a slot node is found, the textContent _may_ need to be placed in the next sibling (text) node,\n                // depending on how nodes were reordered during the vdom render. first try to set the text content on the\n                // sibling.\n                if (((_a = slotNode === null || slotNode === void 0 ? void 0 : slotNode.nextSibling) === null || _a === void 0 ? void 0 : _a.nodeType) === 3 /* NODE_TYPES.TEXT_NODE */) {\n                    slotNode.nextSibling.textContent = value;\n                }\n                else if (slotNode) {\n                    slotNode.textContent = value;\n                }\n                else {\n                    // we couldn't find a slot, but that doesn't mean that there isn't one. if this check ran before the DOM\n                    // loaded, we could have missed it. check for a content reference element on the scoped component and insert\n                    // it there\n                    this.__textContent = value;\n                    const contentRefElm = this['s-cr'];\n                    if (contentRefElm) {\n                        this.insertBefore(contentRefElm, this.firstChild);\n                    }\n                }\n            },\n        });\n    }\n};\nconst patchChildSlotNodes = (elm, cmpMeta) => {\n    class FakeNodeList extends Array {\n        item(n) {\n            return this[n];\n        }\n    }\n    if (cmpMeta.$flags$ & 8 /* CMP_FLAGS.needsShadowDomShim */) {\n        const childNodesFn = elm.__lookupGetter__('childNodes');\n        Object.defineProperty(elm, 'children', {\n            get() {\n                return this.childNodes.map((n) => n.nodeType === 1);\n            },\n        });\n        Object.defineProperty(elm, 'childElementCount', {\n            get() {\n                return elm.children.length;\n            },\n        });\n        Object.defineProperty(elm, 'childNodes', {\n            get() {\n                const childNodes = childNodesFn.call(this);\n                if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0 &&\n                    getHostRef(this).$flags$ & 2 /* HOST_FLAGS.hasRendered */) {\n                    const result = new FakeNodeList();\n                    for (let i = 0; i < childNodes.length; i++) {\n                        const slot = childNodes[i]['s-nr'];\n                        if (slot) {\n                            result.push(slot);\n                        }\n                    }\n                    return result;\n                }\n                return FakeNodeList.from(childNodes);\n            },\n        });\n    }\n};\nconst getSlotName = (node) => node['s-sn'] || (node.nodeType === 1 && node.getAttribute('slot')) || '';\n/**\n * Recursively searches a series of child nodes for a slot with the provided name.\n * @param childNodes the nodes to search for a slot with a specific name.\n * @param slotName the name of the slot to match on.\n * @returns a reference to the slot node that matches the provided name, `null` otherwise\n */\nconst getHostSlotNode = (childNodes, slotName) => {\n    let i = 0;\n    let childNode;\n    for (; i < childNodes.length; i++) {\n        childNode = childNodes[i];\n        if (childNode['s-sr'] && childNode['s-sn'] === slotName) {\n            return childNode;\n        }\n        childNode = getHostSlotNode(childNode.childNodes, slotName);\n        if (childNode) {\n            return childNode;\n        }\n    }\n    return null;\n};\nconst getHostSlotChildNodes = (n, slotName) => {\n    const childNodes = [n];\n    while ((n = n.nextSibling) && n['s-sn'] === slotName) {\n        childNodes.push(n);\n    }\n    return childNodes;\n};\nconst hmrStart = (elm, cmpMeta, hmrVersionId) => {\n    // ¯\\_(ツ)_/¯\n    const hostRef = getHostRef(elm);\n    // reset state flags to only have been connected\n    hostRef.$flags$ = 1 /* HOST_FLAGS.hasConnected */;\n    // TODO\n    // detatch any event listeners that may have been added\n    // because we're not passing an exact event name it'll\n    // remove all of this element's event, which is good\n    // create a callback for when this component finishes hmr\n    elm['s-hmr-load'] = () => {\n        // finished hmr for this element\n        delete elm['s-hmr-load'];\n    };\n    // re-initialize the component\n    initializeComponent(elm, hostRef, cmpMeta, hmrVersionId);\n};\nconst bootstrapLazy = (lazyBundles, options = {}) => {\n    var _a;\n    if (BUILD.profile && performance.mark) {\n        performance.mark('st:app:start');\n    }\n    installDevTools();\n    const endBootstrap = createTime('bootstrapLazy');\n    const cmpTags = [];\n    const exclude = options.exclude || [];\n    const customElements = win.customElements;\n    const head = doc.head;\n    const metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    const visibilityStyle = /*@__PURE__*/ doc.createElement('style');\n    const deferredConnectedCallbacks = [];\n    const styles = /*@__PURE__*/ doc.querySelectorAll(`[${HYDRATED_STYLE_ID}]`);\n    let appLoadFallback;\n    let isBootstrapping = true;\n    let i = 0;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    if (BUILD.asyncQueue) {\n        if (options.syncQueue) {\n            plt.$flags$ |= 4 /* PLATFORM_FLAGS.queueSync */;\n        }\n    }\n    if (BUILD.hydrateClientSide) {\n        // If the app is already hydrated there is not point to disable the\n        // async queue. This will improve the first input delay\n        plt.$flags$ |= 2 /* PLATFORM_FLAGS.appLoaded */;\n    }\n    if (BUILD.hydrateClientSide && BUILD.shadowDom) {\n        for (; i < styles.length; i++) {\n            registerStyle(styles[i].getAttribute(HYDRATED_STYLE_ID), convertScopedToShadow(styles[i].innerHTML), true);\n        }\n    }\n    lazyBundles.map((lazyBundle) => {\n        lazyBundle[1].map((compactMeta) => {\n            const cmpMeta = {\n                $flags$: compactMeta[0],\n                $tagName$: compactMeta[1],\n                $members$: compactMeta[2],\n                $listeners$: compactMeta[3],\n            };\n            if (BUILD.member) {\n                cmpMeta.$members$ = compactMeta[2];\n            }\n            if (BUILD.hostListener) {\n                cmpMeta.$listeners$ = compactMeta[3];\n            }\n            if (BUILD.reflect) {\n                cmpMeta.$attrsToReflect$ = [];\n            }\n            if (BUILD.watchCallback) {\n                cmpMeta.$watchers$ = {};\n            }\n            if (BUILD.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                cmpMeta.$flags$ |= 8 /* CMP_FLAGS.needsShadowDomShim */;\n            }\n            const tagName = BUILD.transformTagName && options.transformTagName\n                ? options.transformTagName(cmpMeta.$tagName$)\n                : cmpMeta.$tagName$;\n            const HostElement = class extends HTMLElement {\n                // StencilLazyHost\n                constructor(self) {\n                    // @ts-ignore\n                    super(self);\n                    self = this;\n                    registerHost(self, cmpMeta);\n                    if (BUILD.shadowDom && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                        // this component is using shadow dom\n                        // and this browser supports shadow dom\n                        // add the read-only property \"shadowRoot\" to the host element\n                        // adding the shadow root build conditionals to minimize runtime\n                        if (supportsShadow) {\n                            if (BUILD.shadowDelegatesFocus) {\n                                self.attachShadow({\n                                    mode: 'open',\n                                    delegatesFocus: !!(cmpMeta.$flags$ & 16 /* CMP_FLAGS.shadowDelegatesFocus */),\n                                });\n                            }\n                            else {\n                                self.attachShadow({ mode: 'open' });\n                            }\n                        }\n                        else if (!BUILD.hydrateServerSide && !('shadowRoot' in self)) {\n                            self.shadowRoot = self;\n                        }\n                    }\n                    if (BUILD.slotChildNodesFix) {\n                        patchChildSlotNodes(self, cmpMeta);\n                    }\n                }\n                connectedCallback() {\n                    if (appLoadFallback) {\n                        clearTimeout(appLoadFallback);\n                        appLoadFallback = null;\n                    }\n                    if (isBootstrapping) {\n                        // connectedCallback will be processed once all components have been registered\n                        deferredConnectedCallbacks.push(this);\n                    }\n                    else {\n                        plt.jmp(() => connectedCallback(this));\n                    }\n                }\n                disconnectedCallback() {\n                    plt.jmp(() => disconnectedCallback(this));\n                }\n                componentOnReady() {\n                    return getHostRef(this).$onReadyPromise$;\n                }\n            };\n            if (BUILD.cloneNodeFix) {\n                patchCloneNode(HostElement.prototype);\n            }\n            if (BUILD.appendChildSlotFix) {\n                patchSlotAppendChild(HostElement.prototype);\n            }\n            if (BUILD.hotModuleReplacement) {\n                HostElement.prototype['s-hmr'] = function (hmrVersionId) {\n                    hmrStart(this, cmpMeta, hmrVersionId);\n                };\n            }\n            if (BUILD.scopedSlotTextContentFix) {\n                patchTextContent(HostElement.prototype, cmpMeta);\n            }\n            cmpMeta.$lazyBundleId$ = lazyBundle[0];\n            if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n                cmpTags.push(tagName);\n                customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* PROXY_FLAGS.isElementConstructor */));\n            }\n        });\n    });\n    if (BUILD.invisiblePrehydration && (BUILD.hydratedClass || BUILD.hydratedAttribute)) {\n        visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n        visibilityStyle.setAttribute('data-styles', '');\n        // Apply CSP nonce to the style tag if it exists\n        const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n        if (nonce != null) {\n            visibilityStyle.setAttribute('nonce', nonce);\n        }\n        head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length) {\n        deferredConnectedCallbacks.map((host) => host.connectedCallback());\n    }\n    else {\n        if (BUILD.profile) {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30, 'timeout')));\n        }\n        else {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30)));\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\nconst getConnect = (_ref, tagName) => {\n    const componentOnReady = () => {\n        let elm = doc.querySelector(tagName);\n        if (!elm) {\n            elm = doc.createElement(tagName);\n            doc.body.appendChild(elm);\n        }\n        return typeof elm.componentOnReady === 'function' ? elm.componentOnReady() : Promise.resolve(elm);\n    };\n    const create = (...args) => {\n        return componentOnReady().then((el) => el.create(...args));\n    };\n    return {\n        create,\n        componentOnReady,\n    };\n};\nconst getContext = (_elm, context) => {\n    if (context in Context) {\n        return Context[context];\n    }\n    else if (context === 'window') {\n        return win;\n    }\n    else if (context === 'document') {\n        return doc;\n    }\n    else if (context === 'isServer' || context === 'isPrerender') {\n        return BUILD.hydrateServerSide ? true : false;\n    }\n    else if (context === 'isClient') {\n        return BUILD.hydrateServerSide ? false : true;\n    }\n    else if (context === 'resourcesUrl' || context === 'publicPath') {\n        return getAssetPath('.');\n    }\n    else if (context === 'queue') {\n        return {\n            write: writeTask,\n            read: readTask,\n            tick: {\n                then(cb) {\n                    return nextTick(cb);\n                },\n            },\n        };\n    }\n    return undefined;\n};\nconst Fragment = (_, children) => children;\nconst addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n    if (BUILD.hostListener && listeners) {\n        // this is called immediately within the element's constructor\n        // initialize our event listeners on the host element\n        // we do this now so that we can listen to events that may\n        // have fired even before the instance is ready\n        if (BUILD.hostListenerTargetParent) {\n            // this component may have event listeners that should be attached to the parent\n            if (attachParentListeners) {\n                // this is being ran from within the connectedCallback\n                // which is important so that we know the host element actually has a parent element\n                // filter out the listeners to only have the ones that ARE being attached to the parent\n                listeners = listeners.filter(([flags]) => flags & 32 /* LISTENER_FLAGS.TargetParent */);\n            }\n            else {\n                // this is being ran from within the component constructor\n                // everything BUT the parent element listeners should be attached at this time\n                // filter out the listeners that are NOT being attached to the parent\n                listeners = listeners.filter(([flags]) => !(flags & 32 /* LISTENER_FLAGS.TargetParent */));\n            }\n        }\n        listeners.map(([flags, name, method]) => {\n            const target = BUILD.hostListenerTarget ? getHostListenerTarget(elm, flags) : elm;\n            const handler = hostListenerProxy(hostRef, method);\n            const opts = hostListenerOpts(flags);\n            plt.ael(target, name, handler, opts);\n            (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n        });\n    }\n};\nconst hostListenerProxy = (hostRef, methodName) => (ev) => {\n    try {\n        if (BUILD.lazyLoad) {\n            if (hostRef.$flags$ & 256 /* HOST_FLAGS.isListenReady */) {\n                // instance is ready, let's call it's member method for this event\n                hostRef.$lazyInstance$[methodName](ev);\n            }\n            else {\n                (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n            }\n        }\n        else {\n            hostRef.$hostElement$[methodName](ev);\n        }\n    }\n    catch (e) {\n        consoleError(e);\n    }\n};\nconst getHostListenerTarget = (elm, flags) => {\n    if (BUILD.hostListenerTargetDocument && flags & 4 /* LISTENER_FLAGS.TargetDocument */)\n        return doc;\n    if (BUILD.hostListenerTargetWindow && flags & 8 /* LISTENER_FLAGS.TargetWindow */)\n        return win;\n    if (BUILD.hostListenerTargetBody && flags & 16 /* LISTENER_FLAGS.TargetBody */)\n        return doc.body;\n    if (BUILD.hostListenerTargetParent && flags & 32 /* LISTENER_FLAGS.TargetParent */)\n        return elm.parentElement;\n    return elm;\n};\n// prettier-ignore\nconst hostListenerOpts = (flags) => supportsListenerOptions\n    ? ({\n        passive: (flags & 1 /* LISTENER_FLAGS.Passive */) !== 0,\n        capture: (flags & 2 /* LISTENER_FLAGS.Capture */) !== 0,\n    })\n    : (flags & 2 /* LISTENER_FLAGS.Capture */) !== 0;\n/**\n * Assigns the given value to the nonce property on the runtime platform object.\n * During runtime, this value is used to set the nonce attribute on all dynamically created script and style tags.\n * @param nonce The value to be assigned to the platform nonce property.\n * @returns void\n */\nconst setNonce = (nonce) => (plt.$nonce$ = nonce);\nconst setPlatformOptions = (opts) => Object.assign(plt, opts);\nconst insertVdomAnnotations = (doc, staticComponents) => {\n    if (doc != null) {\n        const docData = {\n            hostIds: 0,\n            rootLevelIds: 0,\n            staticComponents: new Set(staticComponents),\n        };\n        const orgLocationNodes = [];\n        parseVNodeAnnotations(doc, doc.body, docData, orgLocationNodes);\n        orgLocationNodes.forEach((orgLocationNode) => {\n            if (orgLocationNode != null) {\n                const nodeRef = orgLocationNode['s-nr'];\n                let hostId = nodeRef['s-host-id'];\n                let nodeId = nodeRef['s-node-id'];\n                let childId = `${hostId}.${nodeId}`;\n                if (hostId == null) {\n                    hostId = 0;\n                    docData.rootLevelIds++;\n                    nodeId = docData.rootLevelIds;\n                    childId = `${hostId}.${nodeId}`;\n                    if (nodeRef.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n                        nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);\n                    }\n                    else if (nodeRef.nodeType === 3 /* NODE_TYPE.TextNode */) {\n                        if (hostId === 0) {\n                            const textContent = nodeRef.nodeValue.trim();\n                            if (textContent === '') {\n                                // useless whitespace node at the document root\n                                orgLocationNode.remove();\n                                return;\n                            }\n                        }\n                        const commentBeforeTextNode = doc.createComment(childId);\n                        commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;\n                        nodeRef.parentNode.insertBefore(commentBeforeTextNode, nodeRef);\n                    }\n                }\n                let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;\n                const orgLocationParentNode = orgLocationNode.parentElement;\n                if (orgLocationParentNode) {\n                    if (orgLocationParentNode['s-en'] === '') {\n                        // ending with a \".\" means that the parent element\n                        // of this node's original location is a SHADOW dom element\n                        // and this node is apart of the root level light dom\n                        orgLocationNodeId += `.`;\n                    }\n                    else if (orgLocationParentNode['s-en'] === 'c') {\n                        // ending with a \".c\" means that the parent element\n                        // of this node's original location is a SCOPED element\n                        // and this node is apart of the root level light dom\n                        orgLocationNodeId += `.c`;\n                    }\n                }\n                orgLocationNode.nodeValue = orgLocationNodeId;\n            }\n        });\n    }\n};\nconst parseVNodeAnnotations = (doc, node, docData, orgLocationNodes) => {\n    if (node == null) {\n        return;\n    }\n    if (node['s-nr'] != null) {\n        orgLocationNodes.push(node);\n    }\n    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        node.childNodes.forEach((childNode) => {\n            const hostRef = getHostRef(childNode);\n            if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {\n                const cmpData = {\n                    nodeIds: 0,\n                };\n                insertVNodeAnnotations(doc, childNode, hostRef.$vnode$, docData, cmpData);\n            }\n            parseVNodeAnnotations(doc, childNode, docData, orgLocationNodes);\n        });\n    }\n};\nconst insertVNodeAnnotations = (doc, hostElm, vnode, docData, cmpData) => {\n    if (vnode != null) {\n        const hostId = ++docData.hostIds;\n        hostElm.setAttribute(HYDRATE_ID, hostId);\n        if (hostElm['s-cr'] != null) {\n            hostElm['s-cr'].nodeValue = `${CONTENT_REF_ID}.${hostId}`;\n        }\n        if (vnode.$children$ != null) {\n            const depth = 0;\n            vnode.$children$.forEach((vnodeChild, index) => {\n                insertChildVNodeAnnotations(doc, vnodeChild, cmpData, hostId, depth, index);\n            });\n        }\n        if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute('c-id')) {\n            const parent = hostElm.parentElement;\n            if (parent && parent.childNodes) {\n                const parentChildNodes = Array.from(parent.childNodes);\n                const comment = parentChildNodes.find((node) => node.nodeType === 8 /* NODE_TYPE.CommentNode */ && node['s-sr']);\n                if (comment) {\n                    const index = parentChildNodes.indexOf(hostElm) - 1;\n                    vnode.$elm$.setAttribute(HYDRATE_CHILD_ID, `${comment['s-host-id']}.${comment['s-node-id']}.0.${index}`);\n                }\n            }\n        }\n    }\n};\nconst insertChildVNodeAnnotations = (doc, vnodeChild, cmpData, hostId, depth, index) => {\n    const childElm = vnodeChild.$elm$;\n    if (childElm == null) {\n        return;\n    }\n    const nodeId = cmpData.nodeIds++;\n    const childId = `${hostId}.${nodeId}.${depth}.${index}`;\n    childElm['s-host-id'] = hostId;\n    childElm['s-node-id'] = nodeId;\n    if (childElm.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        childElm.setAttribute(HYDRATE_CHILD_ID, childId);\n    }\n    else if (childElm.nodeType === 3 /* NODE_TYPE.TextNode */) {\n        const parentNode = childElm.parentNode;\n        const nodeName = parentNode.nodeName;\n        if (nodeName !== 'STYLE' && nodeName !== 'SCRIPT') {\n            const textNodeId = `${TEXT_NODE_ID}.${childId}`;\n            const commentBeforeTextNode = doc.createComment(textNodeId);\n            parentNode.insertBefore(commentBeforeTextNode, childElm);\n        }\n    }\n    else if (childElm.nodeType === 8 /* NODE_TYPE.CommentNode */) {\n        if (childElm['s-sr']) {\n            const slotName = childElm['s-sn'] || '';\n            const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;\n            childElm.nodeValue = slotNodeId;\n        }\n    }\n    if (vnodeChild.$children$ != null) {\n        const childDepth = depth + 1;\n        vnodeChild.$children$.forEach((vnode, index) => {\n            insertChildVNodeAnnotations(doc, vnode, cmpData, hostId, childDepth, index);\n        });\n    }\n};\nconst hostRefs = /*@__PURE__*/ new WeakMap();\nconst getHostRef = (ref) => hostRefs.get(ref);\nconst registerInstance = (lazyInstance, hostRef) => hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef);\nconst registerHost = (elm, cmpMeta) => {\n    const hostRef = {\n        $flags$: 0,\n        $hostElement$: elm,\n        $cmpMeta$: cmpMeta,\n        $instanceValues$: new Map(),\n    };\n    if (BUILD.isDev) {\n        hostRef.$renderCount$ = 0;\n    }\n    if (BUILD.method && BUILD.lazyLoad) {\n        hostRef.$onInstancePromise$ = new Promise((r) => (hostRef.$onInstanceResolve$ = r));\n    }\n    if (BUILD.asyncLoading) {\n        hostRef.$onReadyPromise$ = new Promise((r) => (hostRef.$onReadyResolve$ = r));\n        elm['s-p'] = [];\n        elm['s-rc'] = [];\n    }\n    addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);\n    return hostRefs.set(elm, hostRef);\n};\nconst isMemberInElement = (elm, memberName) => memberName in elm;\nconst consoleError = (e, el) => (customError || console.error)(e, el);\nconst STENCIL_DEV_MODE = BUILD.isTesting\n    ? ['STENCIL:'] // E2E testing\n    : [\n        '%cstencil',\n        'color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px',\n    ];\nconst consoleDevError = (...m) => console.error(...STENCIL_DEV_MODE, ...m);\nconst consoleDevWarn = (...m) => console.warn(...STENCIL_DEV_MODE, ...m);\nconst consoleDevInfo = (...m) => console.info(...STENCIL_DEV_MODE, ...m);\nconst setErrorHandler = (handler) => (customError = handler);\nconst cmpModules = /*@__PURE__*/ new Map();\nconst loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n    // loadModuleImport\n    const exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    const bundleId = cmpMeta.$lazyBundleId$;\n    if (BUILD.isDev && typeof bundleId !== 'string') {\n        consoleDevError(`Trying to lazily load component <${cmpMeta.$tagName$}> with style mode \"${hostRef.$modeName$}\", but it does not exist.`);\n        return undefined;\n    }\n    const module = !BUILD.hotModuleReplacement ? cmpModules.get(bundleId) : false;\n    if (module) {\n        return module[exportName];\n    }\n    /*!__STENCIL_STATIC_IMPORT_SWITCH__*/\n    return import(\n    /* @vite-ignore */\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${BUILD.hotModuleReplacement && hmrVersionId ? '?s-hmr=' + hmrVersionId : ''}`).then((importedModule) => {\n        if (!BUILD.hotModuleReplacement) {\n            cmpModules.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nconst styles = /*@__PURE__*/ new Map();\nconst modeResolutionChain = [];\nconst win = typeof window !== 'undefined' ? window : {};\nconst CSS = BUILD.cssVarShim ? win.CSS : null;\nconst doc = win.document || { head: {} };\nconst H = (win.HTMLElement || class {\n});\nconst plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: (h) => h(),\n    raf: (h) => requestAnimationFrame(h),\n    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n    ce: (eventName, opts) => new CustomEvent(eventName, opts),\n};\nconst setPlatformHelpers = (helpers) => {\n    Object.assign(plt, helpers);\n};\nconst supportsShadow = BUILD.shadowDomShim && BUILD.shadowDom\n    ? /*@__PURE__*/ (() => (doc.head.attachShadow + '').indexOf('[native') > -1)()\n    : true;\nconst supportsListenerOptions = /*@__PURE__*/ (() => {\n    let supportsListenerOptions = false;\n    try {\n        doc.addEventListener('e', null, Object.defineProperty({}, 'passive', {\n            get() {\n                supportsListenerOptions = true;\n            },\n        }));\n    }\n    catch (e) { }\n    return supportsListenerOptions;\n})();\nconst promiseResolve = (v) => Promise.resolve(v);\nconst supportsConstructableStylesheets = BUILD.constructableCSS\n    ? /*@__PURE__*/ (() => {\n        try {\n            new CSSStyleSheet();\n            return typeof new CSSStyleSheet().replaceSync === 'function';\n        }\n        catch (e) { }\n        return false;\n    })()\n    : false;\nconst queueDomReads = [];\nconst queueDomWrites = [];\nconst queueDomWritesLow = [];\nconst queueTask = (queue, write) => (cb) => {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* PLATFORM_FLAGS.queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n};\nconst consume = (queue) => {\n    for (let i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nconst consumeTimeout = (queue, timeout) => {\n    let i = 0;\n    let ts = 0;\n    while (i < queue.length && (ts = performance.now()) < timeout) {\n        try {\n            queue[i++](ts);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    if (i === queue.length) {\n        queue.length = 0;\n    }\n    else if (i !== 0) {\n        queue.splice(0, i);\n    }\n};\nconst flush = () => {\n    if (BUILD.asyncQueue) {\n        queueCongestion++;\n    }\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    // DOM WRITES!!!\n    if (BUILD.asyncQueue) {\n        const timeout = (plt.$flags$ & 6 /* PLATFORM_FLAGS.queueMask */) === 2 /* PLATFORM_FLAGS.appLoaded */\n            ? performance.now() + 14 * Math.ceil(queueCongestion * (1.0 / 10.0))\n            : Infinity;\n        consumeTimeout(queueDomWrites, timeout);\n        consumeTimeout(queueDomWritesLow, timeout);\n        if (queueDomWrites.length > 0) {\n            queueDomWritesLow.push(...queueDomWrites);\n            queueDomWrites.length = 0;\n        }\n        if ((queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n        else {\n            queueCongestion = 0;\n        }\n    }\n    else {\n        consume(queueDomWrites);\n        if ((queuePending = queueDomReads.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n    }\n};\nconst nextTick = /*@__PURE__*/ (cb) => promiseResolve().then(cb);\nconst readTask = /*@__PURE__*/ queueTask(queueDomReads, false);\nconst writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\nexport { BUILD, Env, NAMESPACE } from '@stencil/core/internal/app-data';\nexport { Build, CSS, Context, Fragment, H, H as HTMLElement, Host, STENCIL_DEV_MODE, addHostEventListeners, bootstrapLazy, cmpModules, connectedCallback, consoleDevError, consoleDevInfo, consoleDevWarn, consoleError, createEvent, defineCustomElement, disconnectedCallback, doc, forceModeUpdate, forceUpdate, getAssetPath, getConnect, getContext, getElement, getHostRef, getMode, getRenderingRef, getValue, h, insertVdomAnnotations, isMemberInElement, loadModule, modeResolutionChain, nextTick, parsePropertyValue, plt, postUpdateComponent, promiseResolve, proxyComponent, proxyCustomElement, readTask, registerHost, registerInstance, renderVdom, setAssetPath, setErrorHandler, setMode, setNonce, setPlatformHelpers, setPlatformOptions, setValue, styles, supportsConstructableStylesheets, supportsListenerOptions, supportsShadow, win, writeTask };\n","const BUILD = {\n    allRenderFn: false,\n    cmpDidLoad: true,\n    cmpDidUnload: false,\n    cmpDidUpdate: true,\n    cmpDidRender: true,\n    cmpWillLoad: true,\n    cmpWillUpdate: true,\n    cmpWillRender: true,\n    connectedCallback: true,\n    disconnectedCallback: true,\n    element: true,\n    event: true,\n    hasRenderFn: true,\n    lifecycle: true,\n    hostListener: true,\n    hostListenerTargetWindow: true,\n    hostListenerTargetDocument: true,\n    hostListenerTargetBody: true,\n    hostListenerTargetParent: false,\n    hostListenerTarget: true,\n    member: true,\n    method: true,\n    mode: true,\n    observeAttribute: true,\n    prop: true,\n    propMutable: true,\n    reflect: true,\n    scoped: true,\n    shadowDom: true,\n    slot: true,\n    cssAnnotations: true,\n    state: true,\n    style: true,\n    svg: true,\n    updatable: true,\n    vdomAttribute: true,\n    vdomXlink: true,\n    vdomClass: true,\n    vdomFunctional: true,\n    vdomKey: true,\n    vdomListener: true,\n    vdomRef: true,\n    vdomPropOrAttr: true,\n    vdomRender: true,\n    vdomStyle: true,\n    vdomText: true,\n    watchCallback: true,\n    taskQueue: true,\n    hotModuleReplacement: false,\n    isDebug: false,\n    isDev: false,\n    isTesting: false,\n    hydrateServerSide: false,\n    hydrateClientSide: false,\n    lifecycleDOMEvents: false,\n    lazyLoad: false,\n    profile: false,\n    slotRelocation: true,\n    appendChildSlotFix: false,\n    cloneNodeFix: false,\n    hydratedAttribute: false,\n    hydratedClass: true,\n    safari10: false,\n    scriptDataOpts: false,\n    scopedSlotTextContentFix: false,\n    shadowDomShim: false,\n    slotChildNodesFix: false,\n    invisiblePrehydration: true,\n    propBoolean: true,\n    propNumber: true,\n    propString: true,\n    cssVarShim: false,\n    constructableCSS: true,\n    cmpShouldUpdate: true,\n    devTools: false,\n    dynamicImportShim: false,\n    shadowDelegatesFocus: true,\n    initializeNextTick: false,\n    asyncLoading: false,\n    asyncQueue: false,\n    transformTagName: false,\n    attachStyles: true,\n};\nconst Env = {};\nconst NAMESPACE = /* default */ 'app';\n\nexport { BUILD, Env, NAMESPACE };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Context, setPlatformHelpers, setMode, getMode } from '@stencil/core/internal/client';\n\n// TODO(FW-2832): types\nclass Config {\n  constructor() {\n    this.m = new Map();\n  }\n  reset(configObj) {\n    this.m = new Map(Object.entries(configObj));\n  }\n  get(key, fallback) {\n    const value = this.m.get(key);\n    return value !== undefined ? value : fallback;\n  }\n  getBoolean(key, fallback = false) {\n    const val = this.m.get(key);\n    if (val === undefined) {\n      return fallback;\n    }\n    if (typeof val === 'string') {\n      return val === 'true';\n    }\n    return !!val;\n  }\n  getNumber(key, fallback) {\n    const val = parseFloat(this.m.get(key));\n    return isNaN(val) ? (fallback !== undefined ? fallback : NaN) : val;\n  }\n  set(key, value) {\n    this.m.set(key, value);\n  }\n}\nconst config = /*@__PURE__*/ new Config();\nconst configFromSession = (win) => {\n  try {\n    const configStr = win.sessionStorage.getItem(IONIC_SESSION_KEY);\n    return configStr !== null ? JSON.parse(configStr) : {};\n  }\n  catch (e) {\n    return {};\n  }\n};\nconst saveConfig = (win, c) => {\n  try {\n    win.sessionStorage.setItem(IONIC_SESSION_KEY, JSON.stringify(c));\n  }\n  catch (e) {\n    return;\n  }\n};\nconst configFromURL = (win) => {\n  const configObj = {};\n  win.location.search\n    .slice(1)\n    .split('&')\n    .map((entry) => entry.split('='))\n    .map(([key, value]) => [decodeURIComponent(key), decodeURIComponent(value)])\n    .filter(([key]) => startsWith(key, IONIC_PREFIX))\n    .map(([key, value]) => [key.slice(IONIC_PREFIX.length), value])\n    .forEach(([key, value]) => {\n    configObj[key] = value;\n  });\n  return configObj;\n};\nconst startsWith = (input, search) => {\n  return input.substr(0, search.length) === search;\n};\nconst IONIC_PREFIX = 'ionic:';\nconst IONIC_SESSION_KEY = 'ionic-persist-config';\n\nconst getPlatforms = (win) => setupPlatforms(win);\nconst isPlatform = (winOrPlatform, platform) => {\n  if (typeof winOrPlatform === 'string') {\n    platform = winOrPlatform;\n    winOrPlatform = undefined;\n  }\n  return getPlatforms(winOrPlatform).includes(platform);\n};\nconst setupPlatforms = (win = window) => {\n  if (typeof win === 'undefined') {\n    return [];\n  }\n  win.Ionic = win.Ionic || {};\n  let platforms = win.Ionic.platforms;\n  if (platforms == null) {\n    platforms = win.Ionic.platforms = detectPlatforms(win);\n    platforms.forEach((p) => win.document.documentElement.classList.add(`plt-${p}`));\n  }\n  return platforms;\n};\nconst detectPlatforms = (win) => {\n  const customPlatformMethods = config.get('platform');\n  return Object.keys(PLATFORMS_MAP).filter((p) => {\n    const customMethod = customPlatformMethods === null || customPlatformMethods === void 0 ? void 0 : customPlatformMethods[p];\n    return typeof customMethod === 'function' ? customMethod(win) : PLATFORMS_MAP[p](win);\n  });\n};\nconst isMobileWeb = (win) => isMobile(win) && !isHybrid(win);\nconst isIpad = (win) => {\n  // iOS 12 and below\n  if (testUserAgent(win, /iPad/i)) {\n    return true;\n  }\n  // iOS 13+\n  if (testUserAgent(win, /Macintosh/i) && isMobile(win)) {\n    return true;\n  }\n  return false;\n};\nconst isIphone = (win) => testUserAgent(win, /iPhone/i);\nconst isIOS = (win) => testUserAgent(win, /iPhone|iPod/i) || isIpad(win);\nconst isAndroid = (win) => testUserAgent(win, /android|sink/i);\nconst isAndroidTablet = (win) => {\n  return isAndroid(win) && !testUserAgent(win, /mobile/i);\n};\nconst isPhablet = (win) => {\n  const width = win.innerWidth;\n  const height = win.innerHeight;\n  const smallest = Math.min(width, height);\n  const largest = Math.max(width, height);\n  return smallest > 390 && smallest < 520 && largest > 620 && largest < 800;\n};\nconst isTablet = (win) => {\n  const width = win.innerWidth;\n  const height = win.innerHeight;\n  const smallest = Math.min(width, height);\n  const largest = Math.max(width, height);\n  return isIpad(win) || isAndroidTablet(win) || (smallest > 460 && smallest < 820 && largest > 780 && largest < 1400);\n};\nconst isMobile = (win) => matchMedia(win, '(any-pointer:coarse)');\nconst isDesktop = (win) => !isMobile(win);\nconst isHybrid = (win) => isCordova(win) || isCapacitorNative(win);\nconst isCordova = (win) => !!(win['cordova'] || win['phonegap'] || win['PhoneGap']);\nconst isCapacitorNative = (win) => {\n  const capacitor = win['Capacitor'];\n  return !!(capacitor === null || capacitor === void 0 ? void 0 : capacitor.isNative);\n};\nconst isElectron = (win) => testUserAgent(win, /electron/i);\nconst isPWA = (win) => { var _a; return !!(((_a = win.matchMedia) === null || _a === void 0 ? void 0 : _a.call(win, '(display-mode: standalone)').matches) || win.navigator.standalone); };\nconst testUserAgent = (win, expr) => expr.test(win.navigator.userAgent);\nconst matchMedia = (win, query) => { var _a; return (_a = win.matchMedia) === null || _a === void 0 ? void 0 : _a.call(win, query).matches; };\nconst PLATFORMS_MAP = {\n  ipad: isIpad,\n  iphone: isIphone,\n  ios: isIOS,\n  android: isAndroid,\n  phablet: isPhablet,\n  tablet: isTablet,\n  cordova: isCordova,\n  capacitor: isCapacitorNative,\n  electron: isElectron,\n  pwa: isPWA,\n  mobile: isMobile,\n  mobileweb: isMobileWeb,\n  desktop: isDesktop,\n  hybrid: isHybrid,\n};\n\nlet defaultMode;\nconst getIonMode = (ref) => {\n  return (ref && getMode(ref)) || defaultMode;\n};\nconst initialize = (userConfig = {}) => {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const doc = window.document;\n  const win = window;\n  Context.config = config;\n  const Ionic = (win.Ionic = win.Ionic || {});\n  const platformHelpers = {};\n  if (userConfig._ael) {\n    platformHelpers.ael = userConfig._ael;\n  }\n  if (userConfig._rel) {\n    platformHelpers.rel = userConfig._rel;\n  }\n  if (userConfig._ce) {\n    platformHelpers.ce = userConfig._ce;\n  }\n  setPlatformHelpers(platformHelpers);\n  // create the Ionic.config from raw config object (if it exists)\n  // and convert Ionic.config into a ConfigApi that has a get() fn\n  const configObj = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, configFromSession(win)), { persistConfig: false }), Ionic.config), configFromURL(win)), userConfig);\n  config.reset(configObj);\n  if (config.getBoolean('persistConfig')) {\n    saveConfig(win, configObj);\n  }\n  // Setup platforms\n  setupPlatforms(win);\n  // first see if the mode was set as an attribute on <html>\n  // which could have been set by the user, or by pre-rendering\n  // otherwise get the mode via config settings, and fallback to md\n  Ionic.config = config;\n  Ionic.mode = defaultMode = config.get('mode', doc.documentElement.getAttribute('mode') || (isPlatform(win, 'ios') ? 'ios' : 'md'));\n  config.set('mode', defaultMode);\n  doc.documentElement.setAttribute('mode', defaultMode);\n  doc.documentElement.classList.add(defaultMode);\n  if (config.getBoolean('_testing')) {\n    config.set('animated', false);\n  }\n  const isIonicElement = (elm) => { var _a; return (_a = elm.tagName) === null || _a === void 0 ? void 0 : _a.startsWith('ION-'); };\n  const isAllowedIonicModeValue = (elmMode) => ['ios', 'md'].includes(elmMode);\n  setMode((elm) => {\n    while (elm) {\n      const elmMode = elm.mode || elm.getAttribute('mode');\n      if (elmMode) {\n        if (isAllowedIonicModeValue(elmMode)) {\n          return elmMode;\n        }\n        else if (isIonicElement(elm)) {\n          console.warn('Invalid ionic mode: \"' + elmMode + '\", expected: \"ios\" or \"md\"');\n        }\n      }\n      elm = elm.parentElement;\n    }\n    return defaultMode;\n  });\n};\n\nexport { isPlatform as a, getIonMode as b, config as c, getPlatforms as g, initialize as i };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { c as componentOnReady } from './helpers.js';\nimport { b as printRequiredElementError } from './index7.js';\n\nconst ION_CONTENT_TAG_NAME = 'ION-CONTENT';\nconst ION_CONTENT_ELEMENT_SELECTOR = 'ion-content';\nconst ION_CONTENT_CLASS_SELECTOR = '.ion-content-scroll-host';\n/**\n * Selector used for implementations reliant on `<ion-content>` for scroll event changes.\n *\n * Developers should use the `.ion-content-scroll-host` selector to target the element emitting\n * scroll events. With virtual scroll implementations this will be the host element for\n * the scroll viewport.\n */\nconst ION_CONTENT_SELECTOR = `${ION_CONTENT_ELEMENT_SELECTOR}, ${ION_CONTENT_CLASS_SELECTOR}`;\nconst isIonContent = (el) => el.tagName === ION_CONTENT_TAG_NAME;\n/**\n * Waits for the element host fully initialize before\n * returning the inner scroll element.\n *\n * For `ion-content` the scroll target will be the result\n * of the `getScrollElement` function.\n *\n * For custom implementations it will be the element host\n * or a selector within the host, if supplied through `scrollTarget`.\n */\nconst getScrollElement = async (el) => {\n  if (isIonContent(el)) {\n    await new Promise((resolve) => componentOnReady(el, resolve));\n    return el.getScrollElement();\n  }\n  return el;\n};\n/**\n * Queries the element matching the selector for IonContent.\n * See ION_CONTENT_SELECTOR for the selector used.\n */\nconst findIonContent = (el) => {\n  /**\n   * First we try to query the custom scroll host selector in cases where\n   * the implementation is using an outer `ion-content` with an inner custom\n   * scroll container.\n   */\n  const customContentHost = el.querySelector(ION_CONTENT_CLASS_SELECTOR);\n  if (customContentHost) {\n    return customContentHost;\n  }\n  return el.querySelector(ION_CONTENT_SELECTOR);\n};\n/**\n * Queries the closest element matching the selector for IonContent.\n */\nconst findClosestIonContent = (el) => {\n  return el.closest(ION_CONTENT_SELECTOR);\n};\n/**\n * Scrolls to the top of the element. If an `ion-content` is found, it will scroll\n * using the public API `scrollToTop` with a duration.\n */\n// TODO(FW-2832): type\nconst scrollToTop = (el, durationMs) => {\n  if (isIonContent(el)) {\n    const content = el;\n    return content.scrollToTop(durationMs);\n  }\n  return Promise.resolve(el.scrollTo({\n    top: 0,\n    left: 0,\n    behavior: durationMs > 0 ? 'smooth' : 'auto',\n  }));\n};\n/**\n * Scrolls by a specified X/Y distance in the component. If an `ion-content` is found, it will scroll\n * using the public API `scrollByPoint` with a duration.\n */\nconst scrollByPoint = (el, x, y, durationMs) => {\n  if (isIonContent(el)) {\n    const content = el;\n    return content.scrollByPoint(x, y, durationMs);\n  }\n  return Promise.resolve(el.scrollBy({\n    top: y,\n    left: x,\n    behavior: durationMs > 0 ? 'smooth' : 'auto',\n  }));\n};\n/**\n * Prints an error informing developers that an implementation requires an element to be used\n * within either the `ion-content` selector or the `.ion-content-scroll-host` class.\n */\nconst printIonContentErrorMsg = (el) => {\n  return printRequiredElementError(el, ION_CONTENT_ELEMENT_SELECTOR);\n};\n/**\n * Several components in Ionic need to prevent scrolling\n * during a gesture (card modal, range, item sliding, etc).\n * Use this utility to account for ion-content and custom content hosts.\n */\nconst disableContentScrollY = (contentEl) => {\n  if (isIonContent(contentEl)) {\n    const ionContent = contentEl;\n    const initialScrollY = ionContent.scrollY;\n    ionContent.scrollY = false;\n    /**\n     * This should be passed into resetContentScrollY\n     * so that we can revert ion-content's scrollY to the\n     * correct state. For example, if scrollY = false\n     * initially, we do not want to enable scrolling\n     * when we call resetContentScrollY.\n     */\n    return initialScrollY;\n  }\n  else {\n    contentEl.style.setProperty('overflow', 'hidden');\n    return true;\n  }\n};\nconst resetContentScrollY = (contentEl, initialScrollY) => {\n  if (isIonContent(contentEl)) {\n    contentEl.scrollY = initialScrollY;\n  }\n  else {\n    contentEl.style.removeProperty('overflow');\n  }\n};\n\nexport { ION_CONTENT_ELEMENT_SELECTOR as I, findClosestIonContent as a, ION_CONTENT_CLASS_SELECTOR as b, scrollByPoint as c, disableContentScrollY as d, findIonContent as f, getScrollElement as g, isIonContent as i, printIonContentErrorMsg as p, resetContentScrollY as r, scrollToTop as s };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst transitionEndAsync = (el, expectedDuration = 0) => {\n  return new Promise((resolve) => {\n    transitionEnd(el, expectedDuration, resolve);\n  });\n};\n/**\n * Allows developer to wait for a transition\n * to finish and fallback to a timer if the\n * transition is cancelled or otherwise\n * never finishes. Also see transitionEndAsync\n * which is an await-able version of this.\n */\nconst transitionEnd = (el, expectedDuration = 0, callback) => {\n  let unRegTrans;\n  let animationTimeout;\n  const opts = { passive: true };\n  const ANIMATION_FALLBACK_TIMEOUT = 500;\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n  const onTransitionEnd = (ev) => {\n    if (ev === undefined || el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n  if (el) {\n    el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n    el.addEventListener('transitionend', onTransitionEnd, opts);\n    animationTimeout = setTimeout(onTransitionEnd, expectedDuration + ANIMATION_FALLBACK_TIMEOUT);\n    unRegTrans = () => {\n      if (animationTimeout) {\n        clearTimeout(animationTimeout);\n        animationTimeout = undefined;\n      }\n      el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n      el.removeEventListener('transitionend', onTransitionEnd, opts);\n    };\n  }\n  return unregister;\n};\n/**\n * Waits for a component to be ready for\n * both custom element and non-custom element builds.\n * If non-custom element build, el.componentOnReady\n * will be used.\n * For custom element builds, we wait a frame\n * so that the inner contents of the component\n * have a chance to render.\n *\n * Use this utility rather than calling\n * el.componentOnReady yourself.\n */\nconst componentOnReady = (el, callback) => {\n  if (el.componentOnReady) {\n    // eslint-disable-next-line custom-rules/no-component-on-ready-method\n    el.componentOnReady().then((resolvedEl) => callback(resolvedEl));\n  }\n  else {\n    raf(() => callback(el));\n  }\n};\n/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nconst inheritAttributes = (el, attributes = []) => {\n  const attributeObject = {};\n  attributes.forEach((attr) => {\n    if (el.hasAttribute(attr)) {\n      const value = el.getAttribute(attr);\n      if (value !== null) {\n        attributeObject[attr] = el.getAttribute(attr);\n      }\n      el.removeAttribute(attr);\n    }\n  });\n  return attributeObject;\n};\n/**\n * List of available ARIA attributes + `role`.\n * Removed deprecated attributes.\n * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes\n */\nconst ariaAttributes = [\n  'role',\n  'aria-activedescendant',\n  'aria-atomic',\n  'aria-autocomplete',\n  'aria-braillelabel',\n  'aria-brailleroledescription',\n  'aria-busy',\n  'aria-checked',\n  'aria-colcount',\n  'aria-colindex',\n  'aria-colindextext',\n  'aria-colspan',\n  'aria-controls',\n  'aria-current',\n  'aria-describedby',\n  'aria-description',\n  'aria-details',\n  'aria-disabled',\n  'aria-errormessage',\n  'aria-expanded',\n  'aria-flowto',\n  'aria-haspopup',\n  'aria-hidden',\n  'aria-invalid',\n  'aria-keyshortcuts',\n  'aria-label',\n  'aria-labelledby',\n  'aria-level',\n  'aria-live',\n  'aria-multiline',\n  'aria-multiselectable',\n  'aria-orientation',\n  'aria-owns',\n  'aria-placeholder',\n  'aria-posinset',\n  'aria-pressed',\n  'aria-readonly',\n  'aria-relevant',\n  'aria-required',\n  'aria-roledescription',\n  'aria-rowcount',\n  'aria-rowindex',\n  'aria-rowindextext',\n  'aria-rowspan',\n  'aria-selected',\n  'aria-setsize',\n  'aria-sort',\n  'aria-valuemax',\n  'aria-valuemin',\n  'aria-valuenow',\n  'aria-valuetext',\n];\n/**\n * Returns an array of aria attributes that should be copied from\n * the shadow host element to a target within the light DOM.\n * @param el The element that the attributes should be copied from.\n * @param ignoreList The list of aria-attributes to ignore reflecting and removing from the host.\n * Use this in instances where we manually specify aria attributes on the `<Host>` element.\n */\nconst inheritAriaAttributes = (el, ignoreList) => {\n  let attributesToInherit = ariaAttributes;\n  if (ignoreList && ignoreList.length > 0) {\n    attributesToInherit = attributesToInherit.filter((attr) => !ignoreList.includes(attr));\n  }\n  return inheritAttributes(el, attributesToInherit);\n};\nconst addEventListener = (el, eventName, callback, opts) => {\n  var _a;\n  if (typeof window !== 'undefined') {\n    const win = window;\n    const config = (_a = win === null || win === void 0 ? void 0 : win.Ionic) === null || _a === void 0 ? void 0 : _a.config;\n    if (config) {\n      const ael = config.get('_ael');\n      if (ael) {\n        return ael(el, eventName, callback, opts);\n      }\n      else if (config._ael) {\n        return config._ael(el, eventName, callback, opts);\n      }\n    }\n  }\n  return el.addEventListener(eventName, callback, opts);\n};\nconst removeEventListener = (el, eventName, callback, opts) => {\n  var _a;\n  if (typeof window !== 'undefined') {\n    const win = window;\n    const config = (_a = win === null || win === void 0 ? void 0 : win.Ionic) === null || _a === void 0 ? void 0 : _a.config;\n    if (config) {\n      const rel = config.get('_rel');\n      if (rel) {\n        return rel(el, eventName, callback, opts);\n      }\n      else if (config._rel) {\n        return config._rel(el, eventName, callback, opts);\n      }\n    }\n  }\n  return el.removeEventListener(eventName, callback, opts);\n};\n/**\n * Gets the root context of a shadow dom element\n * On newer browsers this will be the shadowRoot,\n * but for older browser this may just be the\n * element itself.\n *\n * Useful for whenever you need to explicitly\n * do \"myElement.shadowRoot!.querySelector(...)\".\n */\nconst getElementRoot = (el, fallback = el) => {\n  return el.shadowRoot || fallback;\n};\n/**\n * Patched version of requestAnimationFrame that avoids ngzone\n * Use only when you know ngzone should not run\n */\nconst raf = (h) => {\n  if (typeof __zone_symbol__requestAnimationFrame === 'function') {\n    return __zone_symbol__requestAnimationFrame(h);\n  }\n  if (typeof requestAnimationFrame === 'function') {\n    return requestAnimationFrame(h);\n  }\n  return setTimeout(h);\n};\nconst hasShadowDom = (el) => {\n  return !!el.shadowRoot && !!el.attachShadow;\n};\nconst findItemLabel = (componentEl) => {\n  const itemEl = componentEl.closest('ion-item');\n  if (itemEl) {\n    return itemEl.querySelector('ion-label');\n  }\n  return null;\n};\nconst focusElement = (el) => {\n  el.focus();\n  /**\n   * When programmatically focusing an element,\n   * the focus-visible utility will not run because\n   * it is expecting a keyboard event to have triggered this;\n   * however, there are times when we need to manually control\n   * this behavior so we call the `setFocus` method on ion-app\n   * which will let us explicitly set the elements to focus.\n   */\n  if (el.classList.contains('ion-focusable')) {\n    const app = el.closest('ion-app');\n    if (app) {\n      app.setFocus([el]);\n    }\n  }\n};\n/**\n * This method is used for Ionic's input components that use Shadow DOM. In\n * order to properly label the inputs to work with screen readers, we need\n * to get the text content of the label outside of the shadow root and pass\n * it to the input inside of the shadow root.\n *\n * Referencing label elements by id from outside of the component is\n * impossible due to the shadow boundary, read more here:\n * https://developer.salesforce.com/blogs/2020/01/accessibility-for-web-components.html\n *\n * @param componentEl The shadow element that needs the aria label\n * @param inputId The unique identifier for the input\n */\nconst getAriaLabel = (componentEl, inputId) => {\n  let labelText;\n  // If the user provides their own label via the aria-labelledby attr\n  // we should use that instead of looking for an ion-label\n  const labelledBy = componentEl.getAttribute('aria-labelledby');\n  // Grab the id off of the component in case they are using\n  // a custom label using the label element\n  const componentId = componentEl.id;\n  let labelId = labelledBy !== null && labelledBy.trim() !== '' ? labelledBy : inputId + '-lbl';\n  let label = labelledBy !== null && labelledBy.trim() !== '' ? document.getElementById(labelledBy) : findItemLabel(componentEl);\n  if (label) {\n    if (labelledBy === null) {\n      label.id = labelId;\n    }\n    labelText = label.textContent;\n    label.setAttribute('aria-hidden', 'true');\n    // if there is no label, check to see if the user has provided\n    // one by setting an id on the component and using the label element\n  }\n  else if (componentId.trim() !== '') {\n    label = document.querySelector(`label[for=\"${componentId}\"]`);\n    if (label) {\n      if (label.id !== '') {\n        labelId = label.id;\n      }\n      else {\n        label.id = labelId = `${componentId}-lbl`;\n      }\n      labelText = label.textContent;\n    }\n  }\n  return { label, labelId, labelText };\n};\n/**\n * This method is used to add a hidden input to a host element that contains\n * a Shadow DOM. It does not add the input inside of the Shadow root which\n * allows it to be picked up inside of forms. It should contain the same\n * values as the host element.\n *\n * @param always Add a hidden input even if the container does not use Shadow\n * @param container The element where the input will be added\n * @param name The name of the input\n * @param value The value of the input\n * @param disabled If true, the input is disabled\n */\nconst renderHiddenInput = (always, container, name, value, disabled) => {\n  if (always || hasShadowDom(container)) {\n    let input = container.querySelector('input.aux-input');\n    if (!input) {\n      input = container.ownerDocument.createElement('input');\n      input.type = 'hidden';\n      input.classList.add('aux-input');\n      container.appendChild(input);\n    }\n    input.disabled = disabled;\n    input.name = name;\n    input.value = value || '';\n  }\n};\nconst clamp = (min, n, max) => {\n  return Math.max(min, Math.min(n, max));\n};\nconst assert = (actual, reason) => {\n  if (!actual) {\n    const message = 'ASSERT: ' + reason;\n    console.error(message);\n    debugger; // eslint-disable-line\n    throw new Error(message);\n  }\n};\nconst now = (ev) => {\n  return ev.timeStamp || Date.now();\n};\nconst pointerCoord = (ev) => {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  if (ev) {\n    const changedTouches = ev.changedTouches;\n    if (changedTouches && changedTouches.length > 0) {\n      const touch = changedTouches[0];\n      return { x: touch.clientX, y: touch.clientY };\n    }\n    if (ev.pageX !== undefined) {\n      return { x: ev.pageX, y: ev.pageY };\n    }\n  }\n  return { x: 0, y: 0 };\n};\n/**\n * @hidden\n * Given a side, return if it should be on the end\n * based on the value of dir\n * @param side the side\n * @param isRTL whether the application dir is rtl\n */\nconst isEndSide = (side) => {\n  const isRTL = document.dir === 'rtl';\n  switch (side) {\n    case 'start':\n      return isRTL;\n    case 'end':\n      return !isRTL;\n    default:\n      throw new Error(`\"${side}\" is not a valid value for [side]. Use \"start\" or \"end\" instead.`);\n  }\n};\nconst debounceEvent = (event, wait) => {\n  const original = event._original || event;\n  return {\n    _original: event,\n    emit: debounce(original.emit.bind(original), wait),\n  };\n};\nconst debounce = (func, wait = 0) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(func, wait, ...args);\n  };\n};\n/**\n * Check whether the two string maps are shallow equal.\n *\n * undefined is treated as an empty map.\n *\n * @returns whether the keys are the same and the values are shallow equal.\n */\nconst shallowEqualStringMap = (map1, map2) => {\n  map1 !== null && map1 !== void 0 ? map1 : (map1 = {});\n  map2 !== null && map2 !== void 0 ? map2 : (map2 = {});\n  if (map1 === map2) {\n    return true;\n  }\n  const keys1 = Object.keys(map1);\n  if (keys1.length !== Object.keys(map2).length) {\n    return false;\n  }\n  for (const k1 of keys1) {\n    if (!(k1 in map2)) {\n      return false;\n    }\n    if (map1[k1] !== map2[k1]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport { addEventListener as a, removeEventListener as b, componentOnReady as c, inheritAttributes as d, renderHiddenInput as e, focusElement as f, getElementRoot as g, clamp as h, inheritAriaAttributes as i, debounceEvent as j, findItemLabel as k, isEndSide as l, assert as m, getAriaLabel as n, debounce as o, pointerCoord as p, hasShadowDom as q, raf as r, shallowEqualStringMap as s, transitionEndAsync as t, now as u };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Logs a warning to the console with an Ionic prefix\n * to indicate the library that is warning the developer.\n *\n * @param message - The string message to be logged to the console.\n */\nconst printIonWarning = (message, ...params) => {\n  return console.warn(`[Ionic Warning]: ${message}`, ...params);\n};\n/*\n * Logs an error to the console with an Ionic prefix\n * to indicate the library that is warning the developer.\n *\n * @param message - The string message to be logged to the console.\n * @param params - Additional arguments to supply to the console.error.\n */\nconst printIonError = (message, ...params) => {\n  return console.error(`[Ionic Error]: ${message}`, ...params);\n};\n/**\n * Prints an error informing developers that an implementation requires an element to be used\n * within a specific selector.\n *\n * @param el The web component element this is requiring the element.\n * @param targetSelectors The selector or selectors that were not found.\n */\nconst printRequiredElementError = (el, ...targetSelectors) => {\n  return console.error(`<${el.tagName.toLowerCase()}> must be used inside ${targetSelectors.join(' or ')}.`);\n};\n\nexport { printIonWarning as a, printRequiredElementError as b, printIonError as p };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Returns `true` if the document or host element\n * has a `dir` set to `rtl`. The host value will always\n * take priority over the root document value.\n */\nconst isRTL = (hostEl) => {\n  if (hostEl) {\n    if (hostEl.dir !== '') {\n      return hostEl.dir.toLowerCase() === 'rtl';\n    }\n  }\n  return (document === null || document === void 0 ? void 0 : document.dir.toLowerCase()) === 'rtl';\n};\n\nexport { isRTL as i };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0\n    ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { a as findClosestIonContent, d as disableContentScrollY, r as resetContentScrollY } from './index8.js';\nimport { h as clamp, j as debounceEvent, i as inheritAriaAttributes, n as getAriaLabel, e as renderHiddenInput } from './helpers.js';\nimport { a as printIonWarning } from './index7.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses, h as hostContext } from './theme.js';\n\nconst rangeIosCss = \":host{--knob-handle-size:calc(var(--knob-size) * 2);display:-ms-flexbox;display:flex;position:relative;-ms-flex:3;flex:3;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.range-disabled){pointer-events:none}::slotted(ion-label){-ms-flex:initial;flex:initial}::slotted(ion-icon[slot]){font-size:24px}.range-slider{position:relative;-ms-flex:1;flex:1;width:100%;height:var(--height);contain:size layout style;cursor:-webkit-grab;cursor:grab;-ms-touch-action:pan-y;touch-action:pan-y}:host(.range-pressed) .range-slider{cursor:-webkit-grabbing;cursor:grabbing}.range-pin{position:absolute;background:var(--ion-color-base);color:var(--ion-color-contrast);text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box}.range-knob-handle{left:0;top:calc((var(--height) - var(--knob-handle-size)) / 2);margin-left:calc(0px - var(--knob-handle-size) / 2);position:absolute;width:var(--knob-handle-size);height:var(--knob-handle-size);text-align:center}[dir=rtl] .range-knob-handle,:host-context([dir=rtl]) .range-knob-handle{left:unset;right:unset;right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.range-knob-handle{margin-left:unset;-webkit-margin-start:calc(0px - var(--knob-handle-size) / 2);margin-inline-start:calc(0px - var(--knob-handle-size) / 2)}}[dir=rtl] .range-knob-handle,:host-context([dir=rtl]) .range-knob-handle{left:unset}.range-knob-handle:active,.range-knob-handle:focus{outline:none}.range-bar{border-radius:var(--bar-border-radius);left:0;top:calc((var(--height) - var(--bar-height)) / 2);position:absolute;width:100%;height:var(--bar-height);background:var(--bar-background);pointer-events:none}[dir=rtl] .range-bar,:host-context([dir=rtl]) .range-bar{left:unset;right:unset;right:0}[dir=rtl] .range-bar,:host-context([dir=rtl]) .range-bar{left:unset}.range-knob{border-radius:var(--knob-border-radius);left:calc(50% - var(--knob-size) / 2);top:calc(50% - var(--knob-size) / 2);position:absolute;width:var(--knob-size);height:var(--knob-size);background:var(--knob-background);-webkit-box-shadow:var(--knob-box-shadow);box-shadow:var(--knob-box-shadow);z-index:2;pointer-events:none}[dir=rtl] .range-knob,:host-context([dir=rtl]) .range-knob{left:unset;right:unset;right:calc(50% - var(--knob-size) / 2)}[dir=rtl] .range-knob,:host-context([dir=rtl]) .range-knob{left:unset}:host(.range-pressed) .range-bar-active{will-change:left, right}:host(.in-item){width:100%}:host(.in-item) ::slotted(ion-label){-ms-flex-item-align:center;align-self:center}:host{--knob-border-radius:50%;--knob-background:#ffffff;--knob-box-shadow:0 3px 1px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.13), 0 0 0 1px rgba(0, 0, 0, 0.02);--knob-size:28px;--bar-height:2px;--bar-background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.1);--bar-background-active:var(--ion-color-primary, #3880ff);--bar-border-radius:0;--height:42px;padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host(.ion-color) .range-bar-active,:host(.ion-color) .range-tick-active{background:var(--ion-color-base)}::slotted([slot=start]){margin-left:0;margin-right:16px;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted([slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}}::slotted([slot=end]){margin-left:16px;margin-right:0;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted([slot=end]){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}}:host(.range-has-pin){padding-top:20px}.range-bar-active{bottom:0;width:auto;background:var(--bar-background-active)}.range-tick{margin-left:-1px;border-radius:0;position:absolute;top:18px;width:2px;height:8px;background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.1);pointer-events:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.range-tick{margin-left:unset;-webkit-margin-start:-1px;margin-inline-start:-1px}}.range-tick-active{background:var(--bar-background-active)}.range-pin{-webkit-transform:translate3d(0,  28px,  0) scale(0.01);transform:translate3d(0,  28px,  0) scale(0.01);padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:inline-block;position:relative;top:-20px;min-width:28px;-webkit-transition:-webkit-transform 120ms ease;transition:-webkit-transform 120ms ease;transition:transform 120ms ease;transition:transform 120ms ease, -webkit-transform 120ms ease;background:transparent;color:var(--ion-text-color, #000);font-size:12px;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.range-pin{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}.range-knob-pressed .range-pin,.range-knob-handle.ion-focused .range-pin{-webkit-transform:translate3d(0,  0,  0) scale(1);transform:translate3d(0,  0,  0) scale(1)}:host(.range-disabled){opacity:0.5}\";\n\nconst rangeMdCss = \":host{--knob-handle-size:calc(var(--knob-size) * 2);display:-ms-flexbox;display:flex;position:relative;-ms-flex:3;flex:3;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.range-disabled){pointer-events:none}::slotted(ion-label){-ms-flex:initial;flex:initial}::slotted(ion-icon[slot]){font-size:24px}.range-slider{position:relative;-ms-flex:1;flex:1;width:100%;height:var(--height);contain:size layout style;cursor:-webkit-grab;cursor:grab;-ms-touch-action:pan-y;touch-action:pan-y}:host(.range-pressed) .range-slider{cursor:-webkit-grabbing;cursor:grabbing}.range-pin{position:absolute;background:var(--ion-color-base);color:var(--ion-color-contrast);text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box}.range-knob-handle{left:0;top:calc((var(--height) - var(--knob-handle-size)) / 2);margin-left:calc(0px - var(--knob-handle-size) / 2);position:absolute;width:var(--knob-handle-size);height:var(--knob-handle-size);text-align:center}[dir=rtl] .range-knob-handle,:host-context([dir=rtl]) .range-knob-handle{left:unset;right:unset;right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.range-knob-handle{margin-left:unset;-webkit-margin-start:calc(0px - var(--knob-handle-size) / 2);margin-inline-start:calc(0px - var(--knob-handle-size) / 2)}}[dir=rtl] .range-knob-handle,:host-context([dir=rtl]) .range-knob-handle{left:unset}.range-knob-handle:active,.range-knob-handle:focus{outline:none}.range-bar{border-radius:var(--bar-border-radius);left:0;top:calc((var(--height) - var(--bar-height)) / 2);position:absolute;width:100%;height:var(--bar-height);background:var(--bar-background);pointer-events:none}[dir=rtl] .range-bar,:host-context([dir=rtl]) .range-bar{left:unset;right:unset;right:0}[dir=rtl] .range-bar,:host-context([dir=rtl]) .range-bar{left:unset}.range-knob{border-radius:var(--knob-border-radius);left:calc(50% - var(--knob-size) / 2);top:calc(50% - var(--knob-size) / 2);position:absolute;width:var(--knob-size);height:var(--knob-size);background:var(--knob-background);-webkit-box-shadow:var(--knob-box-shadow);box-shadow:var(--knob-box-shadow);z-index:2;pointer-events:none}[dir=rtl] .range-knob,:host-context([dir=rtl]) .range-knob{left:unset;right:unset;right:calc(50% - var(--knob-size) / 2)}[dir=rtl] .range-knob,:host-context([dir=rtl]) .range-knob{left:unset}:host(.range-pressed) .range-bar-active{will-change:left, right}:host(.in-item){width:100%}:host(.in-item) ::slotted(ion-label){-ms-flex-item-align:center;align-self:center}:host{--knob-border-radius:50%;--knob-background:var(--bar-background-active);--knob-box-shadow:none;--knob-size:18px;--bar-height:2px;--bar-background:rgba(var(--ion-color-primary-rgb, 56, 128, 255), 0.26);--bar-background-active:var(--ion-color-primary, #3880ff);--bar-border-radius:0;--height:42px;--pin-background:var(--ion-color-primary, #3880ff);--pin-color:var(--ion-color-primary-contrast, #fff);padding-left:14px;padding-right:14px;padding-top:8px;padding-bottom:8px;font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:14px;padding-inline-start:14px;-webkit-padding-end:14px;padding-inline-end:14px}}:host(.ion-color) .range-bar{background:rgba(var(--ion-color-base-rgb), 0.26)}:host(.ion-color) .range-bar-active,:host(.ion-color) .range-knob,:host(.ion-color) .range-knob::before,:host(.ion-color) .range-pin,:host(.ion-color) .range-pin::before,:host(.ion-color) .range-tick{background:var(--ion-color-base);color:var(--ion-color-contrast)}::slotted([slot=start]){margin-left:0;margin-right:14px;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted([slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:14px;margin-inline-end:14px}}::slotted([slot=end]){margin-left:14px;margin-right:0;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted([slot=end]){margin-left:unset;margin-right:unset;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:0;margin-inline-end:0}}:host(.range-has-pin){padding-top:28px}.range-bar-active{bottom:0;width:auto;background:var(--bar-background-active)}.range-knob{-webkit-transform:scale(0.67);transform:scale(0.67);-webkit-transition-duration:120ms;transition-duration:120ms;-webkit-transition-property:background-color, border, -webkit-transform;transition-property:background-color, border, -webkit-transform;transition-property:transform, background-color, border;transition-property:transform, background-color, border, -webkit-transform;-webkit-transition-timing-function:ease;transition-timing-function:ease;z-index:2}.range-knob::before{border-radius:50%;left:0;position:absolute;width:var(--knob-size);height:var(--knob-size);-webkit-transform:scale(1);transform:scale(1);-webkit-transition:0.267s cubic-bezier(0, 0, 0.58, 1);transition:0.267s cubic-bezier(0, 0, 0.58, 1);background:var(--knob-background);content:\\\"\\\";opacity:0.13;pointer-events:none}[dir=rtl] .range-knob::before,:host-context([dir=rtl]) .range-knob::before{left:unset;right:unset;right:0}.range-tick{position:absolute;top:calc((var(--height) - var(--bar-height)) / 2);width:var(--bar-height);height:var(--bar-height);background:var(--bar-background-active);z-index:1;pointer-events:none}.range-tick-active{background:transparent}.range-pin{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:8px;border-radius:50%;-webkit-transform:translate3d(0,  0,  0) scale(0.01);transform:translate3d(0,  0,  0) scale(0.01);display:inline-block;position:relative;min-width:28px;height:28px;-webkit-transition:background 120ms ease, -webkit-transform 120ms ease;transition:background 120ms ease, -webkit-transform 120ms ease;transition:transform 120ms ease, background 120ms ease;transition:transform 120ms ease, background 120ms ease, -webkit-transform 120ms ease;background:var(--pin-background);color:var(--pin-color);text-align:center}.range-pin::before{left:50%;top:3px;margin-left:-13px;border-radius:50% 50% 50% 0;position:absolute;width:26px;height:26px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transition:background 120ms ease;transition:background 120ms ease;background:var(--pin-background);content:\\\"\\\";z-index:-1}[dir=rtl] .range-pin::before,:host-context([dir=rtl]) .range-pin::before{left:unset;right:unset;right:50%}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.range-pin::before{margin-left:unset;-webkit-margin-start:-13px;margin-inline-start:-13px}}[dir=rtl] .range-pin::before,:host-context([dir=rtl]) .range-pin::before{left:unset}.range-knob-pressed .range-pin,.range-knob-handle.ion-focused .range-pin{-webkit-transform:translate3d(0,  -24px,  0) scale(1);transform:translate3d(0,  -24px,  0) scale(1)}@media (any-hover: hover){.range-knob-handle:hover .range-knob:before{-webkit-transform:scale(2);transform:scale(2);opacity:0.13}}.range-knob-handle.ion-activated .range-knob:before,.range-knob-handle.ion-focused .range-knob:before,.range-knob-handle.range-knob-pressed .range-knob:before{-webkit-transform:scale(2);transform:scale(2)}.range-knob-handle.ion-focused .range-knob::before{opacity:0.13}.range-knob-handle.ion-activated .range-knob::before,.range-knob-handle.range-knob-pressed .range-knob::before{opacity:0.25}:host(:not(.range-has-pin)) .range-knob-pressed .range-knob,:host(:not(.range-has-pin)) .range-knob-handle.ion-focused .range-knob{-webkit-transform:scale(1);transform:scale(1)}:host(.range-disabled) .range-bar-active,:host(.range-disabled) .range-bar,:host(.range-disabled) .range-tick{background-color:var(--ion-color-step-250, #bfbfbf)}:host(.range-disabled) .range-knob{-webkit-transform:scale(0.55);transform:scale(0.55);outline:5px solid #fff;background-color:var(--ion-color-step-250, #bfbfbf)}\";\n\nconst Range = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionKnobMoveStart = createEvent(this, \"ionKnobMoveStart\", 7);\n    this.ionKnobMoveEnd = createEvent(this, \"ionKnobMoveEnd\", 7);\n    this.didLoad = false;\n    this.noUpdate = false;\n    this.hasFocus = false;\n    this.inheritedAttributes = {};\n    this.contentEl = null;\n    this.initialContentScrollY = true;\n    this.ratioA = 0;\n    this.ratioB = 0;\n    /**\n     * How long, in milliseconds, to wait to trigger the\n     * `ionChange` event after each change in the range value.\n     * This also impacts form bindings such as `ngModel` or `v-model`.\n     */\n    this.debounce = 0;\n    // TODO: In Ionic Framework v6 this should initialize to this.rangeId like the other form components do.\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = '';\n    /**\n     * Show two knobs.\n     */\n    this.dualKnobs = false;\n    /**\n     * Minimum integer value of the range.\n     */\n    this.min = 0;\n    /**\n     * Maximum integer value of the range.\n     */\n    this.max = 100;\n    /**\n     * If `true`, a pin with integer value is shown when the knob\n     * is pressed.\n     */\n    this.pin = false;\n    /**\n     * A callback used to format the pin text.\n     * By default the pin text is set to `Math.round(value)`.\n     */\n    this.pinFormatter = (value) => Math.round(value);\n    /**\n     * If `true`, the knob snaps to tick marks evenly spaced based\n     * on the step property value.\n     */\n    this.snaps = false;\n    /**\n     * Specifies the value granularity.\n     */\n    this.step = 1;\n    /**\n     * If `true`, tick marks are displayed based on the step value.\n     * Only applies when `snaps` is `true`.\n     */\n    this.ticks = true;\n    /**\n     * If `true`, the user cannot interact with the range.\n     */\n    this.disabled = false;\n    /**\n     * the value of the range.\n     */\n    this.value = 0;\n    this.clampBounds = (value) => {\n      return clamp(this.min, value, this.max);\n    };\n    this.ensureValueInBounds = (value) => {\n      if (this.dualKnobs) {\n        return {\n          lower: this.clampBounds(value.lower),\n          upper: this.clampBounds(value.upper),\n        };\n      }\n      else {\n        return this.clampBounds(value);\n      }\n    };\n    this.setupGesture = async () => {\n      const rangeSlider = this.rangeSlider;\n      if (rangeSlider) {\n        this.gesture = (await import('./index2.js')).createGesture({\n          el: rangeSlider,\n          gestureName: 'range',\n          gesturePriority: 100,\n          threshold: 0,\n          onStart: (ev) => this.onStart(ev),\n          onMove: (ev) => this.onMove(ev),\n          onEnd: (ev) => this.onEnd(ev),\n        });\n        this.gesture.enable(!this.disabled);\n      }\n    };\n    this.handleKeyboard = (knob, isIncrease) => {\n      const { ensureValueInBounds } = this;\n      let step = this.step;\n      step = step > 0 ? step : 1;\n      step = step / (this.max - this.min);\n      if (!isIncrease) {\n        step *= -1;\n      }\n      if (knob === 'A') {\n        this.ratioA = clamp(0, this.ratioA + step, 1);\n      }\n      else {\n        this.ratioB = clamp(0, this.ratioB + step, 1);\n      }\n      this.ionKnobMoveStart.emit({ value: ensureValueInBounds(this.value) });\n      this.updateValue();\n      this.ionKnobMoveEnd.emit({ value: ensureValueInBounds(this.value) });\n    };\n    this.onBlur = () => {\n      if (this.hasFocus) {\n        this.hasFocus = false;\n        this.ionBlur.emit();\n        this.emitStyle();\n      }\n    };\n    this.onFocus = () => {\n      if (!this.hasFocus) {\n        this.hasFocus = true;\n        this.ionFocus.emit();\n        this.emitStyle();\n      }\n    };\n  }\n  debounceChanged() {\n    this.ionChange = debounceEvent(this.ionChange, this.debounce);\n  }\n  minChanged() {\n    if (!this.noUpdate) {\n      this.updateRatio();\n    }\n  }\n  maxChanged() {\n    if (!this.noUpdate) {\n      this.updateRatio();\n    }\n  }\n  activeBarStartChanged() {\n    const { activeBarStart } = this;\n    if (activeBarStart !== undefined) {\n      if (activeBarStart > this.max) {\n        printIonWarning(`Range: The value of activeBarStart (${activeBarStart}) is greater than the max (${this.max}). Valid values are greater than or equal to the min value and less than or equal to the max value.`, this.el);\n        this.activeBarStart = this.max;\n      }\n      else if (activeBarStart < this.min) {\n        printIonWarning(`Range: The value of activeBarStart (${activeBarStart}) is less than the min (${this.min}). Valid values are greater than or equal to the min value and less than or equal to the max value.`, this.el);\n        this.activeBarStart = this.min;\n      }\n    }\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n    this.emitStyle();\n  }\n  valueChanged(value) {\n    if (!this.noUpdate) {\n      this.updateRatio();\n    }\n    value = this.ensureValueInBounds(value);\n    this.ionChange.emit({ value });\n  }\n  componentWillLoad() {\n    /**\n     * If user has custom ID set then we should\n     * not assign the default incrementing ID.\n     */\n    this.rangeId = this.el.hasAttribute('id') ? this.el.getAttribute('id') : `ion-r-${rangeIds++}`;\n    this.inheritedAttributes = inheritAriaAttributes(this.el);\n  }\n  componentDidLoad() {\n    this.setupGesture();\n    this.didLoad = true;\n  }\n  connectedCallback() {\n    this.updateRatio();\n    this.debounceChanged();\n    this.disabledChanged();\n    this.activeBarStartChanged();\n    /**\n     * If we have not yet rendered\n     * ion-range, then rangeSlider is not defined.\n     * But if we are moving ion-range via appendChild,\n     * then rangeSlider will be defined.\n     */\n    if (this.didLoad) {\n      this.setupGesture();\n    }\n    this.contentEl = findClosestIonContent(this.el);\n  }\n  disconnectedCallback() {\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  getValue() {\n    var _a;\n    const value = (_a = this.value) !== null && _a !== void 0 ? _a : 0;\n    if (this.dualKnobs) {\n      if (typeof value === 'object') {\n        return value;\n      }\n      return {\n        lower: 0,\n        upper: value,\n      };\n    }\n    else {\n      if (typeof value === 'object') {\n        return value.upper;\n      }\n      return value;\n    }\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  onStart(detail) {\n    const { contentEl } = this;\n    if (contentEl) {\n      this.initialContentScrollY = disableContentScrollY(contentEl);\n    }\n    const rect = (this.rect = this.rangeSlider.getBoundingClientRect());\n    const currentX = detail.currentX;\n    // figure out which knob they started closer to\n    let ratio = clamp(0, (currentX - rect.left) / rect.width, 1);\n    if (isRTL(this.el)) {\n      ratio = 1 - ratio;\n    }\n    this.pressedKnob = !this.dualKnobs || Math.abs(this.ratioA - ratio) < Math.abs(this.ratioB - ratio) ? 'A' : 'B';\n    this.setFocus(this.pressedKnob);\n    // update the active knob's position\n    this.update(currentX);\n    this.ionKnobMoveStart.emit({ value: this.ensureValueInBounds(this.value) });\n  }\n  onMove(detail) {\n    this.update(detail.currentX);\n  }\n  onEnd(detail) {\n    const { contentEl, initialContentScrollY } = this;\n    if (contentEl) {\n      resetContentScrollY(contentEl, initialContentScrollY);\n    }\n    this.update(detail.currentX);\n    this.pressedKnob = undefined;\n    this.ionKnobMoveEnd.emit({ value: this.ensureValueInBounds(this.value) });\n  }\n  update(currentX) {\n    // figure out where the pointer is currently at\n    // update the knob being interacted with\n    const rect = this.rect;\n    let ratio = clamp(0, (currentX - rect.left) / rect.width, 1);\n    if (isRTL(this.el)) {\n      ratio = 1 - ratio;\n    }\n    if (this.snaps) {\n      // snaps the ratio to the current value\n      ratio = valueToRatio(ratioToValue(ratio, this.min, this.max, this.step), this.min, this.max);\n    }\n    // update which knob is pressed\n    if (this.pressedKnob === 'A') {\n      this.ratioA = ratio;\n    }\n    else {\n      this.ratioB = ratio;\n    }\n    // Update input value\n    this.updateValue();\n  }\n  get valA() {\n    return ratioToValue(this.ratioA, this.min, this.max, this.step);\n  }\n  get valB() {\n    return ratioToValue(this.ratioB, this.min, this.max, this.step);\n  }\n  get ratioLower() {\n    if (this.dualKnobs) {\n      return Math.min(this.ratioA, this.ratioB);\n    }\n    const { activeBarStart } = this;\n    if (activeBarStart == null) {\n      return 0;\n    }\n    return valueToRatio(activeBarStart, this.min, this.max);\n  }\n  get ratioUpper() {\n    if (this.dualKnobs) {\n      return Math.max(this.ratioA, this.ratioB);\n    }\n    return this.ratioA;\n  }\n  updateRatio() {\n    const value = this.getValue();\n    const { min, max } = this;\n    if (this.dualKnobs) {\n      this.ratioA = valueToRatio(value.lower, min, max);\n      this.ratioB = valueToRatio(value.upper, min, max);\n    }\n    else {\n      this.ratioA = valueToRatio(value, min, max);\n    }\n  }\n  updateValue() {\n    this.noUpdate = true;\n    const { valA, valB } = this;\n    this.value = !this.dualKnobs\n      ? valA\n      : {\n        lower: Math.min(valA, valB),\n        upper: Math.max(valA, valB),\n      };\n    this.noUpdate = false;\n  }\n  setFocus(knob) {\n    if (this.el.shadowRoot) {\n      const knobEl = this.el.shadowRoot.querySelector(knob === 'A' ? '.range-knob-a' : '.range-knob-b');\n      if (knobEl) {\n        knobEl.focus();\n      }\n    }\n  }\n  render() {\n    var _a;\n    const { min, max, step, el, handleKeyboard, pressedKnob, disabled, pin, ratioLower, ratioUpper, inheritedAttributes, rangeId, pinFormatter, } = this;\n    /**\n     * Look for external label, ion-label, or aria-labelledby.\n     * If none, see if user placed an aria-label on the host\n     * and use that instead.\n     */\n    let { labelText } = getAriaLabel(el, rangeId);\n    if (labelText === undefined || labelText === null) {\n      labelText = inheritedAttributes['aria-label'];\n    }\n    const mode = getIonMode(this);\n    let barStart = `${ratioLower * 100}%`;\n    let barEnd = `${100 - ratioUpper * 100}%`;\n    const rtl = isRTL(this.el);\n    const start = rtl ? 'right' : 'left';\n    const end = rtl ? 'left' : 'right';\n    const tickStyle = (tick) => {\n      return {\n        [start]: tick[start],\n      };\n    };\n    if (this.dualKnobs === false) {\n      /**\n       * When the value is less than the activeBarStart or the min value,\n       * the knob will display at the start of the active bar.\n       */\n      if (this.valA < ((_a = this.activeBarStart) !== null && _a !== void 0 ? _a : this.min)) {\n        /**\n         * Sets the bar positions relative to the upper and lower limits.\n         * Converts the ratio values into percentages, used as offsets for left/right styles.\n         *\n         * The ratioUpper refers to the knob position on the bar.\n         * The ratioLower refers to the end position of the active bar (the value).\n         */\n        barStart = `${ratioUpper * 100}%`;\n        barEnd = `${100 - ratioLower * 100}%`;\n      }\n      else {\n        /**\n         * Otherwise, the knob will display at the end of the active bar.\n         *\n         * The ratioLower refers to the start position of the active bar (the value).\n         * The ratioUpper refers to the knob position on the bar.\n         */\n        barStart = `${ratioLower * 100}%`;\n        barEnd = `${100 - ratioUpper * 100}%`;\n      }\n    }\n    const barStyle = {\n      [start]: barStart,\n      [end]: barEnd,\n    };\n    const ticks = [];\n    if (this.snaps && this.ticks) {\n      for (let value = min; value <= max; value += step) {\n        const ratio = valueToRatio(value, min, max);\n        const ratioMin = Math.min(ratioLower, ratioUpper);\n        const ratioMax = Math.max(ratioLower, ratioUpper);\n        const tick = {\n          ratio,\n          /**\n           * Sets the tick mark as active when the tick is between the min bounds and the knob.\n           * When using activeBarStart, the tick mark will be active between the knob and activeBarStart.\n           */\n          active: ratio >= ratioMin && ratio <= ratioMax,\n        };\n        tick[start] = `${ratio * 100}%`;\n        ticks.push(tick);\n      }\n    }\n    renderHiddenInput(true, el, this.name, JSON.stringify(this.getValue()), disabled);\n    return (h(Host, { onFocusin: this.onFocus, onFocusout: this.onBlur, id: rangeId, class: createColorClasses(this.color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'range-disabled': disabled,\n        'range-pressed': pressedKnob !== undefined,\n        'range-has-pin': pin,\n      }) }, h(\"slot\", { name: \"start\" }), h(\"div\", { class: \"range-slider\", ref: (rangeEl) => (this.rangeSlider = rangeEl) }, ticks.map((tick) => (h(\"div\", { style: tickStyle(tick), role: \"presentation\", class: {\n        'range-tick': true,\n        'range-tick-active': tick.active,\n      }, part: tick.active ? 'tick-active' : 'tick' }))), h(\"div\", { class: \"range-bar\", role: \"presentation\", part: \"bar\" }), h(\"div\", { class: \"range-bar range-bar-active\", role: \"presentation\", style: barStyle, part: \"bar-active\" }), renderKnob(rtl, {\n      knob: 'A',\n      pressed: pressedKnob === 'A',\n      value: this.valA,\n      ratio: this.ratioA,\n      pin,\n      pinFormatter,\n      disabled,\n      handleKeyboard,\n      min,\n      max,\n      labelText,\n    }), this.dualKnobs &&\n      renderKnob(rtl, {\n        knob: 'B',\n        pressed: pressedKnob === 'B',\n        value: this.valB,\n        ratio: this.ratioB,\n        pin,\n        pinFormatter,\n        disabled,\n        handleKeyboard,\n        min,\n        max,\n        labelText,\n      })), h(\"slot\", { name: \"end\" })));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"debounce\": [\"debounceChanged\"],\n    \"min\": [\"minChanged\"],\n    \"max\": [\"maxChanged\"],\n    \"activeBarStart\": [\"activeBarStartChanged\"],\n    \"disabled\": [\"disabledChanged\"],\n    \"value\": [\"valueChanged\"]\n  }; }\n  static get style() { return {\n    ios: rangeIosCss,\n    md: rangeMdCss\n  }; }\n}, [33, \"ion-range\", {\n    \"color\": [513],\n    \"debounce\": [2],\n    \"name\": [1],\n    \"dualKnobs\": [4, \"dual-knobs\"],\n    \"min\": [2],\n    \"max\": [2],\n    \"pin\": [4],\n    \"pinFormatter\": [16],\n    \"snaps\": [4],\n    \"step\": [2],\n    \"ticks\": [4],\n    \"activeBarStart\": [1026, \"active-bar-start\"],\n    \"disabled\": [4],\n    \"value\": [1026],\n    \"ratioA\": [32],\n    \"ratioB\": [32],\n    \"pressedKnob\": [32]\n  }]);\nconst renderKnob = (rtl, { knob, value, ratio, min, max, disabled, pressed, pin, handleKeyboard, labelText, pinFormatter }) => {\n  const start = rtl ? 'right' : 'left';\n  const knobStyle = () => {\n    const style = {};\n    style[start] = `${ratio * 100}%`;\n    return style;\n  };\n  return (h(\"div\", { onKeyDown: (ev) => {\n      const key = ev.key;\n      if (key === 'ArrowLeft' || key === 'ArrowDown') {\n        handleKeyboard(knob, false);\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n      else if (key === 'ArrowRight' || key === 'ArrowUp') {\n        handleKeyboard(knob, true);\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }, class: {\n      'range-knob-handle': true,\n      'range-knob-a': knob === 'A',\n      'range-knob-b': knob === 'B',\n      'range-knob-pressed': pressed,\n      'range-knob-min': value === min,\n      'range-knob-max': value === max,\n      'ion-activatable': true,\n      'ion-focusable': true,\n    }, style: knobStyle(), role: \"slider\", tabindex: disabled ? -1 : 0, \"aria-label\": labelText, \"aria-valuemin\": min, \"aria-valuemax\": max, \"aria-disabled\": disabled ? 'true' : null, \"aria-valuenow\": value }, pin && (h(\"div\", { class: \"range-pin\", role: \"presentation\", part: \"pin\" }, pinFormatter(value))), h(\"div\", { class: \"range-knob\", role: \"presentation\", part: \"knob\" })));\n};\nconst ratioToValue = (ratio, min, max, step) => {\n  let value = (max - min) * ratio;\n  if (step > 0) {\n    value = Math.round(value / step) * step + min;\n  }\n  return clamp(min, value, max);\n};\nconst valueToRatio = (value, min, max) => {\n  return clamp(0, (value - min) / (max - min), 1);\n};\nlet rangeIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-range\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-range\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Range);\n      }\n      break;\n  } });\n}\n\nconst IonRange = Range;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonRange, defineCustomElement };\n","import { SliderMetadata } from \"./slider.metadata\";\r\nconsole.log('Plugin Slider started');\r\nconst CssContent = `\r\n\r\n  :host {\r\n    overflow: hidden;\r\n    width: 100%;\r\n    height: 100px;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .content {\r\n    height: 100%; \r\n  }\r\n\r\n  .ion-color-secondary {\r\n    font-family: 'Roboto';\r\n    --ion-color-base-rgb: var(--ion-color-secondary-rgb, 61, 194, 255) !important;\r\n    --ion-color-contrast: var(--ion-color-secondary-contrast, #fff) !important;\r\n    --ion-color-contrast-rgb: var(--ion-color-secondary-contrast-rgb, 255, 255, 255) !important;\r\n    --ion-color-shade: var(--ion-color-secondary-shade, #36abe0) !important;\r\n    --ion-color-tint: var(--ion-color-secondary-tint, #50c8ff) !important;\r\n    --knob-background: var(--color) !important;\r\n    \r\n    --ion-color-base: var(--theme-secondary-color) !important;\r\n    --ion-color-primary: var(--theme-tertiary-color)  !important;\r\n    --bar-background: var(--theme-tertiary-color) !important;\r\n    --ion-text-color: var(--theme-text-color) !important;\r\n  }\r\n\r\n`;\r\nexport class SliderComponent extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.shadow = this.attachShadow({ mode: 'open' });\r\n        this.htmlElement = document.createElement('div');\r\n        this.htmlElement.className = 'content';\r\n        this.styleElement = document.createElement('style');\r\n    }\r\n    connectedCallback() {\r\n        this.shadow.appendChild(this.styleElement);\r\n        this.shadow.appendChild(this.htmlElement);\r\n        this.styleElement.innerHTML = CssContent;\r\n        this.refresh();\r\n        setTimeout(() => this.init());\r\n    }\r\n    static get observedAttributes() {\r\n        return ['value', 'snap', 'step'];\r\n    }\r\n    attributeChangedCallback() {\r\n        this.refresh();\r\n    }\r\n    getHtmlTemplate() {\r\n        const snaps = this.getAttribute('snaps');\r\n        const step = this.getAttribute('step');\r\n        const value = this.getAttribute('value');\r\n        return `\r\n      <ion-range mode=\"ios\" min=\"0\" max=\"100\" pin=\"true\" color=\"secondary\" ticks=\"true\" step=\"${step}\" snaps=\"${snaps}\" value=\"${value}\">\r\n      </ion-range>`;\r\n    }\r\n    refresh() {\r\n        this.htmlElement.innerHTML = this.getHtmlTemplate();\r\n    }\r\n    init() {\r\n        const slider = this.shadow.querySelector('ion-range');\r\n        slider.addEventListener('ionKnobMoveEnd', (event) => {\r\n            const value = event.detail.value;\r\n            this.dispatchEvent(new CustomEvent(\"changed\", { detail: { value: value } }));\r\n        });\r\n    }\r\n}\r\nzySdk.services.registry.registerComponent(SliderMetadata, SliderComponent);\r\n","const IconData = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"#cccccc\">    \r\n    <path d=\"M10,9A1,1 0 0,1 11,8A1,1 0 0,1 12,9V13.47L13.21,13.6L18.15,15.79C18.68,16.03 19,16.56 19,17.14V21.5C18.97,22.32 18.32,22.97 17.5,23H11C10.62,23 10.26,22.85 10,22.57L5.1,18.37L5.84,17.6C6.03,17.39 6.3,17.28 6.58,17.28H6.8L10,19V9M9,12.44V9A2,2 0 0,1 11,7A2,2 0 0,1 13,9V12.44C14.19,11.75 15,10.47 15,9A4,4 0 0,0 11,5A4,4 0 0,0 7,9C7,10.47 7.81,11.75 9,12.44Z\" />\r\n  </svg>\r\n`;\r\nexport const SliderMetadata = {\r\n    id: 'custom-slider',\r\n    metadataVersion: 2,\r\n    icon: IconData,\r\n    label: 'Slider',\r\n    category: 'Plugins',\r\n    subCategory: 'Plugins',\r\n    hidden: false,\r\n    properties: [{\r\n            id: 'value',\r\n            name: 'Value',\r\n            type: 'number',\r\n            tootip: 'The value between 1 and 100',\r\n            default: '50',\r\n            main: true,\r\n            write: true\r\n        }, {\r\n            id: 'snaps',\r\n            name: 'Snaps',\r\n            type: 'boolean',\r\n            tootip: 'Snap the values',\r\n            default: 'true'\r\n        }, {\r\n            id: 'step',\r\n            name: 'Step',\r\n            type: 'number',\r\n            tootip: 'Step',\r\n            default: '10'\r\n        }],\r\n    styles: [{\r\n            id: '--color',\r\n            name: 'Color',\r\n            type: 'color',\r\n            default: 'var(--theme-secondary-color)'\r\n        }]\r\n};\r\n","import { IonRange } from \"@ionic/core/components/ion-range\";\r\nimport { initialize } from \"@ionic/core/components\";\r\nimport { SliderComponent } from './slider.component';\r\n// Prevent Treeshaking\r\nconsole.debug(SliderComponent);\r\ninitialize();\r\nif (!customElements.get(\"ion-range\")) {\r\n    customElements.define(\"ion-range\", IonRange);\r\n}\r\n"],"names":["GestureDelegate","constructor","ctrl","id","name","priority","disableScroll","this","canStart","start","capture","captured","release","enableScroll","destroy","undefined","BlockerDelegate","disable","block","gesture","disableGesture","unblock","enableGesture","BACKDROP_NO_SCROLL","GESTURE_CONTROLLER","gestureId","requestedStart","Map","disabledGestures","disabledScroll","Set","createGesture","config","_a","newID","createBlocker","opts","gestureName","set","delete","maxPriority","forEach","value","Math","max","capturedId","clear","event","CustomEvent","detail","document","dispatchEvent","get","add","size","body","classList","remove","isDisabled","isCaptured","isScrollDisabled","disabled","addEventListener","el","eventName","callback","listenerOpts","supportsPassive","passive","node","_sPassive","Object","defineProperty","e","getDocument","Document","ownerDocument","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","assign","direction","gesturePriority","maxAngle","threshold","onWillStart","onStart","onEnd","notCaptured","onMove","blurOnStart","type","startX","startY","startTime","currentX","currentY","velocityX","velocityY","deltaX","deltaY","currentTime","data","pan","thresh","radians","PI","isDirX","maxCosine","cos","dirty","isPan","x","y","detect","distance","hypotenuse","sqrt","cosine","isGesture","getDirection","createPanRecognizer","fireOnMove","tryToCapturePan","then","fireOnStart","activeElement","blur","blurActiveElement","reset","pointerUp","ev","tmpHasCaptured","tmpHasFiredStart","calcGestureData","pointerEvents","pointerDown","pointerMove","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","Date","now","target","handleTouchEnd","handleMouseDown","handleMouseUp","stopTouch","stopMouse","stop","enable","isEnabled","createPointerEvents","timeStamp","updateDetail","requestAnimationFrame","abortGesture","prevX","prevY","prevT","timeDelta","changedTouches","length","touch","clientX","clientY","pageX","pageY","_polyfillHost","_polyfillSlotted","_polyfillHostContext","_parenSuffix","_cssColonHostRe","RegExp","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinator","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","_commentWithHashRe","_ruleRe","_curlyRe","_selectorPartsRe","BLOCK_PLACEHOLDER","processRules","input","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","replace","m","selector","content","suffix","contentPrefix","startsWith","blocks","substring","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","push","join","convertColonRule","cssText","regExp","partReplacer","parts","r","i","p","trim","colonHostPartReplacer","host","colonHostContextPartReplacer","indexOf","injectScopingSelector","scopingSelector","_","before","_colonGroup","colon","after","scopeSelectors","scopeSelectorText","hostSelector","slotSelector","commentOriginalSelector","map","shallowPart","scopeSelector","makeScopeMatcher","test","selectorNeedsScoping","className","_scopeSelectorPart","scopedP","lastIndex","replaceBy","applySimpleSelectorScope","t","safeContent","placeholders","index","keep","pseudo","exp","safeSelector","res","scopedSelector","startIndex","sep","shouldScope","exec","separator","slice","applyStrictSelectorScope","scopeCss","scopeId","hostScopeId","slotScopeId","commentsWithHash","match","orgSelectors","processCommentedSelector","placeholder","comment","scoped","slotted","slotClass","selectors","compound","slottedSelector","prefixSelector","char","orgSelector","addedSelector","trimRight","updatedSelector","convertColonSlotted","convertColonHostContext","convertColonHost","reduce","result","pattern","convertShadowDOMSelectors","slottedSelectors","scopeCssText","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","keys","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","key","o","enumerable","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","contentRef","hostTagName","useNativeShadowDom","checkSlotFallbackVisibility","checkSlotRelocate","isSvgMode","renderingRef","queuePending","Context","XLINK_NS","EMPTY_OBJ","isComplexType","h","nodeName","vnodeData","children","child","slotName","simple","lastSimple","vNodeChildren","walk","c","Array","isArray","String","$text$","newVNode","classData","class","filter","k","vdomFnUtils","vnode","$attrs$","$children$","$key$","$name$","tag","text","$flags$","$tag$","$elm$","Host","isHost","cb","convertToPublic","convertToPrivate","vattrs","vchildren","vkey","vname","vtag","vtext","createEvent","ref","flags","elm","emit","emitEvent","bubbles","composed","cancelable","plt","ce","rootAppliedStyles","WeakMap","addStyle","styleContainerNode","cmpMeta","mode","hostElm","getScopeId","style","styles","nodeType","doc","head","styleElm","appliedStyles","has","createElement","innerHTML","nonce","$nonce$","_b","_c","querySelector","getAttribute","queryNonceMetaTagContent","setAttribute","insertBefore","adoptedStyleSheets","includes","cmp","$tagName$","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","toLowerCase","oldClasses","parseClassList","newClasses","removeProperty","setProperty","__lookupSetter__","isComplex","tagName","n","xlink","removeAttributeNS","removeAttribute","setAttributeNS","win","rel","ael","parseClassListRegex","updateElement","oldVnode","newVnode","oldVnodeAttrs","newVnodeAttrs","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","childNode","oldVNode","createTextNode","createElementNS","appendChild","putBackInOriginalLocation","recursive","oldSlotChildNodes","childNodes","parentReferenceNode","referenceNode","addVnodes","parentVNode","vnodes","startIdx","endIdx","containerElm","parentNode","shadowRoot","removeVnodes","callNodeRefs","isSameVnode","leftVNode","rightVNode","patch","oldChildren","newChildren","defaultHolder","textContent","oldCh","newCh","elmToMove","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","nextSibling","updateChildren","updateFallbackSlotVisibility","ilen","j","slotNameAttr","hidden","relocateNodes","relocateSlotContent","hostContentNodes","relocateNodeData","isNodeLocatedInSlot","find","$nodeToRelocate$","$slotRefNode$","relocateNode","some","nodeToRelocate","vNode","renderVdom","hostRef","renderFnResults","$hostElement$","$cmpMeta$","$vnode$","rootVnode","$attrsToReflect$","propName","attribute","supportsShadow","relocateData","orgLocationNode","parentNodeRef","insertBeforeNode","refNode","previousSibling","scheduleUpdate","isInitialLoad","$ancestorComponent$","dispatch","dispatchHooks","writeTask","endSchedule","instance","promise","emitLifecycleEvent","safeCall","updateComponent","async","endUpdate","endAttachStyles","getRootNode","$modeName$","attachStyles","endRender","callRender","postUpdateComponent","render","consoleError","endPostUpdate","method","arg","thenFn","lifecycleName","proxyComponent","Cstr","$members$","watchers","$watchers$","members","entries","memberFlags","getHostRef","$instanceValues$","newVal","oldVal","propValue","propType","parseFloat","areBothNaN","Number","isNaN","watchMethods","watchMethodName","componentShouldUpdate","setValue","configurable","attrNameToPropName","attributeChangedCallback","attrName","_oldValue","jmp","observedAttributes","initializeComponent","hmrVersionId","customElements","whenDefined","modeResolutionChain","computeMode","endRegisterStyles","allowCS","supportsConstructableStylesheets","CSSStyleSheet","replaceSync","registerStyle","schedule","fireConnectedCallback","setContentReference","contentRefElm","createComment","firstChild","proxyCustomElement","compactMeta","$listeners$","originalConnectedCallback","connectedCallback","originalDisconnectedCallback","disconnectedCallback","__registerHost","registerHost","endConnected","addHostEventListeners","$lazyInstance$","hostId","$rmListeners$","rmListener","__attachShadow","attachShadow","delegatesFocus","is","listeners","attachParentListeners","getHostListenerTarget","handler","hostListenerProxy","hostListenerOpts","methodName","supportsListenerOptions","hostRefs","console","error","window","H","HTMLElement","$resourcesUrl$","raf","listener","removeEventListener","queueDomReads","queueDomWrites","queueTask","queue","write","nextTick","flush","consume","performance","v","Config","configObj","fallback","getBoolean","val","getNumber","NaN","IONIC_PREFIX","IONIC_SESSION_KEY","setupPlatforms","Ionic","platforms","detectPlatforms","documentElement","customPlatformMethods","PLATFORMS_MAP","customMethod","isIpad","testUserAgent","isMobile","isAndroid","matchMedia","isHybrid","isCordova","isCapacitorNative","capacitor","isNative","expr","navigator","userAgent","query","matches","ipad","iphone","ios","android","phablet","width","innerWidth","height","innerHeight","smallest","min","largest","tablet","isAndroidTablet","cordova","electron","pwa","standalone","mobile","mobileweb","desktop","hybrid","defaultMode","isIonContent","ariaAttributes","clamp","debounce","func","wait","timer","args","clearTimeout","setTimeout","printIonWarning","message","params","warn","isRTL","hostEl","dir","hostContext","closest","Range","super","ionChange","ionStyle","ionFocus","ionBlur","ionKnobMoveStart","ionKnobMoveEnd","didLoad","noUpdate","hasFocus","inheritedAttributes","contentEl","initialContentScrollY","ratioA","ratioB","dualKnobs","pin","pinFormatter","round","snaps","step","ticks","clampBounds","ensureValueInBounds","lower","upper","setupGesture","rangeSlider","handleKeyboard","knob","isIncrease","updateValue","onBlur","emitStyle","onFocus","debounceChanged","original","_original","bind","debounceEvent","minChanged","updateRatio","maxChanged","activeBarStartChanged","activeBarStart","disabledChanged","valueChanged","componentWillLoad","rangeId","hasAttribute","rangeIds","ignoreList","attributesToInherit","attributes","attributeObject","attr","inheritAttributes","inheritAriaAttributes","componentDidLoad","getValue","interactive","ionContent","initialScrollY","scrollY","disableContentScrollY","rect","getBoundingClientRect","ratio","left","pressedKnob","abs","setFocus","update","resetContentScrollY","valueToRatio","ratioToValue","valA","valB","ratioLower","ratioUpper","knobEl","focus","labelText","componentEl","inputId","labelledBy","componentId","labelId","label","getElementById","itemEl","findItemLabel","getAriaLabel","getMode","barStart","barEnd","rtl","end","tickStyle","tick","barStyle","ratioMin","ratioMax","active","always","container","renderHiddenInput","JSON","stringify","onFocusin","onFocusout","color","cssClassMap","rangeEl","role","renderKnob","pressed","md","onKeyDown","preventDefault","stopPropagation","knobStyle","tabindex","IonRange","log","SliderComponent","shadow","htmlElement","styleElement","refresh","init","getHtmlTemplate","zySdk","services","registry","registerComponent","metadataVersion","icon","category","subCategory","properties","tootip","default","main","debug","userConfig","platformHelpers","helpers","_ael","_rel","_ce","configStr","sessionStorage","getItem","parse","configFromSession","persistConfig","location","search","entry","decodeURIComponent","substr","configFromURL","winOrPlatform","platform","setItem","saveConfig","getPlatforms","isIonicElement","isAllowedIonicModeValue","elmMode","parentElement","initialize","define"],"sourceRoot":""}